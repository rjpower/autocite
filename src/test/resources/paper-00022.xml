<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE pdf2xml SYSTEM "pdf2xml.dtd">

<pdf2xml>
<page number="1" position="absolute" top="0" left="0" height="1262" width="892">
	<fontspec id="0" size="15" family="Times" color="#000000"/>
	<fontspec id="1" size="11" family="Times" color="#ffffff"/>
	<fontspec id="2" size="45" family="Times" color="#008080"/>
	<fontspec id="3" size="24" family="Times" color="#000000"/>
	<fontspec id="4" size="9" family="Times" color="#000000"/>
<text top="90" left="74" width="56" height="15" font="0">Sensors</text>
<text top="89" left="135" width="320" height="16" font="0">2012, 12, 585-611; doi:10.3390/s120100585</text>
<text top="106" left="720" width="93" height="12" font="1">OPEN ACCESS</text>
<text top="123" left="671" width="146" height="43" font="2">sensors</text>
<text top="169" left="695" width="122" height="16" font="0">ISSN 1424-8220</text>
<text top="192" left="589" width="228" height="16" font="0">www.mdpi.com/journal/sensors</text>
<text top="250" left="74" width="49" height="15" font="0">Article</text>
<text top="284" left="74" width="722" height="24" font="3">FPGA Implementation for Real-Time Background Subtraction</text>
<text top="317" left="74" width="320" height="24" font="3">Based on Horprasert Model</text>
<text top="366" left="74" width="684" height="16" font="0">Rafael Rodriguez-Gomez, Enrique J. Fernandez-Sanchez , Javier Diaz and Eduardo Ros</text>
<text top="410" left="74" width="632" height="16" font="0">Department of Computer Architecture and Technology, ETS Computer Engineering and</text>
<text top="436" left="74" width="697" height="16" font="0">Telecommunications, University of Granada, C/ Periodista Daniel Saucedo s/n, E18071 Granada,</text>
<text top="462" left="74" width="724" height="16" font="0">Spain; E-Mails: rrodriguez@atc.ugr.es (R.R.-G.); jdiaz@atc.ugr.es (J.D.); eduardo@atc.ugr.es (E.R.)</text>
<text top="506" left="87" width="623" height="16" font="0">Author to whom correspondence should be addressed; E-Mail: efernandez@atc.ugr.es.</text>
<text top="550" left="74" width="691" height="15" font="0">Received: 10 December 2011; in revised form: 28 December 2011 / Accepted: 3 January 2012 /</text>
<text top="575" left="74" width="195" height="15" font="0">Published: 5 January 2012</text>
<text top="650" left="117" width="73" height="16" font="0">Abstract:</text>
<text top="650" left="207" width="569" height="16" font="0">Background subtraction is considered the ﬁrst processing stage in video</text>
<text top="676" left="117" width="659" height="16" font="0">surveillance systems, and consists of determining objects in movement in a scene captured</text>
<text top="702" left="117" width="659" height="16" font="0">by a static camera. It is an intensive task with a high computational cost. This work</text>
<text top="728" left="117" width="659" height="16" font="0">proposes an embedded novel architecture on FPGA which is able to extract the background</text>
<text top="753" left="117" width="659" height="16" font="0">on resource-limited environments and offers low degradation (produced because of the</text>
<text top="779" left="117" width="659" height="16" font="0">hardware-friendly model modiﬁcation). In addition, the original model is extended in order</text>
<text top="805" left="117" width="659" height="16" font="0">to detect shadows and improve the quality of the segmentation of the moving objects. We</text>
<text top="831" left="117" width="659" height="16" font="0">have analyzed the resource consumption and performance in Spartan3 Xilinx FPGAs and</text>
<text top="856" left="117" width="659" height="16" font="0">compared to others works available on the literature, showing that the current architecture</text>
<text top="882" left="117" width="607" height="16" font="0">is a good trade-off in terms of accuracy, performance and resources utilization.</text>
<text top="882" left="741" width="35" height="16" font="0">With</text>
<text top="908" left="117" width="659" height="16" font="0">less than a 65% of the resources utilization of a XC3SD3400 Spartan-3A low-cost family</text>
<text top="934" left="117" width="659" height="16" font="0">FPGA, the system achieves a frequency of 66.5 MHz reaching 32.8 fps with resolution</text>
<text top="960" left="117" width="506" height="16" font="0">1,024 × 1,024 pixels, and an estimated power consumption of 5.76 W.</text>
<text top="1002" left="117" width="659" height="16" font="0">Keywords: real time image processing; reconﬁgurable architectures; FPGAs; performance</text>
<text top="1028" left="117" width="198" height="16" font="0">analysis; video surveillance</text>
</page>
<page number="2" position="absolute" top="0" left="0" height="1262" width="892">
	<fontspec id="5" size="15" family="Times" color="#0000ff"/>
<text top="75" left="74" width="56" height="15" font="0">Sensors</text>
<text top="75" left="135" width="63" height="16" font="0">2012, 12</text>
<text top="75" left="792" width="27" height="16" font="0">586</text>
<text top="131" left="74" width="115" height="16" font="0">1. Introduction</text>
<text top="175" left="96" width="723" height="16" font="0">Extracting background from a video sequence is a required feature for many applications related</text>
<text top="200" left="74" width="744" height="16" font="0">to video surveillance: vehicle trafﬁc control, intruders’ detection, suspicious objects, etc. The most</text>
<text top="226" left="74" width="744" height="16" font="0">usual approach to segment moving objects is known as background subtraction, and is considered a key</text>
<text top="252" left="74" width="744" height="16" font="0">ﬁrst stage in video surveillance systems. This technique consists of building a reference model which</text>
<text top="278" left="74" width="744" height="16" font="0">represents the static background of the scene during a certain period of time. Multiple factors and events</text>
<text top="304" left="74" width="744" height="16" font="0">may affect the scene, making this ﬁrst background subtraction a non-trivial task: sudden and gradual</text>
<text top="329" left="74" width="744" height="16" font="0">illumination changes, presence of shadows, or background repetitive movements (such as waving trees),</text>
<text top="355" left="74" width="146" height="16" font="0">among many others.</text>
<text top="381" left="96" width="723" height="16" font="0">There are different methods described in the literature in order to obtain this background model</text>
<text top="407" left="74" width="617" height="16" font="0">for a scene captured by a still camera: simple models for static backgrounds <a href="pdfxml.html#25">[</a></text>
<text top="407" left="691" width="9" height="16" font="5"><a href="pdfxml.html#25">1</a></text>
<text top="407" left="700" width="4" height="16" font="0"><a href="pdfxml.html#25">,</a></text>
<text top="407" left="705" width="9" height="16" font="5"><a href="pdfxml.html#25">2</a></text>
<text top="407" left="714" width="105" height="16" font="0"><a href="pdfxml.html#25">], </a>or methods</text>
<text top="433" left="74" width="744" height="16" font="0">capable to deal with periodic and repetitive movements, i.e., waving trees or escalators such as MOG</text>
<text top="458" left="74" width="181" height="16" font="0">(Mixture of Gaussians) <a href="pdfxml.html#26">[</a></text>
<text top="458" left="256" width="9" height="16" font="5"><a href="pdfxml.html#26">3</a></text>
<text top="458" left="265" width="4" height="16" font="0"><a href="pdfxml.html#26">,</a></text>
<text top="458" left="269" width="9" height="16" font="5"><a href="pdfxml.html#26">4</a></text>
<text top="458" left="278" width="201" height="16" font="0"><a href="pdfxml.html#26">], </a>Bayesian decision rules <a href="pdfxml.html#26">[</a></text>
<text top="458" left="479" width="9" height="16" font="5"><a href="pdfxml.html#26">5</a></text>
<text top="458" left="488" width="200" height="16" font="0"><a href="pdfxml.html#26">], </a>Codebook-based model <a href="pdfxml.html#26">[</a></text>
<text top="458" left="688" width="9" height="16" font="5"><a href="pdfxml.html#26">6</a></text>
<text top="458" left="697" width="121" height="16" font="0"><a href="pdfxml.html#26">], </a>or Component</text>
<text top="484" left="74" width="199" height="16" font="0">Analysis (PCA and ICA) <a href="pdfxml.html#26">[</a></text>
<text top="484" left="273" width="9" height="16" font="5"><a href="pdfxml.html#26">7</a></text>
<text top="484" left="282" width="4" height="16" font="0"><a href="pdfxml.html#26">,</a></text>
<text top="484" left="287" width="9" height="16" font="5"><a href="pdfxml.html#26">8</a></text>
<text top="484" left="296" width="523" height="16" font="0"><a href="pdfxml.html#26">]. </a>In spite of the differences between existing algorithms, background</text>
<text top="510" left="74" width="744" height="16" font="0">subtraction techniques are computationally expensive in general, especially when they are considered</text>
<text top="536" left="74" width="744" height="16" font="0">only the ﬁrst stage in a multi-level video analytics system. For that reason, efﬁcient implementation</text>
<text top="562" left="74" width="744" height="16" font="0">is key to the development of real-time video surveillance systems. In the framework of embedded</text>
<text top="587" left="74" width="744" height="16" font="0">systems implementations, characterized by power consumption and real-time constraints, several of</text>
<text top="613" left="74" width="424" height="16" font="0">these techniques have been implemented using FPGAs <a href="pdfxml.html#26">[</a></text>
<text top="613" left="499" width="9" height="16" font="5"><a href="pdfxml.html#26">8</a></text>
<text top="613" left="508" width="9" height="16" font="0"><a href="pdfxml.html#26">–</a></text>
<text top="613" left="517" width="18" height="16" font="5"><a href="pdfxml.html#26">11</a></text>
<text top="613" left="535" width="89" height="16" font="0"><a href="pdfxml.html#26">] </a>or DSPs <a href="pdfxml.html#26">[</a></text>
<text top="613" left="624" width="18" height="16" font="5"><a href="pdfxml.html#26">12</a></text>
<text top="613" left="642" width="177" height="16" font="0"><a href="pdfxml.html#26">]. </a>There also are other</text>
<text top="639" left="74" width="261" height="16" font="0">real-time approaches using GPUs <a href="pdfxml.html#26">[</a></text>
<text top="639" left="336" width="18" height="16" font="5"><a href="pdfxml.html#26">13</a></text>
<text top="639" left="354" width="4" height="16" font="0"><a href="pdfxml.html#26">,</a></text>
<text top="639" left="358" width="18" height="16" font="5"><a href="pdfxml.html#26">14</a></text>
<text top="639" left="376" width="442" height="16" font="0"><a href="pdfxml.html#26">]. </a>In the case of embedded systems, commodity processor</text>
<text top="665" left="74" width="744" height="16" font="0">implementations are not usually utilized although latest devices, such as Intel Atom, could soon address</text>
<text top="690" left="74" width="744" height="16" font="0">this market. In this contribution, we focus on a type of implementation that ﬁts a distributed architecture.</text>
<text top="716" left="96" width="121" height="16" font="0">Oliveira et al. <a href="pdfxml.html#26">[</a></text>
<text top="716" left="217" width="18" height="16" font="5"><a href="pdfxml.html#26">11</a></text>
<text top="716" left="235" width="584" height="16" font="0"><a href="pdfxml.html#26">] </a>introduce an FPGA implementation for the Horprasert algorithm, although</text>
<text top="742" left="74" width="420" height="16" font="0">the throughput reached by this approach is fairly low.</text>
<text top="742" left="514" width="103" height="16" font="0">Jiang et al. <a href="pdfxml.html#26">[</a></text>
<text top="742" left="617" width="18" height="16" font="5"><a href="pdfxml.html#26">10</a></text>
<text top="742" left="635" width="184" height="16" font="0"><a href="pdfxml.html#26">] </a>present a compression</text>
<text top="768" left="74" width="321" height="16" font="0">scheme for Mixture of Gaussians model <a href="pdfxml.html#26">[</a></text>
<text top="768" left="395" width="9" height="16" font="5"><a href="pdfxml.html#26">3</a></text>
<text top="768" left="404" width="329" height="16" font="0"><a href="pdfxml.html#26">] </a>which allows reaching a high frame rate.</text>
<text top="768" left="750" width="68" height="16" font="0">However,</text>
<text top="794" left="74" width="744" height="16" font="0">this approach is not explained in detail, and no results are shown with regards to accuracy or power</text>
<text top="819" left="74" width="214" height="16" font="0">consumption. Appiah et al. <a href="pdfxml.html#26">[</a></text>
<text top="819" left="289" width="9" height="16" font="5"><a href="pdfxml.html#26">9</a></text>
<text top="819" left="298" width="521" height="16" font="0"><a href="pdfxml.html#26">] </a>propose an implementation based on a simpliﬁed MOG, which offers</text>
<text top="845" left="74" width="470" height="16" font="0">fairly good throughput and acceptable accuracy. Bravo et al. <a href="pdfxml.html#26">[</a></text>
<text top="845" left="544" width="9" height="16" font="5"><a href="pdfxml.html#26">8</a></text>
<text top="845" left="553" width="266" height="16" font="0"><a href="pdfxml.html#26">] </a>propose an FPGA implementation</text>
<text top="871" left="74" width="744" height="16" font="0">based on Principal Component Analysis (PCA), reaching a good throughput and specifying the resource</text>
<text top="897" left="74" width="720" height="16" font="0">consumption. Nevertheless, there are no data about accuracy with a standardized dataset. Carr <a href="pdfxml.html#26">[</a></text>
<text top="897" left="795" width="18" height="16" font="5"><a href="pdfxml.html#26">13</a></text>
<text top="897" left="813" width="6" height="16" font="0"><a href="pdfxml.html#26">]</a></text>
<text top="923" left="74" width="155" height="16" font="0">and Vu Pham et al. <a href="pdfxml.html#26">[</a></text>
<text top="923" left="230" width="18" height="16" font="5"><a href="pdfxml.html#26">14</a></text>
<text top="923" left="248" width="571" height="16" font="0"><a href="pdfxml.html#26">] </a>present GPU implementations based on MOG, with very different results in</text>
<text top="948" left="74" width="469" height="16" font="0">performance. Despite the fact that the approach described in <a href="pdfxml.html#26">[</a></text>
<text top="948" left="544" width="18" height="16" font="5"><a href="pdfxml.html#26">14</a></text>
<text top="948" left="562" width="257" height="16" font="0"><a href="pdfxml.html#26">] </a>has a higher frame rate than any</text>
<text top="974" left="74" width="744" height="16" font="0">of the other mentioned hardware implementations, being a GPU implementation is an impediment for</text>
<text top="1000" left="74" width="744" height="16" font="0">embedded systems and low power constraints. Strictly speaking, there are new GPU families oriented</text>
<text top="1026" left="74" width="744" height="16" font="0">to embedded devices that could solve that problem. However, the performance of these GPU families is</text>
<text top="1051" left="74" width="534" height="16" font="0">considerably lower than the ones of GPU used on standard PCs or laptops.</text>
<text top="1077" left="96" width="723" height="16" font="0">In our approach, we propose an FPGA architecture based on the method described by</text>
<text top="1103" left="74" width="87" height="16" font="0">Horprasert <a href="pdfxml.html#25">[</a></text>
<text top="1103" left="162" width="9" height="16" font="5"><a href="pdfxml.html#25">1</a></text>
<text top="1103" left="171" width="4" height="16" font="0"><a href="pdfxml.html#25">,</a></text>
<text top="1103" left="175" width="9" height="16" font="5"><a href="pdfxml.html#25">2</a></text>
<text top="1103" left="184" width="413" height="16" font="0"><a href="pdfxml.html#25">], </a>with the extension that allows for shadow detection <a href="pdfxml.html#26">[</a></text>
<text top="1103" left="597" width="18" height="16" font="5"><a href="pdfxml.html#26">15</a></text>
<text top="1103" left="615" width="203" height="16" font="0"><a href="pdfxml.html#26">]. </a>Thus, the use of FPGAs</text>
<text top="1129" left="74" width="744" height="16" font="0">is justiﬁed by requirements of scalability, size and low power consumption which are key features that</text>
<text top="1155" left="74" width="744" height="16" font="0">other technologies are not able to achieve. The Horprasert method has been selected since it requires</text>
</page>
<page number="3" position="absolute" top="0" left="0" height="1262" width="892">
<text top="75" left="74" width="56" height="15" font="0">Sensors</text>
<text top="75" left="135" width="63" height="16" font="0">2012, 12</text>
<text top="75" left="792" width="27" height="16" font="0">587</text>
<text top="131" left="74" width="744" height="16" font="0">less memory to store the model while keeping fairly good accuracy, hence being more suitable for</text>
<text top="157" left="74" width="262" height="16" font="0">implementation in low cost FPGAs <a href="pdfxml.html#26">[</a></text>
<text top="157" left="336" width="18" height="16" font="5"><a href="pdfxml.html#26">11</a></text>
<text top="157" left="354" width="464" height="16" font="0"><a href="pdfxml.html#26">]. </a>This algorithm builds a static background model, which means</text>
<text top="183" left="74" width="744" height="16" font="0">that the model is obtained at an initial training phase. There are other methods which build dynamic</text>
<text top="208" left="74" width="155" height="16" font="0">background models <a href="pdfxml.html#26">[</a></text>
<text top="208" left="230" width="9" height="16" font="5"><a href="pdfxml.html#26">3</a></text>
<text top="208" left="238" width="4" height="16" font="0"><a href="pdfxml.html#26">,</a></text>
<text top="208" left="243" width="9" height="16" font="5"><a href="pdfxml.html#26">6</a></text>
<text top="208" left="252" width="567" height="16" font="0"><a href="pdfxml.html#26">], </a>which can adapt themselves to changes in the scene. The main difference</text>
<text top="234" left="74" width="744" height="16" font="0">between these models, as far as required hardware resources are concerned, is that the latter have much</text>
<text top="260" left="74" width="744" height="16" font="0">higher memory consumption requiring external memory with an important bandwidth. Furthermore, the</text>
<text top="286" left="74" width="744" height="16" font="0">shadow detection capabilities increase the accuracy of the object shape detection, which helps to achieve</text>
<text top="311" left="74" width="543" height="16" font="0">a better object classiﬁcation and reduces the errors due to shadows artifacts.</text>
<text top="337" left="96" width="723" height="16" font="0">Therefore, the main contribution of this paper is the implementation of a background subtraction</text>
<text top="363" left="74" width="744" height="16" font="0">model based on Horprasert and extended to allow shadow management in FPGA. This added feature</text>
<text top="389" left="74" width="744" height="16" font="0">as well as a careful design, keeping appropriate bit depth in different variables computed with ﬁxed</text>
<text top="415" left="74" width="744" height="16" font="0">point arithmetics, enhance the accuracy compared to previous hardware-based approaches described</text>
<text top="440" left="74" width="744" height="16" font="0">in the literature whilst maintaining good throughput (more than 35 times faster than the previous</text>
<text top="466" left="74" width="205" height="16" font="0">Horprasert-based approach <a href="pdfxml.html#26">[</a></text>
<text top="466" left="280" width="18" height="16" font="5"><a href="pdfxml.html#26">11</a></text>
<text top="466" left="298" width="521" height="16" font="0"><a href="pdfxml.html#26">]). </a>This high data throughput is achieved through an intensively parallel</text>
<text top="492" left="74" width="744" height="16" font="0">design. This approach targets low end embedded devices. In order to properly evaluate the presented</text>
<text top="518" left="74" width="744" height="16" font="0">implementation, a comparison with other approaches is included, which is something rarely covered in</text>
<text top="544" left="74" width="744" height="16" font="0">the literature related to hardware implementation of background subtraction models. This comparative</text>
<text top="569" left="74" width="744" height="16" font="0">study integrates estimations related to the implemented model accuracy and also data throughput to better</text>
<text top="595" left="74" width="744" height="16" font="0">evaluate the proposed system in the framework of real-time approaches. To the best of our knowledge this</text>
<text top="621" left="74" width="744" height="16" font="0">complete comparative study including computational performance in terms of accuracy and efﬁciency</text>
<text top="647" left="74" width="725" height="16" font="0">has not been reported before and allows comparisons with future alternatives in this application ﬁeld.</text>
<text top="672" left="96" width="723" height="16" font="0">The proposed architecture has been designed with the development environment for System-on-Chip</text>
<text top="698" left="74" width="224" height="16" font="0">(SoC) design, EDK of Xilinx <a href="pdfxml.html#26">[</a></text>
<text top="698" left="298" width="18" height="16" font="5"><a href="pdfxml.html#26">16</a></text>
<text top="698" left="316" width="502" height="16" font="0"><a href="pdfxml.html#26">], </a>and includes the Microblaze processor, which will be used to build</text>
<text top="724" left="74" width="744" height="16" font="0">the reference background model and can be used for updating over time. The next stages of subtraction</text>
<text top="750" left="74" width="744" height="16" font="0">and pixel by pixel classiﬁcation will be performed by a speciﬁc hardware module using ﬁxed-point</text>
<text top="776" left="74" width="682" height="16" font="0">operations in order to keep real-time performance from up to four still cameras simultaneously.</text>
<text top="801" left="96" width="354" height="16" font="0">The paper is organized as follows. In Section</text>
<text top="801" left="458" width="9" height="16" font="5"><a href="pdfxml.html#3">2</a></text>
<text top="801" left="475" width="344" height="16" font="0">we brieﬂy describe the background model by</text>
<text top="827" left="74" width="130" height="16" font="0">Horprasert et al. <a href="pdfxml.html#25">[</a></text>
<text top="827" left="204" width="9" height="16" font="5"><a href="pdfxml.html#25">1</a></text>
<text top="827" left="213" width="605" height="16" font="0"><a href="pdfxml.html#25">], </a>including the notation required in order to be able to follow the rest of the paper.</text>
<text top="853" left="74" width="54" height="16" font="0">Section</text>
<text top="853" left="132" width="9" height="16" font="5"><a href="pdfxml.html#5">3</a></text>
<text top="853" left="146" width="673" height="16" font="0">shows the developed hardware architecture, including a study of the ﬁxed point arithmetic, the</text>
<text top="879" left="74" width="681" height="16" font="0">background subtraction stage and the technique for morphological ﬁltering on FPGA. In Section</text>
<text top="879" left="759" width="9" height="16" font="5"><a href="pdfxml.html#15">4</a></text>
<text top="879" left="772" width="47" height="16" font="0">results</text>
<text top="905" left="74" width="744" height="16" font="0">are shown and analyzed, regarding system performance and comparison with other hardware approaches</text>
<text top="930" left="74" width="744" height="16" font="0">as well as accuracy results obtained by the algorithm. Finally, conclusions and future work are presented</text>
<text top="956" left="74" width="72" height="16" font="0">in Section</text>
<text top="956" left="151" width="9" height="16" font="5"><a href="pdfxml.html#24">5</a></text>
<text top="956" left="160" width="4" height="16" font="0"><a href="pdfxml.html#24">.</a></text>
<text top="1000" left="74" width="272" height="16" font="0">2. Background Subtraction Method</text>
<text top="1044" left="96" width="205" height="16" font="0">As previously mentioned,</text>
<text top="1044" left="318" width="501" height="16" font="0">our implementation is based on the algorithm proposed by</text>
<text top="1069" left="74" width="128" height="16" font="0">Horprasert et al. <a href="pdfxml.html#25">[</a></text>
<text top="1069" left="202" width="9" height="16" font="5"><a href="pdfxml.html#25">1</a></text>
<text top="1069" left="211" width="10" height="16" font="0"><a href="pdfxml.html#25">].</a></text>
<text top="1069" left="237" width="581" height="16" font="0">This algorithm basically obtains a reference image to model the background</text>
<text top="1095" left="74" width="744" height="16" font="0">of the scene so that it can perform automatic threshold selection, subtraction operation and, ﬁnally,</text>
<text top="1121" left="74" width="177" height="16" font="0">pixel-wise classiﬁcation.</text>
</page>
<page number="4" position="absolute" top="0" left="0" height="1262" width="892">
	<fontspec id="6" size="6" family="Times" color="#000000"/>
<text top="75" left="74" width="56" height="15" font="0">Sensors</text>
<text top="75" left="135" width="63" height="16" font="0">2012, 12</text>
<text top="75" left="792" width="27" height="16" font="0">588</text>
<text top="131" left="74" width="168" height="15" font="0">2.1. Background Model</text>
<text top="175" left="96" width="723" height="16" font="0">In order to build a reference image which represents the background, a number N of images will be</text>
<text top="200" left="74" width="744" height="16" font="0">used, whose color space is given in RGB. Each pixel &lt; i &gt; from the image is modeled by a 4-tuple</text>
<text top="226" left="74" width="32" height="16" font="0">&lt; E</text>
<text top="233" left="106" width="4" height="11" font="4">i</text>
<text top="226" left="111" width="20" height="16" font="0">, S</text>
<text top="233" left="131" width="4" height="11" font="4">i</text>
<text top="226" left="136" width="18" height="16" font="0">, a</text>
<text top="233" left="154" width="4" height="11" font="4">i</text>
<text top="226" left="159" width="16" height="16" font="0">, b</text>
<text top="233" left="176" width="4" height="11" font="4">i</text>
<text top="226" left="186" width="321" height="16" font="0">&gt;, where each element is deﬁned as follows:</text>
<text top="266" left="96" width="31" height="17" font="0">• E</text>
<text top="274" left="127" width="4" height="11" font="4">i</text>
<text top="267" left="137" width="275" height="16" font="0">the expected color value, deﬁned as E</text>
<text top="274" left="411" width="4" height="11" font="4">i</text>
<text top="267" left="422" width="35" height="16" font="0">= [µ</text>
<text top="274" left="457" width="10" height="11" font="4">R</text>
<text top="267" left="467" width="38" height="16" font="0">(i), µ</text>
<text top="274" left="505" width="10" height="11" font="4">G</text>
<text top="267" left="516" width="38" height="16" font="0">(i), µ</text>
<text top="274" left="554" width="10" height="11" font="4">B</text>
<text top="267" left="565" width="81" height="16" font="0">(i)], with µ</text>
<text top="274" left="646" width="10" height="11" font="4">R</text>
<text top="267" left="656" width="38" height="16" font="0">(i), µ</text>
<text top="274" left="695" width="10" height="11" font="4">G</text>
<text top="267" left="705" width="38" height="16" font="0">(i), µ</text>
<text top="274" left="743" width="10" height="11" font="4">B</text>
<text top="267" left="754" width="64" height="16" font="0">(i) being</text>
<text top="293" left="114" width="388" height="16" font="0">the arithmetic means of each color channel for pixel i.</text>
<text top="317" left="96" width="29" height="17" font="0">• S</text>
<text top="325" left="125" width="4" height="11" font="4">i</text>
<text top="319" left="134" width="505" height="16" font="0">the value of the color standard deviation for each channel, deﬁned as S</text>
<text top="325" left="639" width="4" height="11" font="4">i</text>
<text top="318" left="649" width="33" height="16" font="0">= [σ</text>
<text top="325" left="683" width="10" height="11" font="4">R</text>
<text top="318" left="693" width="37" height="16" font="0">(i), σ</text>
<text top="325" left="730" width="10" height="11" font="4">G</text>
<text top="318" left="741" width="37" height="16" font="0">(i), σ</text>
<text top="325" left="779" width="10" height="11" font="4">B</text>
<text top="318" left="789" width="29" height="16" font="0">(i)].</text>
<text top="343" left="96" width="27" height="17" font="0">• a</text>
<text top="351" left="123" width="4" height="11" font="4">i</text>
<text top="344" left="136" width="683" height="16" font="0">the variation of the brightness distortion, computed as the root mean square (RMS) of the</text>
<text top="370" left="114" width="163" height="16" font="0">brightness distortion α</text>
<text top="377" left="276" width="4" height="11" font="4">i</text>
<text top="370" left="281" width="150" height="16" font="0">, given by Equation <a href="pdfxml.html#4">(</a></text>
<text top="370" left="432" width="9" height="16" font="5"><a href="pdfxml.html#4">1</a></text>
<text top="370" left="441" width="10" height="16" font="0"><a href="pdfxml.html#4">).</a></text>
<text top="443" left="288" width="11" height="16" font="0">α</text>
<text top="450" left="299" width="4" height="11" font="4">i</text>
<text top="443" left="309" width="14" height="16" font="0">=</text>
<text top="411" left="332" width="8" height="16" font="0">I</text>
<text top="417" left="339" width="10" height="11" font="4">R</text>
<text top="411" left="350" width="30" height="16" font="0">(i)µ</text>
<text top="417" left="380" width="10" height="11" font="4">R</text>
<text top="411" left="390" width="20" height="16" font="0">(i)</text>
<text top="431" left="351" width="10" height="16" font="0">σ</text>
<text top="429" left="361" width="6" height="11" font="4">2</text>
<text top="440" left="361" width="10" height="11" font="4">R</text>
<text top="431" left="371" width="20" height="16" font="0">(i)</text>
<text top="421" left="416" width="14" height="16" font="0">+</text>
<text top="411" left="435" width="8" height="16" font="0">I</text>
<text top="417" left="443" width="10" height="11" font="4">G</text>
<text top="411" left="454" width="30" height="16" font="0">(i)µ</text>
<text top="417" left="484" width="10" height="11" font="4">G</text>
<text top="411" left="495" width="20" height="16" font="0">(i)</text>
<text top="431" left="455" width="10" height="16" font="0">σ</text>
<text top="429" left="465" width="6" height="11" font="4">2</text>
<text top="440" left="465" width="10" height="11" font="4">G</text>
<text top="431" left="475" width="20" height="16" font="0">(i)</text>
<text top="421" left="520" width="14" height="16" font="0">+</text>
<text top="411" left="539" width="8" height="16" font="0">I</text>
<text top="417" left="547" width="10" height="11" font="4">B</text>
<text top="411" left="558" width="30" height="16" font="0">(i)µ</text>
<text top="417" left="588" width="10" height="11" font="4">B</text>
<text top="411" left="599" width="20" height="16" font="0">(i)</text>
<text top="431" left="559" width="10" height="16" font="0">σ</text>
<text top="429" left="569" width="6" height="11" font="4">2</text>
<text top="440" left="569" width="10" height="11" font="4">B</text>
<text top="431" left="580" width="20" height="16" font="0">(i)</text>
<text top="460" left="352" width="11" height="16" font="0">µ</text>
<text top="467" left="362" width="10" height="11" font="4">R</text>
<text top="460" left="373" width="20" height="16" font="0">(i)</text>
<text top="480" left="352" width="10" height="16" font="0">σ</text>
<text top="487" left="362" width="10" height="11" font="4">R</text>
<text top="480" left="372" width="20" height="16" font="0">(i)</text>
<text top="453" left="407" width="6" height="11" font="4">2</text>
<text top="470" left="418" width="14" height="16" font="0">+</text>
<text top="460" left="451" width="11" height="16" font="0">µ</text>
<text top="467" left="462" width="10" height="11" font="4">G</text>
<text top="460" left="472" width="20" height="16" font="0">(i)</text>
<text top="480" left="451" width="10" height="16" font="0">σ</text>
<text top="487" left="461" width="10" height="11" font="4">G</text>
<text top="480" left="472" width="20" height="16" font="0">(i)</text>
<text top="453" left="507" width="6" height="11" font="4">2</text>
<text top="470" left="518" width="14" height="16" font="0">+</text>
<text top="460" left="551" width="11" height="16" font="0">µ</text>
<text top="467" left="561" width="10" height="11" font="4">B</text>
<text top="460" left="572" width="20" height="16" font="0">(i)</text>
<text top="480" left="551" width="10" height="16" font="0">σ</text>
<text top="487" left="561" width="10" height="11" font="4">B</text>
<text top="480" left="572" width="20" height="16" font="0">(i)</text>
<text top="453" left="607" width="6" height="11" font="4">2</text>
<text top="443" left="798" width="21" height="16" font="0">(1)</text>
<text top="510" left="96" width="25" height="17" font="0">• b</text>
<text top="518" left="121" width="4" height="11" font="4">i</text>
<text top="511" left="132" width="610" height="16" font="0">the variation of chromaticity distortion, the RMS of the chromaticity distortion CD</text>
<text top="518" left="742" width="4" height="11" font="4">i</text>
<text top="511" left="747" width="72" height="16" font="0">, which is</text>
<text top="537" left="114" width="167" height="16" font="0">described in Equation <a href="pdfxml.html#4">(</a></text>
<text top="537" left="281" width="9" height="16" font="5"><a href="pdfxml.html#4">2</a></text>
<text top="537" left="290" width="10" height="16" font="0"><a href="pdfxml.html#4">).</a></text>
<text top="599" left="165" width="28" height="16" font="0">CD</text>
<text top="606" left="193" width="4" height="11" font="4">i</text>
<text top="599" left="203" width="14" height="16" font="0">=</text>
<text top="587" left="255" width="8" height="16" font="0">I</text>
<text top="594" left="263" width="10" height="11" font="4">R</text>
<text top="587" left="273" width="53" height="16" font="0">(i) − α</text>
<text top="594" left="326" width="4" height="11" font="4">i</text>
<text top="587" left="331" width="11" height="16" font="0">µ</text>
<text top="594" left="342" width="10" height="11" font="4">R</text>
<text top="587" left="352" width="20" height="16" font="0">(i)</text>
<text top="611" left="293" width="10" height="16" font="0">σ</text>
<text top="618" left="303" width="10" height="11" font="4">R</text>
<text top="611" left="314" width="20" height="16" font="0">(i)</text>
<text top="582" left="387" width="6" height="11" font="4">2</text>
<text top="599" left="398" width="14" height="16" font="0">+</text>
<text top="587" left="430" width="8" height="16" font="0">I</text>
<text top="594" left="438" width="10" height="11" font="4">G</text>
<text top="587" left="449" width="53" height="16" font="0">(i) − α</text>
<text top="594" left="501" width="4" height="11" font="4">i</text>
<text top="587" left="506" width="11" height="16" font="0">µ</text>
<text top="594" left="517" width="10" height="11" font="4">G</text>
<text top="587" left="528" width="20" height="16" font="0">(i)</text>
<text top="611" left="469" width="10" height="16" font="0">σ</text>
<text top="618" left="479" width="10" height="11" font="4">G</text>
<text top="611" left="489" width="20" height="16" font="0">(i)</text>
<text top="582" left="562" width="6" height="11" font="4">2</text>
<text top="599" left="573" width="14" height="16" font="0">+</text>
<text top="587" left="606" width="8" height="16" font="0">I</text>
<text top="594" left="614" width="10" height="11" font="4">B</text>
<text top="587" left="625" width="53" height="16" font="0">(i) − α</text>
<text top="594" left="677" width="4" height="11" font="4">i</text>
<text top="587" left="682" width="11" height="16" font="0">µ</text>
<text top="594" left="693" width="10" height="11" font="4">B</text>
<text top="587" left="704" width="20" height="16" font="0">(i)</text>
<text top="611" left="645" width="10" height="16" font="0">σ</text>
<text top="618" left="655" width="10" height="11" font="4">B</text>
<text top="611" left="665" width="20" height="16" font="0">(i)</text>
<text top="582" left="739" width="6" height="11" font="4">2</text>
<text top="599" left="798" width="21" height="16" font="0">(2)</text>
<text top="647" left="96" width="613" height="16" font="0">More detailed information about how the background model is built can be found in <a href="pdfxml.html#25">[</a></text>
<text top="647" left="708" width="9" height="16" font="5"><a href="pdfxml.html#25">1</a></text>
<text top="647" left="717" width="10" height="16" font="0"><a href="pdfxml.html#25">].</a></text>
<text top="691" left="74" width="327" height="15" font="0">2.2. Subtraction Operation and Classiﬁcation</text>
<text top="735" left="96" width="723" height="16" font="0">In this stage, the difference between the background model and the current image is evaluated. This</text>
<text top="760" left="74" width="464" height="16" font="0">difference consists of two components: brightness distortion α</text>
<text top="767" left="538" width="4" height="11" font="4">i</text>
<text top="760" left="550" width="233" height="16" font="0">and chromaticity distortion CD</text>
<text top="767" left="783" width="4" height="11" font="4">i</text>
<text top="760" left="788" width="31" height="16" font="0">. In</text>
<text top="786" left="74" width="530" height="16" font="0">order to use a single threshold for all pixels, it is necessary to normalize α</text>
<text top="793" left="605" width="4" height="11" font="4">i</text>
<text top="786" left="614" width="59" height="16" font="0">and CD</text>
<text top="793" left="673" width="4" height="11" font="4">i</text>
<text top="786" left="683" width="78" height="16" font="0">as follows:</text>
<text top="833" left="412" width="9" height="16" font="0">ˆ</text>
<text top="833" left="410" width="11" height="16" font="0">α</text>
<text top="840" left="421" width="4" height="11" font="4">i</text>
<text top="833" left="431" width="14" height="16" font="0">=</text>
<text top="821" left="452" width="11" height="16" font="0">α</text>
<text top="828" left="463" width="4" height="11" font="4">i</text>
<text top="820" left="472" width="27" height="17" font="0">− 1</text>
<text top="845" left="468" width="9" height="16" font="0">a</text>
<text top="852" left="477" width="4" height="11" font="4">i</text>
<text top="833" left="798" width="21" height="16" font="0">(3)</text>
<text top="877" left="402" width="9" height="16" font="0">ˆ</text>
<text top="882" left="392" width="28" height="16" font="0">CD</text>
<text top="889" left="421" width="4" height="11" font="4">i</text>
<text top="882" left="431" width="14" height="16" font="0">=</text>
<text top="870" left="452" width="28" height="16" font="0">CD</text>
<text top="877" left="480" width="4" height="11" font="4">i</text>
<text top="894" left="462" width="7" height="16" font="0">b</text>
<text top="901" left="470" width="4" height="11" font="4">i</text>
<text top="882" left="798" width="21" height="16" font="0">(4)</text>
<text top="929" left="96" width="723" height="16" font="0">After the normalization of brightness and chromaticity distortions, the given pixel can be classiﬁed</text>
<text top="955" left="74" width="744" height="16" font="0">into one of the four categories, i.e., Background, Shadowed background, Highlighted background and</text>
<text top="981" left="74" width="83" height="15" font="0">Foreground</text>
<text top="980" left="157" width="379" height="16" font="0">, by the decision procedure described in Equation <a href="pdfxml.html#4">(</a></text>
<text top="980" left="536" width="9" height="16" font="5"><a href="pdfxml.html#4">5</a></text>
<text top="980" left="545" width="274" height="16" font="0"><a href="pdfxml.html#4">), </a>that is the analytical representation</text>
<text top="1006" left="74" width="311" height="16" font="0">derived from the model presented in Figure</text>
<text top="1006" left="390" width="9" height="16" font="5"><a href="pdfxml.html#5">1</a></text>
<text top="1006" left="399" width="4" height="16" font="0"><a href="pdfxml.html#5">.</a></text>
<text top="1100" left="203" width="52" height="16" font="0">C(i) =</text>
<text top="1048" left="260" width="16" height="8" font="0"></text>
<text top="1064" left="260" width="16" height="8" font="0"></text>
<text top="1069" left="260" width="16" height="8" font="0"></text>
<text top="1074" left="260" width="16" height="8" font="0"></text>
<text top="1080" left="260" width="16" height="8" font="0"></text>
<text top="1085" left="260" width="16" height="8" font="0"></text>
<text top="1091" left="260" width="16" height="8" font="0"></text>
<text top="1123" left="260" width="16" height="8" font="0"></text>
<text top="1128" left="260" width="16" height="8" font="0"></text>
<text top="1134" left="260" width="16" height="8" font="0"></text>
<text top="1139" left="260" width="16" height="8" font="0"></text>
<text top="1144" left="260" width="16" height="8" font="0"></text>
<text top="1150" left="260" width="16" height="8" font="0"></text>
<text top="1055" left="276" width="88" height="16" font="0">Foreground:</text>
<text top="1050" left="484" width="9" height="16" font="0">ˆ</text>
<text top="1055" left="474" width="28" height="16" font="0">CD</text>
<text top="1062" left="503" width="4" height="11" font="4">i</text>
<text top="1055" left="513" width="26" height="16" font="0">&gt; τ</text>
<text top="1062" left="539" width="20" height="11" font="4">CD</text>
<text top="1055" left="561" width="39" height="16" font="0">, or ˆ</text>
<text top="1055" left="589" width="11" height="16" font="0">α</text>
<text top="1062" left="600" width="4" height="11" font="4">i</text>
<text top="1055" left="610" width="26" height="16" font="0">&lt; τ</text>
<text top="1062" left="637" width="18" height="11" font="4">αlo</text>
<text top="1055" left="660" width="28" height="16" font="0">else</text>
<text top="1086" left="276" width="93" height="16" font="0">Background:</text>
<text top="1086" left="476" width="9" height="16" font="0">ˆ</text>
<text top="1086" left="474" width="11" height="16" font="0">α</text>
<text top="1093" left="485" width="4" height="11" font="4">i</text>
<text top="1086" left="495" width="26" height="16" font="0">&gt; τ</text>
<text top="1093" left="522" width="8" height="11" font="4">α</text>
<text top="1096" left="530" width="5" height="8" font="6">1</text>
<text top="1086" left="537" width="50" height="16" font="0">, and ˆ</text>
<text top="1086" left="576" width="11" height="16" font="0">α</text>
<text top="1093" left="587" width="4" height="11" font="4">i</text>
<text top="1085" left="597" width="27" height="17" font="0">≥ τ</text>
<text top="1093" left="624" width="15" height="11" font="4">α2</text>
<text top="1086" left="644" width="28" height="16" font="0">else</text>
<text top="1117" left="276" width="168" height="16" font="0">Shadowed background:</text>
<text top="1117" left="476" width="9" height="16" font="0">ˆ</text>
<text top="1117" left="474" width="11" height="16" font="0">α</text>
<text top="1124" left="485" width="4" height="11" font="4">i</text>
<text top="1117" left="495" width="64" height="16" font="0">&lt; 0, else</text>
<text top="1148" left="276" width="180" height="16" font="0">Highlighted background:</text>
<text top="1148" left="474" width="70" height="16" font="0">otherwise</text>
<text top="1100" left="798" width="21" height="16" font="0">(5)</text>
</page>
<page number="5" position="absolute" top="0" left="0" height="1262" width="892">
<text top="75" left="74" width="56" height="15" font="0">Sensors</text>
<text top="75" left="135" width="63" height="16" font="0">2012, 12</text>
<text top="75" left="792" width="27" height="16" font="0">589</text>
<text top="131" left="117" width="659" height="16" font="0">Figure 1. Graphic representation of the model used to classify the pixels in the categories.</text>
<text top="157" left="117" width="659" height="16" font="0">This model is oriented to shadow and highlights detection, taking into account chromaticity</text>
<text top="183" left="117" width="253" height="16" font="0">lines as well as brightness changes.</text>
<text top="638" left="96" width="123" height="16" font="0">The thresholds τ</text>
<text top="644" left="218" width="20" height="11" font="4">CD</text>
<text top="638" left="240" width="19" height="16" font="0">, τ</text>
<text top="644" left="259" width="15" height="11" font="4">α1</text>
<text top="638" left="274" width="19" height="16" font="0">, τ</text>
<text top="644" left="294" width="15" height="11" font="4">α2</text>
<text top="638" left="316" width="503" height="16" font="0">are automatically selected from the information obtained during the</text>
<text top="663" left="74" width="224" height="16" font="0">training stage, as explained in <a href="pdfxml.html#25">[</a></text>
<text top="663" left="298" width="9" height="16" font="5"><a href="pdfxml.html#25">1</a></text>
<text top="663" left="307" width="24" height="16" font="0"><a href="pdfxml.html#25">]. </a>τ</text>
<text top="670" left="331" width="18" height="11" font="4">αlo</text>
<text top="663" left="354" width="449" height="16" font="0">is a lower bound used to avoid misclassiﬁcation of dark pixels.</text>
<text top="689" left="96" width="694" height="16" font="0">This approach to shadow detection is considered a Statistical non-parametric (SNP) method <a href="pdfxml.html#26">[</a></text>
<text top="689" left="790" width="18" height="16" font="5"><a href="pdfxml.html#26">15</a></text>
<text top="689" left="808" width="10" height="16" font="0"><a href="pdfxml.html#26">],</a></text>
<text top="715" left="74" width="744" height="16" font="0">what means that the approach uses probabilistic functions to describe the class membership, and it</text>
<text top="741" left="74" width="744" height="16" font="0">is non-parametric since the thresholds are automatically determined by means of a statistical learning</text>
<text top="767" left="74" width="744" height="16" font="0">procedure. As previously mentioned, this stage is performed by a hardware module. For that reason,</text>
<text top="792" left="74" width="744" height="16" font="0">several modiﬁcations have been made in order to reduce the hardware complexity of the architecture.</text>
<text top="818" left="74" width="744" height="16" font="0">These simpliﬁcations towards a hardware friendly model generate some degradation on the original</text>
<text top="844" left="74" width="744" height="16" font="0">model’s quality that will be evaluated in subsequent sections. These modiﬁcations will be described in</text>
<text top="870" left="74" width="54" height="16" font="0">Section</text>
<text top="870" left="133" width="22" height="16" font="5"><a href="pdfxml.html#8">3.1</a></text>
<text top="870" left="155" width="4" height="16" font="0"><a href="pdfxml.html#8">.</a></text>
<text top="913" left="74" width="197" height="16" font="0">3. Hardware Architecture</text>
<text top="957" left="96" width="723" height="16" font="0">An optimized hardware architecture has been developed using novel ideas that allow for a high degree</text>
<text top="983" left="74" width="744" height="16" font="0">of algorithm tuning for optimized digital hardware implementation. They can be summarized as follows:</text>
<text top="1022" left="96" width="238" height="17" font="0">• Hardware/software co-design.</text>
<text top="1024" left="351" width="467" height="16" font="0">The use of a mixed hardware/software architecture allows us</text>
<text top="1049" left="114" width="705" height="16" font="0">to share its resources to solve many algorithm stages as the ones related with communication,</text>
<text top="1075" left="114" width="705" height="16" font="0">system initialization, basic control, system debugging, etc. . . . It is not necessary to develop custom</text>
<text top="1101" left="114" width="705" height="16" font="0">datapaths for these stages because no critical real-time restrictions are imposed to them. This</text>
<text top="1127" left="114" width="705" height="16" font="0">permits to reduce hardware resources, to extend the system ﬂexibility and to signiﬁcantly reduce</text>
<text top="1153" left="114" width="133" height="16" font="0">development time.</text>
</page>
<page number="6" position="absolute" top="0" left="0" height="1262" width="892">
<text top="75" left="74" width="56" height="15" font="0">Sensors</text>
<text top="75" left="135" width="63" height="16" font="0">2012, 12</text>
<text top="75" left="792" width="27" height="16" font="0">590</text>
<text top="130" left="96" width="722" height="17" font="0">• Superscalar and pipelined architecture. Multiple functional units run in parallel to adapt the</text>
<text top="157" left="114" width="705" height="16" font="0">intrinsic algorithm parallelism. The whole implementation has been carefully pipelined in order to</text>
<text top="183" left="114" width="705" height="16" font="0">increase the throughput. These strategies allow us to keep the pixel-rate very high and to achieve a</text>
<text top="208" left="114" width="174" height="16" font="0">signiﬁcant performance.</text>
<text top="233" left="96" width="722" height="17" font="0">• Adaptable ﬁxed-point arithmetics. The bit-width of the different processing stages has been tuned</text>
<text top="260" left="114" width="705" height="16" font="0">according to the accuracy requirements of each processing element. This approach is very different</text>
<text top="286" left="114" width="705" height="16" font="0">from the one used on many DSPs or digital hardware implementations that has a basic bit-width for</text>
<text top="311" left="114" width="705" height="16" font="0">all the processing stages. Our approach allows us to keep resources always tuned to the required</text>
<text top="337" left="114" width="705" height="16" font="0">accuracy at the cost of increasing the complexity of the system design. Hopefully, the use of high-</text>
<text top="363" left="114" width="705" height="16" font="0">level description languages helps to reduce the development time and make this option feasible</text>
<text top="389" left="114" width="204" height="16" font="0">with acceptable design time.</text>
<text top="413" left="96" width="722" height="17" font="0">• Proper utilization of the right level of abstraction for description of the different algorithm modules.</text>
<text top="440" left="114" width="705" height="16" font="0">The processing stages mainly require a DSP-based design ﬂow which is well described using</text>
<text top="466" left="114" width="441" height="16" font="0">high-level description languages (as provided by ImpulseC <a href="pdfxml.html#26">[</a></text>
<text top="466" left="555" width="18" height="16" font="5"><a href="pdfxml.html#26">17</a></text>
<text top="466" left="573" width="246" height="16" font="0"><a href="pdfxml.html#26">]) </a>whilst basic controllers such as</text>
<text top="492" left="114" width="705" height="16" font="0">the ones required for memory interfaces or low level communications are better described in RTL</text>
<text top="518" left="114" width="705" height="16" font="0">(for instance using VHDL or Verilog). In addition, sequential operations such as the ones required</text>
<text top="544" left="114" width="705" height="16" font="0">to build communication packages are well described by software code. Our implementation uses</text>
<text top="569" left="114" width="705" height="16" font="0">different descriptions based on the previous considerations. This enables to get the maximum</text>
<text top="595" left="114" width="587" height="16" font="0">output out of each description level in terms of performance or development time.</text>
<text top="635" left="96" width="723" height="16" font="0">As it could be understood from the previous sentences, the advantage of our implementation relies on</text>
<text top="660" left="74" width="744" height="16" font="0">the combination of the latest design methodologies, seldom addressed together in the same design. The</text>
<text top="686" left="74" width="744" height="16" font="0">drawback of this novel approach is that it requires a high degree of competences at many different design</text>
<text top="712" left="74" width="744" height="16" font="0">levels, languages and tools. Nevertheless, the advantage is that it allows highly optimized designs that</text>
<text top="738" left="74" width="259" height="16" font="0">completely ﬁt the target application.</text>
<text top="763" left="96" width="694" height="16" font="0">In order to address this implementation, we use EDK (Embedded Developer’s Kit) of Xilinx Inc. <a href="pdfxml.html#26">[</a></text>
<text top="763" left="790" width="18" height="16" font="5"><a href="pdfxml.html#26">16</a></text>
<text top="763" left="808" width="10" height="16" font="0"><a href="pdfxml.html#26">].</a></text>
<text top="789" left="74" width="744" height="16" font="0">The EDK environment facilitates the design of complex and completely modular SoC architectures able</text>
<text top="815" left="74" width="744" height="16" font="0">to support embedded microprocessors (MicroBlaze, PowerPC, . . .), peripheral and memory controllers</text>
<text top="841" left="74" width="744" height="16" font="0">(Ethernet, DDR2, ZBT, . . .), and interconnecting buses (PLB, NPI, MCH, FSL, . . .), whilst IP cores for</text>
<text top="867" left="74" width="744" height="16" font="0">speciﬁc processing can be designed using HDL languages through the ISE tool. As board we use the</text>
<text top="892" left="74" width="404" height="16" font="0">ViSmart4 video processing board from Seven Solutions <a href="pdfxml.html#27">[</a></text>
<text top="892" left="478" width="18" height="16" font="5"><a href="pdfxml.html#27">18</a></text>
<text top="892" left="496" width="323" height="16" font="0"><a href="pdfxml.html#27">], </a>including: two Xilinx XC3SD3400aFG676</text>
<text top="918" left="74" width="744" height="16" font="0">FPGAs, two 256 MB DDR2 DIMM memory modules, four independent analog video inputs, two</text>
<text top="944" left="74" width="744" height="16" font="0">gigabit ethernet connections, 485 connection, a 3G connection module, a 64 MB Flash memory, and</text>
<text top="970" left="74" width="744" height="16" font="0">two 1 MB × 36 bits ZBT memories. In our case, we have only used one of the FPGAs included in the</text>
<text top="996" left="74" width="476" height="16" font="0">ViSmart board, the other one is used for communication purposes.</text>
<text top="1021" left="96" width="623" height="16" font="0">This architecture consists of several modules and interconnect buses, as shown in Figure</text>
<text top="1021" left="722" width="9" height="16" font="5"><a href="pdfxml.html#7">2</a></text>
<text top="1021" left="731" width="87" height="16" font="0"><a href="pdfxml.html#7">. </a>Processing</text>
<text top="1047" left="74" width="744" height="16" font="0">modules, peripherals and a Microblaze processor are connected to a PLB bus. The VIDEOIN module</text>
<text top="1073" left="74" width="744" height="16" font="0">captures images from four independent analog inputs and stores them in a ZBT SSRAM external</text>
<text top="1099" left="74" width="744" height="16" font="0">memory, through the MCH port of the XPS MCH EMC memory interface module. Through the PLB bus,</text>
<text top="1124" left="74" width="744" height="16" font="0">Microblaze has access to: memory regions (ZBT or DDR2), conﬁguration registers of the peripherals</text>
<text top="1150" left="74" width="744" height="16" font="0">and the ethernet interface for data and image sending/receiving. The Background subtraction, shadow</text>
<text top="1176" left="74" width="744" height="16" font="0">detection and blob detection (erosion, dilation and RLE) module performs an intensive processing</text>
</page>
<page number="7" position="absolute" top="0" left="0" height="1262" width="892">
<text top="75" left="74" width="56" height="15" font="0">Sensors</text>
<text top="75" left="135" width="63" height="16" font="0">2012, 12</text>
<text top="75" left="792" width="27" height="16" font="0">591</text>
<text top="131" left="74" width="744" height="16" font="0">on the pixels of each image in order to separate foreground and background, and then proceeds to</text>
<text top="157" left="74" width="555" height="16" font="0">the blob extraction of the different objects. This module uses ImpulseC <a href="pdfxml.html#26">[</a></text>
<text top="157" left="629" width="18" height="16" font="5"><a href="pdfxml.html#26">17</a></text>
<text top="157" left="647" width="171" height="16" font="0"><a href="pdfxml.html#26">] </a>in order to develop a</text>
<text top="183" left="74" width="744" height="16" font="0">DSP-based design ﬂow system. The Microblaze processor is programmed in C/C++ for initialization</text>
<text top="208" left="74" width="744" height="16" font="0">and communications tasks, and the rest of peripherals are described in VHDL. The MPMC module</text>
<text top="234" left="74" width="744" height="16" font="0">(DDR2 memory controller) offers an easy access to the external DDR2 memory, which stores the</text>
<text top="260" left="74" width="744" height="16" font="0">background model. This memory offers efﬁcient high bandwidth access, thus providing a feasible use</text>
<text top="286" left="74" width="337" height="16" font="0">for applications requiring real-time processing.</text>
<text top="330" left="117" width="74" height="16" font="0">Figure 2.</text>
<text top="330" left="214" width="562" height="16" font="0">Scheme of the complete architecture and connections between modules,</text>
<text top="356" left="117" width="255" height="16" font="0">peripherals, memory and processor.</text>
<text top="914" left="96" width="47" height="16" font="0">Figure</text>
<text top="914" left="151" width="9" height="16" font="5"><a href="pdfxml.html#8">3</a></text>
<text top="914" left="168" width="650" height="16" font="0">shows a basic scheme of the proposed architecture for the IP core that performs the</text>
<text top="940" left="74" width="744" height="16" font="0">background subtraction, pixel classiﬁcation and blob detection processing stages. This architecture</text>
<text top="965" left="74" width="744" height="16" font="0">consists of a pipelined structure divided into several basic stages which work in parallel. In addition,</text>
<text top="991" left="74" width="744" height="16" font="0">it is controlled by means of the embedded Microblaze processor. Before getting into the details of this</text>
<text top="1017" left="74" width="744" height="16" font="0">architecture, it is important to note that memory has a key role in the system performance and requires an</text>
<text top="1043" left="74" width="744" height="16" font="0">efﬁcient memory accessing scheme. This has motivated the use of high performance multiport memory</text>
<text top="1068" left="74" width="705" height="16" font="0">controllers (Xilinx MPMC for DDR2) as well as very speciﬁc and optimized memory ports (NPI).</text>
</page>
<page number="8" position="absolute" top="0" left="0" height="1262" width="892">
<text top="75" left="74" width="56" height="15" font="0">Sensors</text>
<text top="75" left="135" width="63" height="16" font="0">2012, 12</text>
<text top="75" left="792" width="27" height="16" font="0">592</text>
<text top="131" left="117" width="659" height="16" font="0">Figure 3. Simpliﬁed datapath architecture for background subtraction and blob detection</text>
<text top="157" left="117" width="454" height="16" font="0">core. The IP core can process streams from up to four cameras.</text>
<text top="586" left="74" width="519" height="15" font="0">3.1. Model Modiﬁcations Towards a Hardware-Friendly Implementation</text>
<text top="630" left="96" width="723" height="16" font="0">The foreground/background segmentation is executed by a hardware module with an independent</text>
<text top="656" left="74" width="744" height="16" font="0">access to the memory, where the current image and the background model are stored. Considerable</text>
<text top="681" left="74" width="744" height="16" font="0">reduction of the hardware complexity of the architecture is achieved through precalculating and storing</text>
<text top="707" left="74" width="744" height="16" font="0">several constants during the training stage and avoiding division operations by substituting them for</text>
<text top="733" left="74" width="691" height="16" font="0">multiplications, which require less hardware resources. In the case of brightness distortion α</text>
<text top="740" left="765" width="4" height="11" font="4">i</text>
<text top="733" left="770" width="48" height="16" font="0">, these</text>
<text top="759" left="74" width="342" height="16" font="0">constants are computed according to Equation <a href="pdfxml.html#8">(</a></text>
<text top="759" left="416" width="9" height="16" font="5"><a href="pdfxml.html#8">6</a></text>
<text top="759" left="425" width="11" height="16" font="0"><a href="pdfxml.html#8">):</a></text>
<text top="810" left="288" width="13" height="16" font="0">A</text>
<text top="817" left="301" width="4" height="11" font="4">i</text>
<text top="810" left="311" width="14" height="16" font="0">=</text>
<text top="798" left="345" width="11" height="16" font="0">µ</text>
<text top="805" left="355" width="10" height="11" font="4">R</text>
<text top="798" left="365" width="20" height="16" font="0">(i)</text>
<text top="823" left="345" width="10" height="16" font="0">σ</text>
<text top="830" left="355" width="10" height="11" font="4">R</text>
<text top="823" left="365" width="20" height="16" font="0">(i)</text>
<text top="793" left="400" width="6" height="11" font="4">2</text>
<text top="810" left="411" width="14" height="16" font="0">+</text>
<text top="798" left="444" width="11" height="16" font="0">µ</text>
<text top="805" left="454" width="10" height="11" font="4">G</text>
<text top="798" left="465" width="20" height="16" font="0">(i)</text>
<text top="823" left="444" width="10" height="16" font="0">σ</text>
<text top="830" left="454" width="10" height="11" font="4">G</text>
<text top="823" left="465" width="20" height="16" font="0">(i)</text>
<text top="793" left="500" width="6" height="11" font="4">2</text>
<text top="810" left="511" width="14" height="16" font="0">+</text>
<text top="798" left="543" width="11" height="16" font="0">µ</text>
<text top="805" left="554" width="10" height="11" font="4">B</text>
<text top="798" left="565" width="20" height="16" font="0">(i)</text>
<text top="823" left="544" width="10" height="16" font="0">σ</text>
<text top="830" left="554" width="10" height="11" font="4">B</text>
<text top="823" left="565" width="20" height="16" font="0">(i)</text>
<text top="793" left="600" width="6" height="11" font="4">2</text>
<text top="861" left="288" width="13" height="16" font="0">B</text>
<text top="868" left="301" width="4" height="11" font="4">i</text>
<text top="861" left="311" width="14" height="16" font="0">=</text>
<text top="849" left="353" width="11" height="16" font="0">µ</text>
<text top="856" left="364" width="10" height="11" font="4">R</text>
<text top="849" left="374" width="20" height="16" font="0">(i)</text>
<text top="874" left="345" width="13" height="16" font="0">A</text>
<text top="880" left="358" width="4" height="11" font="4">i</text>
<text top="874" left="363" width="10" height="16" font="0">σ</text>
<text top="872" left="373" width="6" height="11" font="4">2</text>
<text top="883" left="373" width="10" height="11" font="4">R</text>
<text top="874" left="383" width="20" height="16" font="0">(i)</text>
<text top="912" left="288" width="13" height="16" font="0">C</text>
<text top="919" left="301" width="4" height="11" font="4">i</text>
<text top="912" left="311" width="14" height="16" font="0">=</text>
<text top="900" left="353" width="11" height="16" font="0">µ</text>
<text top="907" left="364" width="10" height="11" font="4">G</text>
<text top="900" left="375" width="20" height="16" font="0">(i)</text>
<text top="925" left="345" width="13" height="16" font="0">A</text>
<text top="931" left="358" width="4" height="11" font="4">i</text>
<text top="925" left="363" width="10" height="16" font="0">σ</text>
<text top="922" left="373" width="6" height="11" font="4">2</text>
<text top="934" left="373" width="10" height="11" font="4">G</text>
<text top="925" left="383" width="20" height="16" font="0">(i)</text>
<text top="963" left="286" width="15" height="16" font="0">D</text>
<text top="970" left="301" width="4" height="11" font="4">i</text>
<text top="963" left="311" width="14" height="16" font="0">=</text>
<text top="951" left="353" width="11" height="16" font="0">µ</text>
<text top="958" left="364" width="10" height="11" font="4">B</text>
<text top="951" left="375" width="20" height="16" font="0">(i)</text>
<text top="975" left="345" width="13" height="16" font="0">A</text>
<text top="982" left="358" width="4" height="11" font="4">i</text>
<text top="975" left="363" width="10" height="16" font="0">σ</text>
<text top="973" left="373" width="6" height="11" font="4">2</text>
<text top="984" left="373" width="10" height="11" font="4">B</text>
<text top="975" left="384" width="20" height="16" font="0">(i)</text>
<text top="886" left="798" width="21" height="16" font="0">(6)</text>
<text top="1012" left="96" width="195" height="16" font="0">The brightness distortion α</text>
<text top="1018" left="291" width="4" height="11" font="4">i</text>
<text top="1012" left="300" width="200" height="16" font="0">will remain as in Equation <a href="pdfxml.html#8">(</a></text>
<text top="1012" left="500" width="9" height="16" font="5"><a href="pdfxml.html#8">7</a></text>
<text top="1012" left="509" width="232" height="16" font="0"><a href="pdfxml.html#8">), </a>making use of the constants B</text>
<text top="1018" left="741" width="4" height="11" font="4">i</text>
<text top="1012" left="746" width="22" height="16" font="0">, C</text>
<text top="1018" left="767" width="4" height="11" font="4">i</text>
<text top="1012" left="773" width="24" height="16" font="0">, D</text>
<text top="1018" left="796" width="4" height="11" font="4">i</text>
<text top="1012" left="801" width="4" height="16" font="0">.</text>
<text top="1055" left="320" width="11" height="16" font="0">α</text>
<text top="1062" left="331" width="4" height="11" font="4">i</text>
<text top="1055" left="341" width="32" height="16" font="0">= B</text>
<text top="1062" left="373" width="4" height="11" font="4">i</text>
<text top="1055" left="378" width="8" height="16" font="0">I</text>
<text top="1062" left="386" width="10" height="11" font="4">R</text>
<text top="1055" left="396" width="54" height="16" font="0">(i) + C</text>
<text top="1062" left="450" width="4" height="11" font="4">i</text>
<text top="1055" left="455" width="8" height="16" font="0">I</text>
<text top="1062" left="463" width="10" height="11" font="4">G</text>
<text top="1055" left="474" width="56" height="16" font="0">(i) + D</text>
<text top="1062" left="530" width="4" height="11" font="4">i</text>
<text top="1055" left="535" width="8" height="16" font="0">I</text>
<text top="1062" left="542" width="10" height="11" font="4">B</text>
<text top="1055" left="553" width="20" height="16" font="0">(i)</text>
<text top="1055" left="798" width="21" height="16" font="0">(7)</text>
<text top="1099" left="74" width="614" height="16" font="0">In order to remove the divisions in the computation of the chromaticity distortion CD</text>
<text top="1105" left="689" width="4" height="11" font="4">i</text>
<text top="1099" left="694" width="91" height="16" font="0">, we store (S</text>
<text top="1105" left="785" width="4" height="11" font="4">i</text>
<text top="1098" left="790" width="7" height="16" font="0">)</text>
<text top="1095" left="797" width="16" height="11" font="4">−1</text>
<text top="1099" left="814" width="4" height="16" font="0">,</text>
<text top="1124" left="74" width="16" height="16" font="0">(a</text>
<text top="1131" left="90" width="4" height="11" font="4">i</text>
<text top="1124" left="96" width="7" height="16" font="0">)</text>
<text top="1121" left="102" width="16" height="11" font="4">−1</text>
<text top="1124" left="126" width="46" height="16" font="0">and (b</text>
<text top="1131" left="172" width="4" height="11" font="4">i</text>
<text top="1124" left="177" width="7" height="16" font="0">)</text>
<text top="1121" left="184" width="16" height="11" font="4">−1</text>
<text top="1124" left="207" width="89" height="16" font="0">instead of S</text>
<text top="1131" left="296" width="4" height="11" font="4">i</text>
<text top="1124" left="301" width="20" height="16" font="0">, a</text>
<text top="1131" left="321" width="4" height="11" font="4">i</text>
<text top="1124" left="332" width="40" height="16" font="0">and b</text>
<text top="1131" left="372" width="4" height="11" font="4">i</text>
<text top="1124" left="377" width="441" height="16" font="0">. Besides, the training stage is done with N = 128 images</text>
<text top="1150" left="74" width="744" height="16" font="0">to facilitate the computation of the mean, standard deviation and root mean square, avoiding divisions.</text>
<text top="1176" left="74" width="520" height="16" font="0">Previously, the model had a 4-tuple for each pixel, composed by &lt; E</text>
<text top="1183" left="594" width="4" height="11" font="4">i</text>
<text top="1176" left="600" width="22" height="16" font="0">, S</text>
<text top="1183" left="622" width="4" height="11" font="4">i</text>
<text top="1176" left="627" width="20" height="16" font="0">, a</text>
<text top="1183" left="647" width="4" height="11" font="4">i</text>
<text top="1176" left="652" width="19" height="16" font="0">, b</text>
<text top="1183" left="671" width="4" height="11" font="4">i</text>
<text top="1176" left="684" width="134" height="16" font="0">&gt;, whereas now a</text>
</page>
<page number="9" position="absolute" top="0" left="0" height="1262" width="892">
<text top="75" left="74" width="56" height="15" font="0">Sensors</text>
<text top="75" left="135" width="63" height="16" font="0">2012, 12</text>
<text top="75" left="792" width="27" height="16" font="0">593</text>
<text top="131" left="74" width="245" height="16" font="0">7-tuple will have to be stored&lt; E</text>
<text top="138" left="319" width="4" height="11" font="4">i</text>
<text top="131" left="324" width="23" height="16" font="0">, B</text>
<text top="138" left="347" width="4" height="11" font="4">i</text>
<text top="131" left="352" width="22" height="16" font="0">, C</text>
<text top="138" left="375" width="4" height="11" font="4">i</text>
<text top="131" left="380" width="24" height="16" font="0">, D</text>
<text top="138" left="404" width="4" height="11" font="4">i</text>
<text top="131" left="409" width="27" height="16" font="0">, (S</text>
<text top="138" left="436" width="4" height="11" font="4">i</text>
<text top="131" left="442" width="7" height="16" font="0">)</text>
<text top="128" left="448" width="16" height="11" font="4">−1</text>
<text top="131" left="465" width="26" height="16" font="0">, (a</text>
<text top="138" left="491" width="4" height="11" font="4">i</text>
<text top="131" left="496" width="7" height="16" font="0">)</text>
<text top="128" left="503" width="16" height="11" font="4">−1</text>
<text top="131" left="520" width="24" height="16" font="0">, (b</text>
<text top="138" left="544" width="4" height="11" font="4">i</text>
<text top="131" left="549" width="7" height="16" font="0">)</text>
<text top="128" left="556" width="16" height="11" font="4">−1</text>
<text top="131" left="579" width="240" height="16" font="0">&gt;. The hardware complexity has</text>
<text top="157" left="74" width="744" height="16" font="0">been reduced considerably, but at the cost of increasing memory consumption, since now we also have</text>
<text top="183" left="74" width="169" height="16" font="0">to store the constants B</text>
<text top="189" left="243" width="4" height="11" font="4">i</text>
<text top="183" left="248" width="22" height="16" font="0">, C</text>
<text top="189" left="270" width="4" height="11" font="4">i</text>
<text top="183" left="279" width="45" height="16" font="0">and D</text>
<text top="189" left="324" width="4" height="11" font="4">i</text>
<text top="183" left="329" width="4" height="16" font="0">.</text>
<text top="208" left="96" width="723" height="16" font="0">The software implementation has been developed using double ﬂoating-point representation. This</text>
<text top="234" left="74" width="744" height="16" font="0">allows reaching a higher degree of accuracy at the expense of a worse performance on embedded</text>
<text top="260" left="74" width="58" height="16" font="0">devices.</text>
<text top="260" left="149" width="669" height="16" font="0">In order to develop a hardware implementation on FPGA with constrained resources, a</text>
<text top="286" left="74" width="744" height="16" font="0">ﬁxed-point representation is usually employed since it adjusts itself better to the type of available</text>
<text top="311" left="74" width="744" height="16" font="0">resources, although a detailed study is required in order to optimize the trade-off between accuracy</text>
<text top="337" left="74" width="744" height="16" font="0">and hardware consumption. It is important to take into account that an insufﬁcient number of bits may</text>
<text top="363" left="74" width="744" height="16" font="0">lead to inaccurate results with high quantiﬁcation noise. On the contrary, the use of too many bits can</text>
<text top="389" left="74" width="744" height="16" font="0">increase the hardware resources consumption, making the system implementation on a moderate cost</text>
<text top="415" left="74" width="129" height="16" font="0">FPGA unfeasible.</text>
<text top="440" left="96" width="684" height="16" font="0">In order to determine the appropriate number of bits for the fractional part of variables &lt; E</text>
<text top="447" left="779" width="4" height="11" font="4">i</text>
<text top="440" left="785" width="24" height="16" font="0">, B</text>
<text top="447" left="809" width="4" height="11" font="4">i</text>
<text top="440" left="814" width="4" height="16" font="0">,</text>
<text top="466" left="74" width="13" height="16" font="0">C</text>
<text top="473" left="87" width="4" height="11" font="4">i</text>
<text top="466" left="92" width="25" height="16" font="0">, D</text>
<text top="473" left="117" width="4" height="11" font="4">i</text>
<text top="466" left="123" width="28" height="16" font="0">, (S</text>
<text top="473" left="151" width="4" height="11" font="4">i</text>
<text top="466" left="156" width="7" height="16" font="0">)</text>
<text top="463" left="163" width="16" height="11" font="4">−1</text>
<text top="466" left="180" width="27" height="16" font="0">, (a</text>
<text top="473" left="207" width="4" height="11" font="4">i</text>
<text top="466" left="212" width="7" height="16" font="0">)</text>
<text top="463" left="219" width="16" height="11" font="4">−1</text>
<text top="466" left="236" width="25" height="16" font="0">, (b</text>
<text top="473" left="261" width="4" height="11" font="4">i</text>
<text top="466" left="266" width="7" height="16" font="0">)</text>
<text top="463" left="273" width="16" height="11" font="4">−1</text>
<text top="466" left="297" width="521" height="16" font="0">&gt; which represent our background model, we have measured the error</text>
<text top="492" left="74" width="744" height="16" font="0">between the results obtained with different bit-width conﬁgurations and the results obtained with a</text>
<text top="518" left="74" width="744" height="16" font="0">double-ﬂoating-point representation. In order to perform this comparison, we have used the Wallﬂower</text>
<text top="544" left="74" width="109" height="16" font="0">test database <a href="pdfxml.html#27">[</a></text>
<text top="544" left="183" width="18" height="16" font="5"><a href="pdfxml.html#27">19</a></text>
<text top="544" left="201" width="10" height="16" font="0"><a href="pdfxml.html#27">].</a></text>
<text top="544" left="229" width="590" height="16" font="0">Since we are dealing with a two-class classiﬁcation problem (foreground and</text>
<text top="569" left="74" width="744" height="16" font="0">background), comparison measures will be given by the total of false positive and negative (FP and FN)</text>
<text top="595" left="74" width="744" height="16" font="0">in a certain frame of each sequence from Wallﬂower test. Each of the mentioned variables intervenes</text>
<text top="621" left="74" width="253" height="16" font="0">in a stage of the computation of ˆ</text>
<text top="621" left="315" width="11" height="16" font="0">α</text>
<text top="627" left="326" width="4" height="11" font="4">i</text>
<text top="621" left="336" width="26" height="16" font="0">and</text>
<text top="616" left="380" width="9" height="16" font="0">ˆ</text>
<text top="621" left="368" width="28" height="16" font="0">CD</text>
<text top="627" left="397" width="4" height="11" font="4">i</text>
<text top="621" left="402" width="417" height="16" font="0">. In order to simplify the procurement of the appropriate</text>
<text top="647" left="74" width="744" height="16" font="0">number of bits for each variable, we have grouped these variables depending on the stage in which they</text>
<text top="672" left="74" width="335" height="16" font="0">are used to study the bit-width changes jointly.</text>
<text top="698" left="96" width="47" height="16" font="0">Figure</text>
<text top="698" left="147" width="9" height="16" font="5"><a href="pdfxml.html#10">4</a></text>
<text top="698" left="159" width="659" height="16" font="0">displays the percentage of errors between the ﬂoating point and ﬁxed point implementations,</text>
<text top="724" left="74" width="581" height="16" font="0">for each one of these groups of variables. For the ﬁrst group of variables &lt; B</text>
<text top="731" left="656" width="4" height="11" font="4">i</text>
<text top="724" left="661" width="23" height="16" font="0">, C</text>
<text top="731" left="684" width="4" height="11" font="4">i</text>
<text top="724" left="689" width="25" height="16" font="0">, D</text>
<text top="731" left="715" width="4" height="11" font="4">i</text>
<text top="724" left="727" width="91" height="16" font="0">&gt; which are</text>
<text top="750" left="74" width="208" height="16" font="0">used in the computation of α</text>
<text top="756" left="283" width="4" height="11" font="4">i</text>
<text top="750" left="288" width="531" height="16" font="0">, an ideal representation would be 8 bits for the fractional part and 18 bits</text>
<text top="776" left="74" width="508" height="16" font="0">for the integer part. The second group of variables, consisting of &lt; E</text>
<text top="782" left="582" width="4" height="11" font="4">i</text>
<text top="776" left="587" width="27" height="16" font="0">, (S</text>
<text top="782" left="615" width="4" height="11" font="4">i</text>
<text top="775" left="620" width="7" height="16" font="0">)</text>
<text top="772" left="627" width="16" height="11" font="4">−1</text>
<text top="775" left="650" width="169" height="16" font="0">&gt;, which is used in the</text>
<text top="801" left="74" width="144" height="16" font="0">computation of CD</text>
<text top="808" left="218" width="4" height="11" font="4">i</text>
<text top="801" left="224" width="595" height="16" font="0">, would have an ideal representation of 8 bits for the fractional part and 8 bits for</text>
<text top="827" left="74" width="362" height="16" font="0">the integer part. Finally, regarding the group &lt; (a</text>
<text top="834" left="437" width="4" height="11" font="4">i</text>
<text top="827" left="442" width="7" height="16" font="0">)</text>
<text top="824" left="449" width="16" height="11" font="4">−1</text>
<text top="827" left="466" width="24" height="16" font="0">, (b</text>
<text top="834" left="489" width="4" height="11" font="4">i</text>
<text top="827" left="495" width="7" height="16" font="0">)</text>
<text top="824" left="501" width="16" height="11" font="4">−1</text>
<text top="827" left="524" width="294" height="16" font="0">&gt; which is used in the ﬁnal computation</text>
<text top="853" left="74" width="32" height="16" font="0">of ˆ</text>
<text top="853" left="94" width="11" height="16" font="0">α</text>
<text top="860" left="105" width="4" height="11" font="4">i</text>
<text top="853" left="115" width="26" height="16" font="0">and</text>
<text top="848" left="158" width="9" height="16" font="0">ˆ</text>
<text top="853" left="146" width="28" height="16" font="0">CD</text>
<text top="860" left="174" width="4" height="11" font="4">i</text>
<text top="853" left="179" width="639" height="16" font="0">, an ideal representation would be 10 bits for the fractional part and 8 for the integer part</text>
<text top="879" left="74" width="45" height="16" font="0">(Table</text>
<text top="879" left="124" width="9" height="16" font="5"><a href="pdfxml.html#10">1</a></text>
<text top="879" left="138" width="77" height="16" font="0">and Figure</text>
<text top="879" left="219" width="9" height="16" font="5"><a href="pdfxml.html#10">4</a></text>
<text top="879" left="228" width="10" height="16" font="0"><a href="pdfxml.html#10">).</a></text>
<text top="905" left="96" width="723" height="16" font="0">Each data structure has a different bit-width which is optimized to the type of performed operations</text>
<text top="930" left="74" width="744" height="16" font="0">(multiplications, summations, subtractions, etc.). This is not a common approach in the literature because</text>
<text top="956" left="74" width="744" height="16" font="0">of the increase in the complexity of the design stage but allows tuning resources and accuracy of the</text>
<text top="982" left="74" width="200" height="16" font="0">system in a much ﬁner way.</text>
<text top="1008" left="96" width="723" height="16" font="0">Once the bit-width of the fractional part of each variable has been established, we have evaluated the</text>
<text top="1033" left="74" width="700" height="16" font="0">degradation of our complete design due to quantization errors. These results are shown in Section</text>
<text top="1033" left="779" width="22" height="16" font="5"><a href="pdfxml.html#19">4.3</a></text>
<text top="1033" left="801" width="4" height="16" font="0"><a href="pdfxml.html#19">.</a></text>
</page>
<page number="10" position="absolute" top="0" left="0" height="1262" width="892">
<text top="75" left="74" width="56" height="15" font="0">Sensors</text>
<text top="75" left="135" width="63" height="16" font="0">2012, 12</text>
<text top="75" left="792" width="27" height="16" font="0">594</text>
<text top="131" left="117" width="73" height="16" font="0">Figure 4.</text>
<text top="131" left="211" width="565" height="16" font="0">Percentage of errors between the ﬂoating point and ﬁxed point versions,</text>
<text top="157" left="117" width="659" height="16" font="0">considering different bit-width of the fractional parts of the variables involved in the</text>
<text top="183" left="117" width="179" height="16" font="0">background subtraction.</text>
<text top="183" left="317" width="459" height="16" font="0">Each graph shows variables involved in the same stage of</text>
<text top="208" left="117" width="659" height="16" font="0">computation, and each series corresponds with a Wallﬂower test sequence: WT—Waving</text>
<text top="234" left="117" width="659" height="15" font="0">Trees; MO—Moved Object; TD—Time of Day; LS—Light Switch; CA—Camouﬂage;</text>
<text top="260" left="117" width="326" height="15" font="0">FA—Foreground Aperture; B—Bootstrapping</text>
<text top="260" left="443" width="4" height="16" font="0">.</text>
<text top="821" left="117" width="659" height="16" font="0">Table 1. Bit-width of each variable taking part in the calculation of colordist and brightness.</text>
<text top="847" left="117" width="659" height="16" font="0">The ﬁrst value represents the integer part and the second value represents the fractional part.</text>
<text top="873" left="117" width="659" height="16" font="0">The bit-width values have been determined as the minimum values of the fractional part</text>
<text top="898" left="117" width="659" height="16" font="0">for which the quantization error is approximately stable. This information can be easily</text>
<text top="924" left="117" width="156" height="16" font="0">extracted from Figure</text>
<text top="924" left="278" width="9" height="16" font="5"><a href="pdfxml.html#10">4</a></text>
<text top="924" left="286" width="4" height="16" font="0"><a href="pdfxml.html#10">.</a></text>
<text top="974" left="379" width="65" height="16" font="0">Variable</text>
<text top="974" left="508" width="30" height="16" font="0">Bits</text>
<text top="1009" left="356" width="32" height="16" font="0">&lt; B</text>
<text top="1016" left="388" width="4" height="11" font="4">i</text>
<text top="1009" left="393" width="22" height="16" font="0">, C</text>
<text top="1016" left="414" width="4" height="11" font="4">i</text>
<text top="1009" left="420" width="24" height="16" font="0">, D</text>
<text top="1016" left="443" width="4" height="11" font="4">i</text>
<text top="1009" left="453" width="14" height="16" font="0">&gt;</text>
<text top="1009" left="501" width="43" height="16" font="0">[18 8]</text>
<text top="1035" left="356" width="32" height="16" font="0">&lt; E</text>
<text top="1041" left="388" width="4" height="11" font="4">i</text>
<text top="1035" left="393" width="27" height="16" font="0">, (S</text>
<text top="1041" left="419" width="4" height="11" font="4">i</text>
<text top="1035" left="424" width="7" height="16" font="0">)</text>
<text top="1032" left="431" width="16" height="11" font="4">−1</text>
<text top="1035" left="453" width="14" height="16" font="0">&gt;</text>
<text top="1035" left="505" width="34" height="16" font="0">[8 8]</text>
<text top="1060" left="344" width="35" height="16" font="0">&lt; (a</text>
<text top="1067" left="379" width="4" height="11" font="4">i</text>
<text top="1060" left="384" width="7" height="16" font="0">)</text>
<text top="1057" left="391" width="16" height="11" font="4">−1</text>
<text top="1061" left="408" width="23" height="16" font="0">, (b</text>
<text top="1067" left="431" width="4" height="11" font="4">i</text>
<text top="1060" left="436" width="7" height="16" font="0">)</text>
<text top="1057" left="443" width="16" height="11" font="4">−1</text>
<text top="1060" left="465" width="14" height="16" font="0">&gt;</text>
<text top="1061" left="501" width="43" height="16" font="0">[8 10]</text>
<text top="1086" left="403" width="11" height="16" font="0">α</text>
<text top="1093" left="414" width="4" height="11" font="4">i</text>
<text top="1086" left="501" width="43" height="16" font="0">[28 8]</text>
<text top="1112" left="395" width="28" height="16" font="0">CD</text>
<text top="1119" left="423" width="4" height="11" font="4">i</text>
<text top="1112" left="501" width="43" height="16" font="0">[18 8]</text>
<text top="1138" left="407" width="9" height="16" font="0">ˆ</text>
<text top="1138" left="403" width="11" height="16" font="0">α</text>
<text top="1145" left="414" width="4" height="11" font="4">i</text>
<text top="1138" left="496" width="52" height="16" font="0">[36 10]</text>
<text top="1159" left="407" width="9" height="16" font="0">ˆ</text>
<text top="1164" left="395" width="28" height="16" font="0">CD</text>
<text top="1170" left="423" width="4" height="11" font="4">i</text>
<text top="1164" left="496" width="52" height="16" font="0">[26 10]</text>
</page>
<page number="11" position="absolute" top="0" left="0" height="1262" width="892">
<text top="75" left="74" width="56" height="15" font="0">Sensors</text>
<text top="75" left="135" width="63" height="16" font="0">2012, 12</text>
<text top="75" left="792" width="27" height="16" font="0">595</text>
<text top="131" left="74" width="382" height="15" font="0">3.2. Background Subtraction and Pixel Classiﬁcation</text>
<text top="175" left="96" width="723" height="16" font="0">The following stages of processing, including background subtraction, pixel classiﬁcation,</text>
<text top="200" left="74" width="744" height="16" font="0">morphological ﬁltering for erosion and dilation, and connected component detection, have been</text>
<text top="226" left="74" width="197" height="16" font="0">described using ImpulseC <a href="pdfxml.html#26">[</a></text>
<text top="226" left="271" width="18" height="16" font="5"><a href="pdfxml.html#26">17</a></text>
<text top="226" left="289" width="10" height="16" font="0"><a href="pdfxml.html#26">].</a></text>
<text top="252" left="96" width="723" height="16" font="0">At the system initialization stage, after acquiring 128 images per camera and storing them into</text>
<text top="278" left="74" width="744" height="16" font="0">memory, the background model of the scene can be constructed. As commented before, our system</text>
<text top="304" left="74" width="744" height="16" font="0">is able to work with up to four camera streams. Each video sequence from each camera is independent</text>
<text top="329" left="74" width="744" height="16" font="0">from the others and has its own background model. Taking into account that the background model is</text>
<text top="355" left="74" width="744" height="16" font="0">built only in the beginning, we have considered more appropriate for the construction to be made by a</text>
<text top="381" left="74" width="744" height="16" font="0">software application running in the Microblaze processor, since during this stage there are not real-time</text>
<text top="407" left="74" width="259" height="16" font="0">requirements. Data of the tuple &lt; E</text>
<text top="413" left="333" width="4" height="11" font="4">i</text>
<text top="407" left="338" width="22" height="16" font="0">, B</text>
<text top="413" left="360" width="4" height="11" font="4">i</text>
<text top="407" left="365" width="21" height="16" font="0">, C</text>
<text top="413" left="386" width="4" height="11" font="4">i</text>
<text top="407" left="392" width="23" height="16" font="0">, D</text>
<text top="413" left="415" width="4" height="11" font="4">i</text>
<text top="407" left="420" width="26" height="16" font="0">, (S</text>
<text top="413" left="446" width="4" height="11" font="4">i</text>
<text top="406" left="451" width="7" height="16" font="0">)</text>
<text top="403" left="458" width="16" height="11" font="4">−1</text>
<text top="407" left="475" width="25" height="16" font="0">, (a</text>
<text top="413" left="500" width="4" height="11" font="4">i</text>
<text top="406" left="505" width="7" height="16" font="0">)</text>
<text top="403" left="512" width="16" height="11" font="4">−1</text>
<text top="407" left="529" width="23" height="16" font="0">, (b</text>
<text top="413" left="552" width="4" height="11" font="4">i</text>
<text top="406" left="557" width="7" height="16" font="0">)</text>
<text top="403" left="564" width="16" height="11" font="4">−1</text>
<text top="406" left="586" width="233" height="16" font="0">&gt; are computed in ﬂoating point</text>
<text top="433" left="74" width="744" height="16" font="0">notation by Microblaze, although they are stored in memory in ﬁxed point to be used by the hardware</text>
<text top="458" left="74" width="744" height="16" font="0">module. The size of a ﬁxed point tuple will determine the required memory space for the background</text>
<text top="484" left="74" width="165" height="16" font="0">model, in our case &lt; E</text>
<text top="491" left="239" width="4" height="11" font="4">i</text>
<text top="484" left="248" width="81" height="16" font="0">(48 bits), B</text>
<text top="491" left="330" width="4" height="11" font="4">i</text>
<text top="484" left="338" width="81" height="16" font="0">(26 bits), C</text>
<text top="491" left="419" width="4" height="11" font="4">i</text>
<text top="484" left="428" width="83" height="16" font="0">(26 bits), D</text>
<text top="491" left="511" width="4" height="11" font="4">i</text>
<text top="484" left="519" width="86" height="16" font="0">(26 bits), (S</text>
<text top="491" left="605" width="4" height="11" font="4">i</text>
<text top="484" left="610" width="7" height="16" font="0">)</text>
<text top="481" left="617" width="16" height="11" font="4">−1</text>
<text top="484" left="638" width="84" height="16" font="0">(48 bits), (a</text>
<text top="491" left="722" width="4" height="11" font="4">i</text>
<text top="484" left="727" width="7" height="16" font="0">)</text>
<text top="481" left="734" width="16" height="11" font="4">−1</text>
<text top="484" left="754" width="64" height="16" font="0">(18 bits),</text>
<text top="510" left="74" width="14" height="16" font="0">(b</text>
<text top="516" left="89" width="4" height="11" font="4">i</text>
<text top="510" left="94" width="7" height="16" font="0">)</text>
<text top="507" left="101" width="16" height="11" font="4">−1</text>
<text top="510" left="122" width="696" height="16" font="0">(18 bits)&gt; in total 210 bits. In order to maintain a background model for a 1,024 × 1,024 image,</text>
<text top="536" left="74" width="744" height="16" font="0">we will need 26.25 MB. This is affordable for the current resources available on many FPGA platforms</text>
<text top="562" left="74" width="744" height="16" font="0">and validated the feasibility of our current architecture. Note that this process could be triggered at</text>
<text top="587" left="74" width="744" height="16" font="0">any time if we determine that the background has been modiﬁed, for instance due to important lighting</text>
<text top="613" left="74" width="551" height="16" font="0">conditions changes or because of the appearance of new objects in the scene.</text>
<text top="657" left="117" width="659" height="16" font="0">Figure 5. Fine grain pipelined datapath for background subtraction stage. The number</text>
<text top="683" left="117" width="271" height="16" font="0">of clock cycles is indicated on top.</text>
<text top="683" left="405" width="371" height="16" font="0">The different operations are indicated by × sign</text>
<text top="709" left="117" width="659" height="16" font="0">(multiplication) and + sign (addition), registers by rectangles while routing paths are</text>
<text top="735" left="117" width="145" height="16" font="0">indicated by arrows.</text>
</page>
<page number="12" position="absolute" top="0" left="0" height="1262" width="892">
<text top="75" left="74" width="56" height="15" font="0">Sensors</text>
<text top="75" left="135" width="63" height="16" font="0">2012, 12</text>
<text top="75" left="792" width="27" height="16" font="0">596</text>
<text top="131" left="96" width="723" height="16" font="0">The ﬁrst stage executed by the IP core is background subtraction. Once the Microblaze processor has</text>
<text top="157" left="74" width="694" height="16" font="0">built the background model, the subtraction and pixel-wise classiﬁcation stages, shown in Figure</text>
<text top="157" left="773" width="9" height="16" font="5"><a href="pdfxml.html#8">3</a></text>
<text top="157" left="782" width="37" height="16" font="0"><a href="pdfxml.html#8">, </a>will</text>
<text top="183" left="74" width="744" height="16" font="0">be performed by an IP core connected to the MPMC interface by means of the NPI port. These critical</text>
<text top="208" left="74" width="744" height="16" font="0">interfaces with external devices are described with VHDL language. This module has been designed</text>
<text top="234" left="74" width="744" height="16" font="0">with the high level of abstraction hardware description language ImpulseC, IMPULSEC and has two</text>
<text top="260" left="74" width="744" height="16" font="0">input streams (background model BG(i) and current image I(i)) and one output stream (binary mask</text>
<text top="285" left="74" width="104" height="16" font="0">M (i)). Figure</text>
<text top="286" left="184" width="9" height="16" font="5"><a href="pdfxml.html#11">5</a></text>
<text top="286" left="198" width="621" height="16" font="0">shows in more detail the ﬁne-grain pipelined datapath for this hardware module. The</text>
<text top="311" left="74" width="744" height="16" font="0">multipliers used are optimized with embedded resources (DSP48) of the Spartan3 DSP FPGA. In order to</text>
<text top="337" left="74" width="222" height="16" font="0">compute the square root of CD</text>
<text top="334" left="296" width="6" height="11" font="4">2</text>
<text top="346" left="296" width="4" height="11" font="4">i</text>
<text top="337" left="304" width="515" height="16" font="0">, we have used a “Xilinx IP core” generated with the tool Core Generator</text>
<text top="363" left="74" width="744" height="16" font="0">and based on the CORDIC algorithm (Parallel Architectural Conﬁguration). The total number of stages</text>
<text top="389" left="74" width="744" height="16" font="0">(latency) of each scalar unit is 36, with a data throughput of 1 data per clock cycle. It is remarkable</text>
<text top="415" left="74" width="744" height="16" font="0">that the parallel CORDIC core has 26 pipelined stages in total, being able to produce a new output data</text>
<text top="440" left="74" width="79" height="16" font="0">each cycle.</text>
<text top="484" left="74" width="139" height="15" font="0">3.3. Blob Detection</text>
<text top="528" left="96" width="723" height="16" font="0">After conducting background subtraction, the system generates a binary mask image in which 0 and</text>
<text top="554" left="74" width="744" height="16" font="0">1 represent background and foreground respectively. In theory, moving objects from the image should</text>
<text top="579" left="74" width="744" height="16" font="0">be detected as independent elements in the binary mask image; however, this binary mask image might</text>
<text top="605" left="74" width="744" height="16" font="0">include noise and individual objects decomposed in multiple units; this is due to the moving object</text>
<text top="631" left="74" width="744" height="16" font="0">having some similar colors to the background. In order to remove noise and connect the decomposed</text>
<text top="657" left="74" width="744" height="16" font="0">objects again, morphological operations (erosion–dilation) are applied to the binary mask image, making</text>
<text top="683" left="74" width="392" height="16" font="0">use of the architecture described by Hedberg et al. <a href="pdfxml.html#27">[</a></text>
<text top="683" left="467" width="18" height="16" font="5"><a href="pdfxml.html#27">20</a></text>
<text top="683" left="484" width="334" height="16" font="0"><a href="pdfxml.html#27">], </a>where a low complexity architecture using</text>
<text top="708" left="74" width="744" height="16" font="0">Structuring Element Decomposition is proposed. This is not part of the Horprasert model but we have</text>
<text top="734" left="74" width="744" height="16" font="0">adopted this extension in order to increase the system accuracy at a low cost. The proposed system</text>
<text top="760" left="74" width="744" height="16" font="0">for binary E&amp;D requires low consumption of hardware resources (logic and internal memory). Erosion</text>
<text top="786" left="74" width="250" height="16" font="0">and dilation are represented by (A</text>
<text top="785" left="348" width="471" height="16" font="0">B) and (A ⊕ B) respectively, where A is the input binary image</text>
<text top="812" left="74" width="744" height="16" font="0">and B is the structuring element (SE). B has some limitations in the proposed architecture: it must</text>
<text top="837" left="74" width="744" height="16" font="0">have a rectangular shape (any length and width is allowed) and it may only contain ones. Thus, we</text>
<text top="863" left="74" width="42" height="16" font="0">get B</text>
<text top="863" left="133" width="501" height="16" font="0">= (B1 ⊕ B2), and B will be decomposed in smaller SEs (Figure</text>
<text top="863" left="640" width="9" height="16" font="5"><a href="pdfxml.html#13">6</a></text>
<text top="863" left="649" width="169" height="16" font="0"><a href="pdfxml.html#13">), </a>therefore, A ⊕ B =</text>
<text top="889" left="74" width="744" height="16" font="0">A ⊕ (B1 ⊕ B2) = (A ⊕ B1) ⊕ B2. As conclusions, B is decomposed into two different 1-D operations,</text>
<text top="915" left="74" width="744" height="16" font="0">which is the key task that allows simplifying the hardware architecture of the system and reducing</text>
<text top="940" left="74" width="149" height="16" font="0">resources utilization.</text>
<text top="966" left="96" width="327" height="16" font="0">As we can see in detail in Hedberg’s model <a href="pdfxml.html#27">[</a></text>
<text top="966" left="423" width="18" height="16" font="5"><a href="pdfxml.html#27">20</a></text>
<text top="966" left="441" width="371" height="16" font="0"><a href="pdfxml.html#27">], </a>if the SE is both reﬂection invariant (i.e., B = ˆ</text>
<text top="966" left="798" width="20" height="16" font="0">B)</text>
<text top="992" left="74" width="173" height="16" font="0">and decomposable, then</text>
<text top="1033" left="341" width="100" height="16" font="0">A ⊕ B = ((A</text>
<text top="1033" left="466" width="30" height="16" font="0">B1)</text>
<text top="1033" left="518" width="30" height="16" font="0">B2)</text>
<text top="1063" left="341" width="13" height="16" font="0">A</text>
<text top="1063" left="376" width="58" height="16" font="0">B = (A</text>
<text top="1063" left="455" width="30" height="16" font="0">B1)</text>
<text top="1063" left="507" width="23" height="16" font="0">B2</text>
<text top="1048" left="798" width="21" height="16" font="0">(8)</text>
<text top="1104" left="74" width="167" height="16" font="0">where is bit inversion.</text>
</page>
<page number="13" position="absolute" top="0" left="0" height="1262" width="892">
<text top="75" left="74" width="56" height="15" font="0">Sensors</text>
<text top="75" left="135" width="63" height="16" font="0">2012, 12</text>
<text top="75" left="792" width="27" height="16" font="0">597</text>
<text top="131" left="117" width="659" height="16" font="0">Figure 6. (a) Decomposition of structuring element B = B1 ⊕ B2; (b) Input and output to</text>
<text top="157" left="117" width="264" height="16" font="0">decomposition windows B1 and B2.</text>
<text top="705" left="96" width="723" height="16" font="0">The total number of comparisons conducted for each output is equal to the number of ones in B;</text>
<text top="731" left="74" width="744" height="16" font="0">however, when it comes to a decomposed SE, the number of comparisons is reduced to the sum of ones</text>
<text top="757" left="74" width="744" height="16" font="0">in B1 and B2. Therefore, if B has 15 elements (3 × 5), the result of B1 + B2 is 8 elements (3 + 5), the</text>
<text top="782" left="74" width="437" height="16" font="0">number of comparisons per output is decreased from 15 to 8.</text>
<text top="826" left="117" width="659" height="16" font="0">Figure 7. Architecture of the datapath within the erosion and dilation unit together with the</text>
<text top="852" left="117" width="659" height="16" font="0">wordlenghts (WL) in each stage. The input and output sections, stage-0 and 3, have a single</text>
<text top="878" left="117" width="430" height="16" font="0">bit wordlength. In stages 1 and 2, the wordlengths are log</text>
<text top="885" left="547" width="6" height="11" font="4">2</text>
<text top="878" left="554" width="133" height="16" font="0">(Bwidth) and log</text>
<text top="885" left="687" width="6" height="11" font="4">2</text>
<text top="878" left="694" width="82" height="16" font="0">(Bheight),</text>
<text top="904" left="117" width="659" height="16" font="0">respectively. The wordlength determines the total size of the memory required to perform</text>
<text top="930" left="117" width="147" height="16" font="0">dilation and erosion.</text>
</page>
<page number="14" position="absolute" top="0" left="0" height="1262" width="892">
<text top="75" left="74" width="56" height="15" font="0">Sensors</text>
<text top="75" left="135" width="63" height="16" font="0">2012, 12</text>
<text top="75" left="792" width="27" height="16" font="0">598</text>
<text top="131" left="96" width="589" height="16" font="0">The proposed architecture for the morphological operations is based on Equation <a href="pdfxml.html#12">(</a></text>
<text top="131" left="685" width="9" height="16" font="5"><a href="pdfxml.html#12">8</a></text>
<text top="131" left="694" width="63" height="16" font="0"><a href="pdfxml.html#12">). </a>Figure</text>
<text top="131" left="761" width="9" height="16" font="5"><a href="pdfxml.html#13">7</a></text>
<text top="131" left="774" width="44" height="16" font="0">shows</text>
<text top="157" left="74" width="744" height="16" font="0">the ﬁnal architecture of the datapath. The same hardware can be used to perform both operations (erosion</text>
<text top="183" left="74" width="744" height="16" font="0">and dilation) on a decomposed SE. When combining this with decomposition, the summation can be</text>
<text top="208" left="74" width="744" height="16" font="0">broken up into two stages, where the ﬁrst stage, stage-1, compares the number of ones under B1 to the</text>
<text top="234" left="74" width="744" height="16" font="0">width of B1 and the second stage, stage-2, compares the number of ones under B2 in the result from</text>
<text top="260" left="74" width="744" height="16" font="0">stage-1, to the height of B2. In order to perform dilation, the input A and the result are inverted using</text>
<text top="286" left="74" width="299" height="16" font="0">the multiplexers indicated with number 1.</text>
<text top="311" left="96" width="723" height="16" font="0">Due to the rectangular structure of the kernel SE, the erosion can be performed as an addition followed</text>
<text top="337" left="74" width="744" height="16" font="0">by a comparison. In the ﬁrst stage, each bit from A that overlaps with the current position of B1 would</text>
<text top="363" left="74" width="744" height="16" font="0">be added and the total result is compared against the width of B. If the addition is equal to the width</text>
<text top="389" left="74" width="744" height="16" font="0">of B the result will be one, otherwise it is set to zero. This addition is stored in the stage-1 ﬂip-ﬂop.</text>
<text top="415" left="74" width="744" height="16" font="0">When the input is 1, the total addition is increased and, on the contrary, the sum is reset to zero using</text>
<text top="440" left="74" width="744" height="16" font="0">the multiplexor marked with number 3. Each time the total addition from stage-1 matches the width of</text>
<text top="466" left="74" width="744" height="16" font="0">B, its output becomes 1, therefore the multiplexor marked as 4 will insert into the ﬂip-ﬂop the value</text>
<text top="492" left="74" width="744" height="16" font="0">Bwidth − 1 to be compared with the next input bit. The same operating structure is used in stage-2,</text>
<text top="518" left="74" width="744" height="16" font="0">storing the number of consecutive overlaps from the ﬁrst stage for each column in A. Finally, an external</text>
<text top="544" left="74" width="744" height="16" font="0">controller will set the north and west padding values and produce the control signals W − boundary,</text>
<text top="569" left="74" width="298" height="16" font="0">N − boundary, and E or S − boundary.</text>
<text top="595" left="96" width="723" height="16" font="0">We have included this architecture in our circuit in order to perform the opening (erosion–dilation) and</text>
<text top="621" left="74" width="744" height="16" font="0">closing (dilation–erosion) operations on the binary mask image. Each E&amp;D operation consists of four</text>
<text top="647" left="74" width="744" height="16" font="0">stages; therefore, in order to perform both the opening and closing operations we will have 16 pipelined</text>
<text top="672" left="74" width="514" height="16" font="0">stages overall, with a data throughput or rate of 1 result per clock cycle.</text>
<text top="698" left="96" width="723" height="16" font="0">Finally, once the morphological operations have been conducted, the binary mask image contains</text>
<text top="724" left="74" width="744" height="16" font="0">groups of connected pixels representing different relevant objects (blobs). In order to separate and</text>
<text top="750" left="74" width="589" height="16" font="0">differentiate these groups, we will use the algorithm described in Appiah et al. <a href="pdfxml.html#27">[</a></text>
<text top="750" left="663" width="18" height="16" font="5"><a href="pdfxml.html#27">21</a></text>
<text top="750" left="681" width="138" height="16" font="0"><a href="pdfxml.html#27">], </a>which associates</text>
<text top="776" left="74" width="402" height="16" font="0">each pixel to one label placing it into a particular group.</text>
<text top="801" left="96" width="723" height="16" font="0">This architecture is divided into different stages running in parallel. First, at the stage PixelToRuns(T),</text>
<text top="827" left="74" width="744" height="16" font="0">the pixels in each of the binary mask image rows are represented using a run-length encoding. Each run</text>
<text top="853" left="74" width="744" height="16" font="0">has the values ID, EQ, s, e, r, where ID is the identity number of the run, EQ is the equivalence value,</text>
<text top="878" left="74" width="744" height="16" font="0">s the x-offset of the start pixel, e the x-offset of the end pixel, and r the row. The run-length encoded</text>
<text top="905" left="74" width="708" height="16" font="0">format is a compact representation which allows for an efﬁcient use of the FPGA internal memory.</text>
<text top="930" left="96" width="723" height="16" font="0">The second stage, InitLabelling(runs), involves initial labelling and propagation of labels, for each</text>
<text top="956" left="74" width="744" height="16" font="0">run. All the runs are scanned, assigning provisional labels which propagate to any adjacent runs on the</text>
<text top="982" left="74" width="743" height="16" font="0">row below; runs one row below are scanned for an overlap. An overlapping run in 4-adjacency (si ≤ ej</text>
<text top="1008" left="74" width="653" height="16" font="0">and ei ≥ sj) or 8-adjacency (si ≤ ej + 1 and ei + 1 ≥ sj) is assigned with the identity ID</text>
<text top="1014" left="727" width="4" height="11" font="4">i</text>
<text top="1008" left="732" width="86" height="16" font="0">, if and only</text>
<text top="1033" left="74" width="40" height="16" font="0">if ID</text>
<text top="1040" left="114" width="5" height="11" font="4">j</text>
<text top="1033" left="126" width="539" height="16" font="0">is unassigned. If there is a conﬂict (if an overlapping run has assigned ID</text>
<text top="1040" left="664" width="5" height="11" font="4">j</text>
<text top="1033" left="671" width="148" height="16" font="0">), the equivalence of</text>
<text top="1059" left="74" width="71" height="16" font="0">run i, EQ</text>
<text top="1066" left="146" width="4" height="11" font="4">i</text>
<text top="1059" left="155" width="83" height="16" font="0">is set to ID</text>
<text top="1066" left="238" width="5" height="11" font="4">j</text>
<text top="1059" left="245" width="4" height="16" font="0">.</text>
<text top="1085" left="96" width="515" height="16" font="0">The third stage ResolveConﬂict(runs) solves the conﬂicts where ID</text>
<text top="1092" left="611" width="4" height="11" font="4">i</text>
<text top="1085" left="627" width="53" height="16" font="0">= EQ</text>
<text top="1092" left="680" width="4" height="11" font="4">i</text>
<text top="1085" left="685" width="134" height="16" font="0">. In the example</text>
<text top="1111" left="74" width="53" height="16" font="0">(Figure</text>
<text top="1111" left="134" width="9" height="16" font="5"><a href="pdfxml.html#15">8</a></text>
<text top="1111" left="143" width="676" height="16" font="0"><a href="pdfxml.html#15">) </a>a conﬂict occurs at B4, due to the overlap with B5 and B2. This conﬂict is resolved by</text>
<text top="1137" left="74" width="744" height="16" font="0">changing ID = 1 and EQ = 1 for all the ﬁve runs. This is the most sequential part of the architecture</text>
</page>
<page number="15" position="absolute" top="0" left="0" height="1262" width="892">
<text top="75" left="74" width="56" height="15" font="0">Sensors</text>
<text top="75" left="135" width="63" height="16" font="0">2012, 12</text>
<text top="75" left="792" width="27" height="16" font="0">599</text>
<text top="131" left="74" width="744" height="16" font="0">and it can take the same number of cycles as the square of the number of runs in the image in the worst</text>
<text top="157" left="74" width="598" height="16" font="0">case, although this number is usually low. This study is more deeply performed in <a href="pdfxml.html#27">[</a></text>
<text top="157" left="673" width="18" height="16" font="5"><a href="pdfxml.html#27">21</a></text>
<text top="157" left="691" width="10" height="16" font="0"><a href="pdfxml.html#27">].</a></text>
<text top="200" left="233" width="426" height="16" font="0">Figure 8. Run-length connect component algorithm stages.</text>
<text top="606" left="74" width="74" height="16" font="0">4. Results</text>
<text top="650" left="96" width="723" height="16" font="0">In this section we evaluate the proposed system in terms of performance and accuracy, comparing with</text>
<text top="676" left="74" width="744" height="16" font="0">other approaches and showing the approach’s advantages over other systems described in the literature.</text>
<text top="702" left="74" width="744" height="16" font="0">Note that the contribution of this work goes beyond the selection and combination of different algorithms</text>
<text top="728" left="74" width="744" height="16" font="0">and implementation techniques. As it will be seen in this section, high performance with very restricted</text>
<text top="753" left="74" width="744" height="16" font="0">resources utilization is only possible thanks to the proper combination of latest co-design techniques and</text>
<text top="779" left="74" width="744" height="16" font="0">description languages ﬁtting the right level of abstraction. This design approach is seldom used in the</text>
<text top="805" left="74" width="514" height="16" font="0">literature and it is one of contributions that we put forward in this work.</text>
<text top="849" left="74" width="178" height="15" font="0">4.1. System Performance</text>
<text top="892" left="96" width="723" height="16" font="0">For the sake of hardware feasibility, we shall take into account hardware resources in order to achieve</text>
<text top="918" left="74" width="526" height="16" font="0">a good trade-off between resource consumption and system accuracy.</text>
<text top="918" left="616" width="77" height="16" font="0">In Section</text>
<text top="918" left="701" width="22" height="16" font="5"><a href="pdfxml.html#8">3.1</a></text>
<text top="918" left="723" width="95" height="16" font="0"><a href="pdfxml.html#8">, </a>a bit-width</text>
<text top="944" left="74" width="744" height="16" font="0">optimization has been performed so that the accuracy of the model is not compromised and the</text>
<text top="970" left="74" width="434" height="16" font="0">requirements of hardware resources are affordable. Figure</text>
<text top="970" left="515" width="9" height="16" font="5"><a href="pdfxml.html#16">9</a></text>
<text top="970" left="530" width="288" height="16" font="0">shows the consumption of resources in</text>
<text top="996" left="74" width="744" height="16" font="0">the FPGA due to the different data bit-width chosen for the variables involved in the background model.</text>
<text top="1021" left="96" width="723" height="16" font="0">The entire system has been implemented and experimentally tested on the video processing board</text>
<text top="1047" left="74" width="744" height="16" font="0">ViSmart, using Xilinx FPGA XC3SD3400aFG676. This platform contains a DIMM DDR2 memory</text>
<text top="1073" left="74" width="744" height="16" font="0">module, whose memory conﬁguration (Memory Interface: DDR2 @ 133 MHz 32 bits. NPI Width:</text>
<text top="1099" left="74" width="744" height="16" font="0">64 bits. MPMC NPI Type: 64 Word Burst.) allows for a high bandwidth, such as 920 MBytes/sec</text>
<text top="1124" left="74" width="146" height="16" font="0">empirically proved <a href="pdfxml.html#27">[</a></text>
<text top="1124" left="221" width="18" height="16" font="5"><a href="pdfxml.html#27">22</a></text>
<text top="1124" left="239" width="580" height="16" font="0"><a href="pdfxml.html#27">]. </a>This bandwidth is a key feature in order to reach a high frame rate. The frame</text>
<text top="1150" left="74" width="744" height="16" font="0">rate can be estimated from our system bandwidth. On the one hand, as we have previously described,</text>
<text top="1176" left="74" width="149" height="16" font="0">each data tuple &lt; E</text>
<text top="1183" left="223" width="4" height="11" font="4">i</text>
<text top="1176" left="228" width="24" height="16" font="0">, B</text>
<text top="1183" left="252" width="4" height="11" font="4">i</text>
<text top="1176" left="257" width="23" height="16" font="0">, C</text>
<text top="1183" left="280" width="4" height="11" font="4">i</text>
<text top="1176" left="285" width="25" height="16" font="0">, D</text>
<text top="1183" left="309" width="4" height="11" font="4">i</text>
<text top="1176" left="315" width="28" height="16" font="0">, (S</text>
<text top="1183" left="342" width="4" height="11" font="4">i</text>
<text top="1176" left="347" width="7" height="16" font="0">)</text>
<text top="1173" left="354" width="16" height="11" font="4">−1</text>
<text top="1176" left="371" width="26" height="16" font="0">, (a</text>
<text top="1183" left="398" width="4" height="11" font="4">i</text>
<text top="1176" left="403" width="7" height="16" font="0">)</text>
<text top="1173" left="409" width="16" height="11" font="4">−1</text>
<text top="1176" left="426" width="25" height="16" font="0">, (b</text>
<text top="1183" left="451" width="4" height="11" font="4">i</text>
<text top="1176" left="456" width="7" height="16" font="0">)</text>
<text top="1173" left="463" width="16" height="11" font="4">−1</text>
<text top="1176" left="487" width="332" height="16" font="0">&gt;, which deﬁnes the background model for a</text>
</page>
<page number="16" position="absolute" top="0" left="0" height="1262" width="892">
<text top="75" left="74" width="56" height="15" font="0">Sensors</text>
<text top="75" left="135" width="63" height="16" font="0">2012, 12</text>
<text top="75" left="792" width="27" height="16" font="0">600</text>
<text top="131" left="74" width="744" height="16" font="0">pixel, requires a total of 210 bits. On the other hand, each image pixel &lt; R, G, B &gt; requires 3 bytes. In</text>
<text top="157" left="74" width="744" height="16" font="0">total, for each pixel in the image, we will have to read from memory 28 bytes. For that reason, with one</text>
<text top="183" left="74" width="543" height="16" font="0">camera of resolution 1,024 × 1,024, the throughput is computed as follows:</text>
<text top="213" left="262" width="127" height="16" font="0">bandwidth DDR2</text>
<text top="244" left="244" width="123" height="16" font="0">ImageResolution</text>
<text top="235" left="368" width="38" height="16" font="0">bytes</text>
<text top="253" left="369" width="36" height="16" font="0">pixel</text>
<text top="225" left="415" width="14" height="16" font="0">=</text>
<text top="212" left="488" width="26" height="16" font="0">920</text>
<text top="237" left="435" width="132" height="16" font="0">1024 × 1024 × 28</text>
<text top="225" left="573" width="78" height="16" font="0">= 32.8f ps</text>
<text top="225" left="798" width="21" height="16" font="0">(9)</text>
<text top="307" left="117" width="659" height="16" font="0">Figure 9. Consumption of resources in the FPGA for the background subtraction IP core.</text>
<text top="333" left="117" width="659" height="16" font="0">Each line indicates the resources required for the IP core as a function of the bit-width of the</text>
<text top="359" left="117" width="218" height="16" font="0">variables described in Section</text>
<text top="359" left="341" width="22" height="16" font="5"><a href="pdfxml.html#8">3.1</a></text>
<text top="359" left="363" width="413" height="16" font="0"><a href="pdfxml.html#8">, </a>assuming the others are ﬁxed to the chosen value. Our</text>
<text top="384" left="117" width="284" height="16" font="0">choices have been marked in the ﬁgure.</text>
<text top="738" left="96" width="723" height="16" font="0">The whole system has different clock domains (operating frequencies) for the different modules.</text>
<text top="763" left="74" width="744" height="16" font="0">The Microblaze processor and the system buses operate at a frequency of 66.5 MHz. Communication</text>
<text top="789" left="74" width="744" height="16" font="0">module (Ethernet based) at 25 MHz, the input video modules at 13.5 MHz and, ﬁnally, the DDR2</text>
<text top="815" left="74" width="744" height="16" font="0">interface operates at 133 MHz. Although the maximum processing frequency of our IP core Background</text>
<text top="841" left="74" width="81" height="15" font="0">subtraction</text>
<text top="841" left="162" width="656" height="16" font="0">is 69.5 MHz, it runs at 66.5 MHz (the same as Microblaze and system buses) to avoid a</text>
<text top="867" left="74" width="432" height="16" font="0">higher complexity of the FPGA clock distribution networks.</text>
<text top="892" left="96" width="723" height="16" font="0">The FPGA implementation extends its use of many portable applications as embedded systems, where</text>
<text top="918" left="74" width="744" height="16" font="0">parameters such as size and low power (our system has a consumption of 5.76 W estimated with Xilinx</text>
<text top="944" left="74" width="142" height="16" font="0">Xpower Analyzer <a href="pdfxml.html#26">[</a></text>
<text top="944" left="216" width="18" height="16" font="5"><a href="pdfxml.html#26">16</a></text>
<text top="944" left="234" width="584" height="16" font="0"><a href="pdfxml.html#26">]) </a>are key features which are not achievable by other approaches, such as high</text>
<text top="970" left="74" width="156" height="16" font="0">frequency processors.</text>
<text top="996" left="96" width="723" height="16" font="0">The FPGA in which the system has been implemented is XC3SD3400aFG676 (actual price:</text>
<text top="1020" left="74" width="244" height="17" font="0">≈86.5 dollars in 2011) by Xilinx <a href="pdfxml.html#27">[</a></text>
<text top="1021" left="318" width="18" height="16" font="5"><a href="pdfxml.html#27">23</a></text>
<text top="1021" left="336" width="483" height="16" font="0"><a href="pdfxml.html#27">]. </a>The resource consumption and operating frequency of each of the</text>
<text top="1047" left="74" width="271" height="16" font="0">parts of the system are shown in Table</text>
<text top="1047" left="349" width="9" height="16" font="5"><a href="pdfxml.html#17">2</a></text>
<text top="1047" left="358" width="460" height="16" font="0"><a href="pdfxml.html#17">. </a>Taking into account these results, it would be feasible to reduce</text>
<text top="1073" left="74" width="744" height="16" font="0">costs by using a cheaper FPGA with less logic resources, such as XC3SD1800A-4CSG484C (actual</text>
<text top="1099" left="74" width="744" height="16" font="0">price: ≈53 dollars in 2011). However, in that case it would be necessary to reduce the consumption</text>
<text top="1124" left="74" width="744" height="16" font="0">of logic resources due to the use of complex memory interfaces (DDR2). One possibility would be the</text>
<text top="1150" left="74" width="744" height="16" font="0">use of SDRAM memory, what would lead to a decrease in system performance but since performance is</text>
<text top="1176" left="74" width="411" height="16" font="0">currently quite high, this alternative would be acceptable.</text>
</page>
<page number="17" position="absolute" top="0" left="0" height="1262" width="892">
<text top="75" left="74" width="56" height="15" font="0">Sensors</text>
<text top="75" left="135" width="63" height="16" font="0">2012, 12</text>
<text top="75" left="792" width="27" height="16" font="0">601</text>
<text top="131" left="117" width="659" height="16" font="0">Table 2. Complete hardware resources required on a Xilinx XC3SD3400aFG676 FPGA</text>
<text top="157" left="117" width="168" height="16" font="0">after place and route.</text>
<text top="157" left="307" width="469" height="16" font="0">The whole system includes processing modules (background</text>
<text top="183" left="117" width="262" height="16" font="0">subtraction and blob detection core).</text>
<text top="245" left="74" width="59" height="16" font="0">Module</text>
<text top="245" left="204" width="43" height="16" font="0">Slices</text>
<text top="233" left="296" width="71" height="16" font="0">Slice Flip</text>
<text top="258" left="311" width="42" height="16" font="0">Flops</text>
<text top="233" left="410" width="54" height="16" font="0">4 input</text>
<text top="258" left="415" width="44" height="16" font="0">LUTs</text>
<text top="245" left="498" width="161" height="16" font="0">DSP48s Block RAM</text>
<text top="245" left="701" width="10" height="16" font="0">f</text>
<text top="252" left="711" width="19" height="11" font="4">clk</text>
<text top="245" left="731" width="68" height="16" font="0">(M Hz)</text>
<text top="306" left="78" width="36" height="16" font="0">Total</text>
<text top="332" left="78" width="50" height="16" font="0">system</text>
<text top="318" left="176" width="385" height="16" font="0">1,5522 (65%) 1,8368 (38%) 1,9616 (41%) 48 (38%)</text>
<text top="318" left="580" width="67" height="16" font="0">44 (35%)</text>
<text top="293" left="691" width="119" height="16" font="0">DDR2 interface:</text>
<text top="319" left="670" width="160" height="16" font="0">133 MHz. Microblaze</text>
<text top="345" left="677" width="145" height="16" font="0">and PLB: 66.5 MHz</text>
<text top="371" left="78" width="88" height="16" font="0">Background</text>
<text top="397" left="78" width="80" height="16" font="0">subtraction</text>
<text top="383" left="181" width="90" height="16" font="0">4,400 (18%)</text>
<text top="383" left="287" width="90" height="16" font="0">5,032 (11%)</text>
<text top="383" left="397" width="81" height="16" font="0">3,982 (8%)</text>
<text top="383" left="494" width="67" height="16" font="0">36 (29%)</text>
<text top="383" left="589" width="49" height="16" font="0">0 (0%)</text>
<text top="371" left="690" width="120" height="16" font="0">66.5 MHz (Frec.</text>
<text top="397" left="689" width="122" height="16" font="0">Max. 69.5 MHz)</text>
<text top="422" left="78" width="35" height="16" font="0">Blob</text>
<text top="448" left="78" width="66" height="16" font="0">detection</text>
<text top="435" left="185" width="81" height="16" font="0">1,180 (5%)</text>
<text top="435" left="298" width="67" height="16" font="0">874 (2%)</text>
<text top="435" left="399" width="76" height="16" font="0">2438 (5%)</text>
<text top="435" left="503" width="49" height="16" font="0">0 (0%)</text>
<text top="435" left="589" width="49" height="16" font="0">8 (6%)</text>
<text top="483" left="78" width="32" height="16" font="0">&lt; E</text>
<text top="489" left="110" width="4" height="11" font="4">i</text>
<text top="483" left="119" width="83" height="16" font="0">(48 bits), B</text>
<text top="489" left="202" width="4" height="11" font="4">i</text>
<text top="483" left="211" width="82" height="16" font="0">(26 bits), C</text>
<text top="489" left="293" width="4" height="11" font="4">i</text>
<text top="483" left="303" width="84" height="16" font="0">(26 bits), D</text>
<text top="489" left="386" width="4" height="11" font="4">i</text>
<text top="483" left="396" width="87" height="16" font="0">(26 bits), (S</text>
<text top="489" left="483" width="4" height="11" font="4">i</text>
<text top="483" left="488" width="7" height="16" font="0">)</text>
<text top="480" left="495" width="16" height="11" font="4">−1</text>
<text top="483" left="516" width="85" height="16" font="0">(48 bits), (a</text>
<text top="489" left="602" width="4" height="11" font="4">i</text>
<text top="483" left="607" width="7" height="16" font="0">)</text>
<text top="480" left="613" width="16" height="11" font="4">−1</text>
<text top="483" left="635" width="84" height="16" font="0">(18 bits), (b</text>
<text top="489" left="718" width="4" height="11" font="4">i</text>
<text top="483" left="724" width="7" height="16" font="0">)</text>
<text top="480" left="730" width="16" height="11" font="4">−1</text>
<text top="483" left="752" width="74" height="16" font="0">(18 bits)&gt;</text>
<text top="542" left="96" width="723" height="16" font="0">We have also addressed the evaluation of the real hardware in comparison with the ImpulseC simulator</text>
<text top="568" left="74" width="744" height="16" font="0">in order to check the ﬁnal system degradation. Even if the simulator operates in ﬁxed point, there are</text>
<text top="593" left="74" width="744" height="16" font="0">differences in the performance of the simulator and real hardware, due to restrictions of the simulator</text>
<text top="619" left="74" width="744" height="16" font="0">to emulate ﬁxed point arithmetics of the hardware system. In order to introduce the image sequence</text>
<text top="645" left="74" width="744" height="16" font="0">evaluation and to retrieve resulting background, we have used the gigabit ethernet interface of the</text>
<text top="671" left="74" width="420" height="16" font="0">ViSmart4 video processing board from Seven Solutions <a href="pdfxml.html#27">[</a></text>
<text top="671" left="494" width="18" height="16" font="5"><a href="pdfxml.html#27">18</a></text>
<text top="671" left="512" width="60" height="16" font="0"><a href="pdfxml.html#27">]. </a>Table</text>
<text top="671" left="578" width="9" height="16" font="5"><a href="pdfxml.html#17">3</a></text>
<text top="671" left="593" width="226" height="16" font="0">shows the total errors obtained</text>
<text top="697" left="74" width="744" height="16" font="0">by the proposed architecture, tested with the simulator and the ViSmart4 video processing board, as well</text>
<text top="722" left="74" width="744" height="16" font="0">as the difference between them and the percentage of different pixels. The percentage is computed as</text>
<text top="748" left="74" width="744" height="16" font="0">follows. We segment the scene using the software simulator and the real hardware obtaining two binary</text>
<text top="774" left="74" width="744" height="16" font="0">maps. Then we compute the number of pixels in which the ground truth differs from both systems and</text>
<text top="800" left="74" width="744" height="16" font="0">from that number we estimate the percentage of different pixels of the scene. From these results, it can be</text>
<text top="825" left="74" width="744" height="16" font="0">seen that the degradation is really small, less than 0.5% in every test except for Waving Trees, validating</text>
<text top="851" left="74" width="234" height="16" font="0">the ﬁnal system implementation.</text>
<text top="895" left="117" width="659" height="16" font="0">Table 3. Total errors differences between simulation and real hardware results, in number of</text>
<text top="921" left="117" width="416" height="16" font="0">pixels and percentage. Tested over the Wallﬂower dataset.</text>
<text top="971" left="283" width="31" height="16" font="0">Test</text>
<text top="971" left="333" width="84" height="16" font="0">Simulation</text>
<text top="971" left="434" width="78" height="16" font="0">Hardware</text>
<text top="971" left="530" width="30" height="16" font="0">Diff</text>
<text top="971" left="585" width="18" height="16" font="0">%</text>
<text top="1006" left="293" width="12" height="16" font="0">B</text>
<text top="1006" left="354" width="40" height="16" font="0">2,786</text>
<text top="1006" left="453" width="40" height="16" font="0">2,868</text>
<text top="1006" left="536" width="18" height="16" font="0">82</text>
<text top="1006" left="578" width="31" height="16" font="0">0.43</text>
<text top="1032" left="293" width="12" height="16" font="0">C</text>
<text top="1032" left="354" width="40" height="16" font="0">3,114</text>
<text top="1032" left="453" width="40" height="16" font="0">3,208</text>
<text top="1032" left="536" width="18" height="16" font="0">94</text>
<text top="1032" left="578" width="31" height="16" font="0">0.49</text>
<text top="1058" left="288" width="22" height="16" font="0">FA</text>
<text top="1058" left="354" width="40" height="16" font="0">4,059</text>
<text top="1058" left="453" width="40" height="16" font="0">4,095</text>
<text top="1058" left="536" width="18" height="16" font="0">36</text>
<text top="1058" left="578" width="31" height="16" font="0">0.19</text>
<text top="1084" left="289" width="21" height="16" font="0">LS</text>
<text top="1084" left="350" width="49" height="16" font="0">14,452</text>
<text top="1084" left="449" width="49" height="16" font="0">14,501</text>
<text top="1084" left="536" width="18" height="16" font="0">49</text>
<text top="1084" left="578" width="31" height="16" font="0">0.26</text>
<text top="1109" left="285" width="29" height="16" font="0">MO</text>
<text top="1109" left="365" width="18" height="16" font="0">59</text>
<text top="1109" left="464" width="18" height="16" font="0">68</text>
<text top="1109" left="541" width="9" height="16" font="0">9</text>
<text top="1109" left="578" width="31" height="16" font="0">0.05</text>
<text top="1135" left="287" width="24" height="16" font="0">TD</text>
<text top="1135" left="354" width="40" height="16" font="0">1,347</text>
<text top="1135" left="453" width="40" height="16" font="0">1,381</text>
<text top="1135" left="536" width="18" height="16" font="0">34</text>
<text top="1135" left="578" width="31" height="16" font="0">0.18</text>
<text top="1161" left="285" width="28" height="16" font="0">WT</text>
<text top="1161" left="354" width="40" height="16" font="0">6,085</text>
<text top="1161" left="453" width="40" height="16" font="0">6,273</text>
<text top="1161" left="532" width="27" height="16" font="0">188</text>
<text top="1161" left="578" width="31" height="16" font="0">0.98</text>
</page>
<page number="18" position="absolute" top="0" left="0" height="1262" width="892">
	<fontspec id="7" size="14" family="Times" color="#000000"/>
	<fontspec id="8" size="14" family="Times" color="#0000ff"/>
<text top="75" left="74" width="56" height="15" font="0">Sensors</text>
<text top="75" left="135" width="63" height="16" font="0">2012, 12</text>
<text top="75" left="792" width="27" height="16" font="0">602</text>
<text top="131" left="74" width="388" height="15" font="0">4.2. Performance Comparison with Other Approaches</text>
<text top="175" left="96" width="723" height="16" font="0">It is important to compare the current implementation with other approaches described in the literature</text>
<text top="200" left="74" width="120" height="16" font="0">(shown in Table</text>
<text top="200" left="202" width="9" height="16" font="5"><a href="pdfxml.html#18">4</a></text>
<text top="200" left="211" width="608" height="16" font="0"><a href="pdfxml.html#18">). </a>In order to evaluate the processing speed, we use the MegaPixels per Second</text>
<text top="226" left="74" width="744" height="16" font="0">measure (MPPS), which is the multiplication of image size by frame rate. The background subtraction</text>
<text top="252" left="74" width="481" height="16" font="0">algorithm by Horprasert has been implemented by other authors <a href="pdfxml.html#26">[</a></text>
<text top="252" left="556" width="18" height="16" font="5"><a href="pdfxml.html#26">11</a></text>
<text top="252" left="574" width="245" height="16" font="0"><a href="pdfxml.html#26">], </a>reaching 30 fps with resolution</text>
<text top="278" left="74" width="744" height="16" font="0">240 × 120, i.e., 0.824 MPPS. Our architecture presents a large improvement over this performance</text>
<text top="304" left="74" width="744" height="16" font="0">(32.8 fps, 1,024 × 1,024, i.e., 32.8 MPPS), and we have implemented other features such as</text>
<text top="329" left="74" width="744" height="16" font="0">morphological ﬁlters, shadow detection, and a mechanism to send results through Ethernet gigabit. Other</text>
<text top="355" left="74" width="370" height="16" font="0">authors have proposed different approaches, as in <a href="pdfxml.html#26">[</a></text>
<text top="355" left="444" width="9" height="16" font="5"><a href="pdfxml.html#26">9</a></text>
<text top="355" left="453" width="52" height="16" font="0"><a href="pdfxml.html#26">] </a>and <a href="pdfxml.html#26">[</a></text>
<text top="355" left="505" width="18" height="16" font="5"><a href="pdfxml.html#26">10</a></text>
<text top="355" left="523" width="296" height="16" font="0"><a href="pdfxml.html#26">] </a>based on MOG (Mixture of Gaussians).</text>
<text top="381" left="74" width="86" height="16" font="0">Jiang et al. <a href="pdfxml.html#26">[</a></text>
<text top="381" left="160" width="18" height="16" font="5"><a href="pdfxml.html#26">10</a></text>
<text top="381" left="178" width="640" height="16" font="0"><a href="pdfxml.html#26">] </a>reach 38 fps with resolution 1,024 × 1,024 by applying a compression scheme, but with a</text>
<text top="407" left="74" width="498" height="16" font="0">considerable loss of accuracy. The system proposed by Appiah et al. <a href="pdfxml.html#26">[</a></text>
<text top="407" left="573" width="9" height="16" font="5"><a href="pdfxml.html#26">9</a></text>
<text top="407" left="582" width="237" height="16" font="0"><a href="pdfxml.html#26">] </a>performs 145 fps for 768 × 576</text>
<text top="433" left="74" width="704" height="16" font="0">frames, but obtaining worse results in terms of accuracy than our presented approach (Section</text>
<text top="433" left="786" width="22" height="16" font="5"><a href="pdfxml.html#19">4.3</a></text>
<text top="433" left="808" width="10" height="16" font="0"><a href="pdfxml.html#19">).</a></text>
<text top="458" left="74" width="99" height="16" font="0">Bravo et al. <a href="pdfxml.html#26">[</a></text>
<text top="458" left="173" width="9" height="16" font="5"><a href="pdfxml.html#26">8</a></text>
<text top="458" left="182" width="636" height="16" font="0"><a href="pdfxml.html#26">] </a>implement PCA algorithm on FPGA, which performs at maximum between 190 and</text>
<text top="484" left="74" width="744" height="16" font="0">250 fps for 256 × 256 frames depending on the number of signiﬁcant eigenvectors, i.e., between 11.875</text>
<text top="510" left="74" width="744" height="16" font="0">and 15.625 MPPS. However, due to the lack of accuracy information, a more detailed comparison is</text>
<text top="536" left="74" width="91" height="16" font="0">not possible.</text>
<text top="562" left="96" width="462" height="16" font="0">For standard GPU platforms, the approaches described in Carr <a href="pdfxml.html#26">[</a></text>
<text top="562" left="558" width="18" height="16" font="5"><a href="pdfxml.html#26">13</a></text>
<text top="562" left="575" width="160" height="16" font="0"><a href="pdfxml.html#26">] </a>and Vu Pham et al. <a href="pdfxml.html#26">[</a></text>
<text top="562" left="736" width="18" height="16" font="5"><a href="pdfxml.html#26">14</a></text>
<text top="562" left="754" width="65" height="16" font="0"><a href="pdfxml.html#26">] </a>achieve</text>
<text top="587" left="74" width="349" height="16" font="0">high accuracy. Furthermore, Vu Pham et al. <a href="pdfxml.html#26">[</a></text>
<text top="587" left="423" width="18" height="16" font="5"><a href="pdfxml.html#26">14</a></text>
<text top="587" left="441" width="377" height="16" font="0"><a href="pdfxml.html#26">] </a>presents a high frame rate (980 fps, 400 × 300,</text>
<text top="613" left="74" width="22" height="15" font="0">i.e.</text>
<text top="613" left="96" width="722" height="16" font="0">, 112.15 MPPS). The main limitation of our approach with respect to other contributions based on</text>
<text top="639" left="74" width="280" height="16" font="0">MOG (Mixture of Gaussians) such as <a href="pdfxml.html#26">[</a></text>
<text top="639" left="355" width="18" height="16" font="5"><a href="pdfxml.html#26">14</a></text>
<text top="639" left="373" width="446" height="16" font="0"><a href="pdfxml.html#26">] </a>is the accuracy of results. On the other hand, GPU platforms</text>
<text top="665" left="74" width="744" height="16" font="0">have the problem of implementation for embedded systems especially in terms of portability, size and</text>
<text top="690" left="74" width="146" height="16" font="0">power consumption.</text>
<text top="735" left="160" width="574" height="16" font="0">Table 4. Comparison with other previous approaches described in the literature.</text>
<text top="796" left="74" width="69" height="15" font="7">Approach</text>
<text top="796" left="312" width="55" height="15" font="7">Method</text>
<text top="785" left="427" width="44" height="15" font="7">Image</text>
<text top="809" left="411" width="75" height="15" font="7">Resolution</text>
<text top="796" left="502" width="83" height="15" font="7">Frame Rate</text>
<text top="796" left="619" width="45" height="15" font="7">MPPS</text>
<text top="785" left="730" width="68" height="15" font="7">Processor</text>
<text top="809" left="747" width="34" height="15" font="7">Type</text>
<text top="842" left="74" width="101" height="15" font="7">Presented work</text>
<text top="842" left="304" width="70" height="15" font="7">Horprasert</text>
<text top="842" left="401" width="95" height="15" font="7">1,024 × 1,024</text>
<text top="842" left="530" width="29" height="15" font="7">32.8</text>
<text top="842" left="627" width="29" height="15" font="7">32.8</text>
<text top="842" left="743" width="42" height="15" font="7">FPGA</text>
<text top="866" left="74" width="148" height="15" font="7">Oliveira et al. (2006) <a href="pdfxml.html#26">[</a></text>
<text top="866" left="222" width="16" height="15" font="8"><a href="pdfxml.html#26">11</a></text>
<text top="866" left="239" width="5" height="15" font="7"><a href="pdfxml.html#26">]</a></text>
<text top="866" left="304" width="70" height="15" font="7">Horprasert</text>
<text top="866" left="414" width="70" height="15" font="7">240 × 120</text>
<text top="866" left="536" width="16" height="15" font="7">30</text>
<text top="866" left="623" width="37" height="15" font="7">0.824</text>
<text top="866" left="743" width="42" height="15" font="7">FPGA</text>
<text top="902" left="74" width="130" height="15" font="7">Jiang et al. (2005) <a href="pdfxml.html#26">[</a></text>
<text top="902" left="204" width="16" height="15" font="8"><a href="pdfxml.html#26">10</a></text>
<text top="902" left="220" width="5" height="15" font="7"><a href="pdfxml.html#26">]</a></text>
<text top="902" left="320" width="38" height="15" font="7">MOG</text>
<text top="902" left="401" width="95" height="15" font="7">1,024 × 1,024</text>
<text top="902" left="536" width="16" height="15" font="7">38</text>
<text top="902" left="633" width="16" height="15" font="7">38</text>
<text top="891" left="718" width="92" height="15" font="7">FPGA: Xilinx</text>
<text top="915" left="721" width="86" height="15" font="7">Virtex2 1000</text>
<text top="950" left="74" width="143" height="15" font="7">Appiah et al. (2005) <a href="pdfxml.html#27">[</a></text>
<text top="950" left="218" width="16" height="15" font="8"><a href="pdfxml.html#27">21</a></text>
<text top="950" left="234" width="5" height="15" font="7"><a href="pdfxml.html#27">]</a></text>
<text top="950" left="321" width="37" height="15" font="7">MOC</text>
<text top="950" left="414" width="70" height="15" font="7">768 × 576</text>
<text top="950" left="532" width="25" height="15" font="7">145</text>
<text top="950" left="623" width="37" height="15" font="7">61.18</text>
<text top="939" left="718" width="92" height="15" font="7">FPGA: Xilinx</text>
<text top="963" left="700" width="127" height="15" font="7">VirtexII XC2v6000</text>
<text top="1011" left="74" width="134" height="15" font="7">Bravo et al. (2010) <a href="pdfxml.html#26">[</a></text>
<text top="1011" left="209" width="8" height="15" font="8"><a href="pdfxml.html#26">8</a></text>
<text top="1011" left="217" width="5" height="15" font="7"><a href="pdfxml.html#26">]</a></text>
<text top="1011" left="324" width="32" height="15" font="7">PCA</text>
<text top="1011" left="414" width="70" height="15" font="7">256 × 256</text>
<text top="1011" left="515" width="57" height="15" font="7">190–250</text>
<text top="1011" left="592" width="98" height="15" font="7">11.875–15.625</text>
<text top="987" left="718" width="92" height="15" font="7">FPGA: Xilinx</text>
<text top="1012" left="735" width="57" height="15" font="7">Virtex-II</text>
<text top="1036" left="720" width="87" height="15" font="7">Pro XC2VP7</text>
<text top="1060" left="74" width="105" height="15" font="7">Carr, P. (2008) <a href="pdfxml.html#26">[</a></text>
<text top="1060" left="180" width="16" height="15" font="8"><a href="pdfxml.html#26">13</a></text>
<text top="1060" left="196" width="5" height="15" font="7"><a href="pdfxml.html#26">]</a></text>
<text top="1060" left="320" width="38" height="15" font="7">MOG</text>
<text top="1060" left="414" width="70" height="15" font="7">704 × 576</text>
<text top="1060" left="530" width="29" height="15" font="7">16.7</text>
<text top="1060" left="627" width="29" height="15" font="7">6.46</text>
<text top="1060" left="747" width="33" height="15" font="7">GPU</text>
<text top="1095" left="74" width="155" height="15" font="7">Vu Pham et al. (2010) <a href="pdfxml.html#26">[</a></text>
<text top="1095" left="230" width="16" height="15" font="8"><a href="pdfxml.html#26">14</a></text>
<text top="1095" left="246" width="5" height="15" font="7"><a href="pdfxml.html#26">]</a></text>
<text top="1084" left="305" width="69" height="15" font="7">Zivkovic’s</text>
<text top="1108" left="287" width="104" height="15" font="7">Extended MOG</text>
<text top="1095" left="414" width="70" height="15" font="7">400 × 300</text>
<text top="1095" left="532" width="25" height="15" font="7">980</text>
<text top="1095" left="619" width="45" height="15" font="7">112.15</text>
<text top="1095" left="747" width="33" height="15" font="7">GPU</text>
<text top="1132" left="74" width="181" height="15" font="7">Ierodiaconou et al. (2006) <a href="pdfxml.html#26">[</a></text>
<text top="1132" left="256" width="16" height="15" font="8"><a href="pdfxml.html#26">12</a></text>
<text top="1132" left="272" width="5" height="15" font="7"><a href="pdfxml.html#26">]</a></text>
<text top="1132" left="320" width="38" height="15" font="7">MOG</text>
<text top="1132" left="414" width="70" height="15" font="7">352 × 288</text>
<text top="1132" left="536" width="16" height="15" font="7">21</text>
<text top="1132" left="627" width="29" height="15" font="7">2.03</text>
<text top="1132" left="749" width="30" height="15" font="7">DSP</text>
</page>
<page number="19" position="absolute" top="0" left="0" height="1262" width="892">
<text top="75" left="74" width="56" height="15" font="0">Sensors</text>
<text top="75" left="135" width="63" height="16" font="0">2012, 12</text>
<text top="75" left="792" width="27" height="16" font="0">603</text>
<text top="131" left="96" width="644" height="16" font="0">Other implementations have been proposed using TI DM642 DSP platform, as in <a href="pdfxml.html#26">[</a></text>
<text top="131" left="740" width="18" height="16" font="5"><a href="pdfxml.html#26">12</a></text>
<text top="131" left="758" width="10" height="16" font="0"><a href="pdfxml.html#26">].</a></text>
<text top="131" left="787" width="32" height="16" font="0">This</text>
<text top="157" left="74" width="744" height="16" font="0">contribution is based on MOG (Mixture of Gaussians) and it has been implemented using ﬁxed-point</text>
<text top="183" left="74" width="264" height="16" font="0">arithmetics. According to datasheet <a href="pdfxml.html#27">[</a></text>
<text top="183" left="338" width="18" height="16" font="5"><a href="pdfxml.html#27">24</a></text>
<text top="183" left="356" width="269" height="16" font="0"><a href="pdfxml.html#27">] </a>and using the spreadsheet spra962f <a href="pdfxml.html#27">[</a></text>
<text top="183" left="625" width="18" height="16" font="5"><a href="pdfxml.html#27">25</a></text>
<text top="183" left="643" width="175" height="16" font="0"><a href="pdfxml.html#27">], </a>we have calculated the</text>
<text top="208" left="74" width="744" height="16" font="0">power consumption of DM642 DSP, obtaining 2.5 W. We have assumed that this DSP run at 720 MHZ</text>
<text top="234" left="74" width="351" height="16" font="0">and a 80% CPU utilization. According to Table</text>
<text top="234" left="431" width="9" height="16" font="5"><a href="pdfxml.html#18">4</a></text>
<text top="234" left="440" width="378" height="16" font="0"><a href="pdfxml.html#18">, </a>this DSP is able to compute 2.03 MPPS and if we</text>
<text top="260" left="74" width="744" height="16" font="0">take into account its low power consumption (2.5 W), it shows 0.8 MPPS per Watt. If we make the</text>
<text top="286" left="74" width="744" height="16" font="0">calculations for our system (32.8 MPPS and 5.76 W), we achieve 5.7 MPPS per Watt. Therefore our</text>
<text top="311" left="74" width="333" height="16" font="0">FPGA-based system has a better performance.</text>
<text top="337" left="96" width="723" height="16" font="0">For some applications, these DSPs offer all the performance we need. In addition, DSPs enable rapid</text>
<text top="363" left="74" width="744" height="16" font="0">development of complex algorithms and are better suited for low power applications, although they can</text>
<text top="389" left="74" width="744" height="16" font="0">only run up to four calculations at a time. On the other hand, when we need higher performance for other</text>
<text top="415" left="74" width="744" height="16" font="0">applications (e.g., background subtraction, image stabilization . . .), FPGAs are a good option, since they</text>
<text top="440" left="74" width="744" height="16" font="0">can perform mathematical operations in parallel at one time. Furthermore, FPGAs are excellent for glue</text>
<text top="466" left="74" width="744" height="16" font="0">logic, connecting multiple processing chips, peripherals and memories together. Therefore it is often</text>
<text top="492" left="74" width="744" height="16" font="0">better to use the FPGA as a coprocessor (video preprocessing functions) for a DSP. The integration</text>
<text top="518" left="74" width="744" height="16" font="0">of these two devices onto a single development platform can offer the best of both architectures by</text>
<text top="544" left="74" width="364" height="16" font="0">increasing performance and reducing overall cost <a href="pdfxml.html#27">[</a></text>
<text top="544" left="438" width="18" height="16" font="5"><a href="pdfxml.html#27">26</a></text>
<text top="544" left="456" width="10" height="16" font="0"><a href="pdfxml.html#27">].</a></text>
<text top="569" left="96" width="723" height="16" font="0">A commodity processor will be able to compute the proposed algorithm in real-time with a smaller</text>
<text top="595" left="74" width="381" height="16" font="0">resolution, depending on the level of optimization <a href="pdfxml.html#27">[</a></text>
<text top="595" left="455" width="18" height="16" font="5"><a href="pdfxml.html#27">27</a></text>
<text top="595" left="473" width="345" height="16" font="0"><a href="pdfxml.html#27">]. </a>Nevertheless, the target application required</text>
<text top="621" left="74" width="744" height="16" font="0">embedded processing, and due to this, the comparison of our system with standard processor is out of</text>
<text top="647" left="74" width="165" height="16" font="0">the scope of this paper.</text>
<text top="672" left="96" width="723" height="16" font="0">Finally, note that the processing performance is directly determined by the running clock frequency,</text>
<text top="698" left="74" width="744" height="16" font="0">and we are using a low cost FPGA with a reduced performance compared to other FPGAs on the market.</text>
<text top="724" left="74" width="744" height="16" font="0">Therefore, migration to faster technologies as Virtex-6 or Virtex-7 FPGAs could directly represent an</text>
<text top="750" left="74" width="744" height="16" font="0">improvement of the system performance, although latests Virtex devices have an even higher increase in</text>
<text top="776" left="74" width="744" height="16" font="0">costs and power consumption than the beneﬁts from better performance. An easy way to increase this</text>
<text top="801" left="74" width="744" height="16" font="0">performance if needed could simply be to replicate the processing cores and split the input image into a</text>
<text top="827" left="74" width="349" height="16" font="0">number of parts equal to the replication of cores.</text>
<text top="871" left="74" width="413" height="15" font="0">4.3. Evaluation of the Accuracy of the Background Model</text>
<text top="915" left="96" width="723" height="16" font="0">Apart from the evaluation of system performance and resources performed in the previous subsection,</text>
<text top="940" left="74" width="744" height="16" font="0">it is important to evaluate the quality of the segmentation obtained by the proposed architecture</text>
<text top="966" left="74" width="744" height="16" font="0">and to carry out a comparison with other background subtraction algorithms found in the literature.</text>
<text top="992" left="74" width="708" height="16" font="0">The algorithms which have been used for this comparison are MoG (Mixture of Gaussians) <a href="pdfxml.html#26">[</a></text>
<text top="992" left="783" width="9" height="16" font="5"><a href="pdfxml.html#26">3</a></text>
<text top="992" left="792" width="27" height="16" font="0"><a href="pdfxml.html#26">], </a>a</text>
<text top="1018" left="74" width="391" height="16" font="0">segmentation method based on Bayes decision rules <a href="pdfxml.html#26">[</a></text>
<text top="1018" left="466" width="9" height="16" font="5"><a href="pdfxml.html#26">5</a></text>
<text top="1018" left="475" width="180" height="16" font="0"><a href="pdfxml.html#26">], </a>the Codebook model <a href="pdfxml.html#26">[</a></text>
<text top="1018" left="654" width="9" height="16" font="5"><a href="pdfxml.html#26">6</a></text>
<text top="1018" left="663" width="155" height="16" font="0"><a href="pdfxml.html#26">] </a>and a simpliﬁcation</text>
<text top="1044" left="74" width="164" height="16" font="0">of MoG for FPGAs <a href="pdfxml.html#26">[</a></text>
<text top="1044" left="238" width="9" height="16" font="5"><a href="pdfxml.html#26">9</a></text>
<text top="1044" left="247" width="572" height="16" font="0"><a href="pdfxml.html#26">]. </a>These models have been selected since they represent different kinds of</text>
<text top="1069" left="74" width="744" height="16" font="0">algorithms and they are among the most frequently used. The implementations of MoG and the Bayesian</text>
<text top="1095" left="74" width="744" height="16" font="0">algorithm that have been used are versions from the OpenCV library, while the other approaches have</text>
<text top="1121" left="74" width="744" height="16" font="0">been developed by ourselves from the information given in their respective papers. In this section,</text>
<text top="1147" left="74" width="744" height="16" font="0">the methodology used to compare the different approaches is presented. Two different aspects of our</text>
<text top="1173" left="74" width="744" height="16" font="0">approach have been evaluated, i.e., the general performance as a background subtraction algorithm</text>
</page>
<page number="20" position="absolute" top="0" left="0" height="1262" width="892">
<text top="75" left="74" width="56" height="15" font="0">Sensors</text>
<text top="75" left="135" width="63" height="16" font="0">2012, 12</text>
<text top="75" left="792" width="27" height="16" font="0">604</text>
<text top="131" left="74" width="744" height="16" font="0">and its behavior in presence of shadows. The former has been performed by means of the dataset</text>
<text top="157" left="74" width="89" height="16" font="0">Wallﬂower <a href="pdfxml.html#27">[</a></text>
<text top="157" left="164" width="18" height="16" font="5"><a href="pdfxml.html#27">19</a></text>
<text top="157" left="182" width="637" height="16" font="0"><a href="pdfxml.html#27">], </a>that is widely used in the literature to analyze the quality of the segmentation produced</text>
<text top="183" left="74" width="602" height="16" font="0">by an algorithm, while the latter has been studied using the sequences presented in <a href="pdfxml.html#26">[</a></text>
<text top="183" left="677" width="18" height="16" font="5"><a href="pdfxml.html#26">15</a></text>
<text top="183" left="694" width="10" height="16" font="0"><a href="pdfxml.html#26">].</a></text>
<text top="226" left="74" width="301" height="16" font="0">4.3.1. Background Subtraction Evaluation</text>
<text top="270" left="96" width="723" height="16" font="0">Since foreground/background segmentation is a two-fold classiﬁcation problem, the results are based</text>
<text top="296" left="74" width="744" height="16" font="0">on measures related to True and False Positives and Negatives (TP, FP, TN and FN). In this work, relative</text>
<text top="322" left="74" width="744" height="16" font="0">measures have been used to compare algorithms in different test sequences maintaining similar ranges of</text>
<text top="347" left="74" width="744" height="16" font="0">values. These measures are deﬁned as following: Recall, is the true positive rate (TPR) R = T P/(T P +</text>
<text top="373" left="74" width="744" height="16" font="0">F N ); Precision is the ratio between the number of correctly detected pixels and the total number of</text>
<text top="399" left="74" width="486" height="16" font="0">pixels marked as foreground P = T P/(T P + F P ); ﬁnally, the F</text>
<text top="405" left="560" width="6" height="11" font="4">1</text>
<text top="399" left="573" width="245" height="16" font="0">combines Precision and Recall to</text>
<text top="425" left="74" width="338" height="16" font="0">evaluate an overall quality of the segmentation.</text>
<text top="471" left="395" width="11" height="16" font="0">F</text>
<text top="478" left="406" width="6" height="11" font="4">1</text>
<text top="471" left="418" width="27" height="16" font="0">= 2</text>
<text top="459" left="458" width="27" height="16" font="0">P R</text>
<text top="483" left="447" width="49" height="16" font="0">P + R</text>
<text top="471" left="789" width="30" height="16" font="0">(10)</text>
<text top="515" left="96" width="723" height="16" font="0">This measure offers a balance between the ability of an algorithm to detect relevant and non-relevant</text>
<text top="541" left="74" width="486" height="16" font="0">pixels. Therefore, it can be used to perform an objective evaluation <a href="pdfxml.html#25">[</a></text>
<text top="541" left="561" width="9" height="16" font="5"><a href="pdfxml.html#25">2</a></text>
<text top="541" left="570" width="63" height="16" font="0"><a href="pdfxml.html#25">]. </a>Figure</text>
<text top="541" left="636" width="18" height="16" font="5"><a href="pdfxml.html#20">10</a></text>
<text top="541" left="658" width="160" height="16" font="0">shows the results from</text>
<text top="567" left="74" width="744" height="16" font="0">the Wallﬂower benchmark for each one of the described algorithms. It can be seen that our approach</text>
<text top="592" left="74" width="744" height="16" font="0">offers acceptable results, especially in comparison with the other hardware-oriented implementation.</text>
<text top="618" left="74" width="581" height="16" font="0">The hardware version has little degradation caused by the ﬁxed-point limitations.</text>
<text top="644" left="96" width="416" height="16" font="0">The test “Moved Object” cannot be evaluated using the F</text>
<text top="650" left="511" width="6" height="11" font="4">1</text>
<text top="644" left="519" width="300" height="16" font="0">, since the ground truth does not have any</text>
<text top="670" left="74" width="744" height="16" font="0">foreground pixel and the precision cannot be computed. For that reason, the performance on this test is</text>
<text top="695" left="74" width="391" height="16" font="0">only studied by observing the resultant images (Figure</text>
<text top="695" left="470" width="18" height="16" font="5"><a href="pdfxml.html#21">11</a></text>
<text top="695" left="488" width="10" height="16" font="0"><a href="pdfxml.html#21">).</a></text>
<text top="739" left="117" width="376" height="16" font="0">Figure 10. Overall performance evaluated using F</text>
<text top="746" left="493" width="6" height="11" font="4">1</text>
<text top="739" left="500" width="257" height="16" font="0">. FGD is the Bayesian algorithm <a href="pdfxml.html#26">[</a></text>
<text top="739" left="757" width="9" height="16" font="5"><a href="pdfxml.html#26">5</a></text>
<text top="739" left="766" width="10" height="16" font="0"><a href="pdfxml.html#26">],</a></text>
<text top="765" left="117" width="236" height="16" font="0">MOG is Mixture of Gaussians <a href="pdfxml.html#26">[</a></text>
<text top="765" left="353" width="9" height="16" font="5"><a href="pdfxml.html#26">3</a></text>
<text top="765" left="362" width="289" height="16" font="0"><a href="pdfxml.html#26">], </a>CB is the CodeBook-based method <a href="pdfxml.html#26">[</a></text>
<text top="765" left="651" width="9" height="16" font="5"><a href="pdfxml.html#26">6</a></text>
<text top="765" left="660" width="116" height="16" font="0"><a href="pdfxml.html#26">], </a>HWMOC the</text>
<text top="791" left="117" width="299" height="16" font="0">FPGA implementation by Appiah et al. <a href="pdfxml.html#26">[</a></text>
<text top="791" left="416" width="9" height="16" font="5"><a href="pdfxml.html#26">9</a></text>
<text top="791" left="425" width="132" height="16" font="0"><a href="pdfxml.html#26">], </a>and HOR Soft <a href="pdfxml.html#25">[</a></text>
<text top="791" left="557" width="9" height="16" font="5"><a href="pdfxml.html#25">1</a></text>
<text top="791" left="566" width="210" height="16" font="0"><a href="pdfxml.html#25">] </a>and HOR Hard the ﬂoating</text>
<text top="816" left="117" width="659" height="16" font="0">point (software) and ﬁxed point (hardware) implementations of Horprasert. Higher accuracy</text>
<text top="842" left="117" width="183" height="16" font="0">is represented by larger F</text>
<text top="849" left="300" width="6" height="11" font="4">1</text>
<text top="842" left="312" width="50" height="16" font="0">values.</text>
</page>
<page number="21" position="absolute" top="0" left="0" height="1262" width="892">
<text top="75" left="74" width="56" height="15" font="0">Sensors</text>
<text top="75" left="135" width="63" height="16" font="0">2012, 12</text>
<text top="75" left="792" width="27" height="16" font="0">605</text>
<text top="131" left="117" width="83" height="16" font="0">Figure 11.</text>
<text top="131" left="223" width="553" height="16" font="0">Wallﬂower evaluation frames, ground truth, and resultant images from</text>
<text top="157" left="117" width="128" height="16" font="0">tested algorithms.</text>
<text top="738" left="96" width="723" height="16" font="0">Besides the general comparison, it is interesting to analyze the behavior of the algorithms in outdoor</text>
<text top="763" left="74" width="744" height="16" font="0">and indoor circumstances. For that reason, we have grouped the sequences in two groups according to</text>
<text top="789" left="74" width="744" height="16" font="0">their characteristics, and weighted the results in order to obtain an average value. In the outdoor group</text>
<text top="815" left="74" width="744" height="16" font="0">we have taken into account the sequences “Camouﬂage”, “Time of Day” and “Waving Trees”, whilst the</text>
<text top="841" left="74" width="744" height="16" font="0">indoor group is composed by the sequences “Bootstrap”, “Foreground Aperture” and “Light Switch”.</text>
<text top="867" left="74" width="744" height="16" font="0">As a main conclusion, we can see that, due to the static nature of the Horprasert model, the results are</text>
<text top="892" left="74" width="744" height="16" font="0">average for sequences where backgrounds are dynamic. On the other hand, for those sequences whose</text>
<text top="918" left="74" width="744" height="16" font="0">background is static, the accuracy of the model is very well ranked even compared with much more</text>
<text top="944" left="74" width="151" height="16" font="0">complex approaches.</text>
<text top="970" left="96" width="47" height="16" font="0">Figure</text>
<text top="970" left="149" width="18" height="16" font="5"><a href="pdfxml.html#22">12</a></text>
<text top="970" left="174" width="644" height="16" font="0">shows the quality of the segmentation in indoor and outdoor circumstances comparing</text>
<text top="996" left="74" width="744" height="16" font="0">the different approaches. It is important to highlight the results presented by the Codebook model.</text>
<text top="1021" left="74" width="744" height="16" font="0">This motivates a future work of implementation of this approach but it will require a larger amount of</text>
<text top="1047" left="74" width="356" height="16" font="0">resources and a much more complex architecture.</text>
<text top="1073" left="96" width="723" height="16" font="0">Finally, it is worth noticing that the hardware implementation has a very low degradation compared</text>
<text top="1099" left="74" width="273" height="16" font="0">with the original software approach.</text>
<text top="1099" left="364" width="94" height="16" font="0">From Figure</text>
<text top="1099" left="465" width="18" height="16" font="5"><a href="pdfxml.html#20">10</a></text>
<text top="1099" left="491" width="327" height="16" font="0">it can be seen that the differences between</text>
<text top="1124" left="74" width="744" height="16" font="0">both approaches only are relevant in “Time of Day” sequence. Nevertheless, despite that degradation,</text>
<text top="1150" left="74" width="744" height="16" font="0">the results obtained by the proposed architecture represent an improvement against previous hardware</text>
<text top="1176" left="74" width="130" height="16" font="0">implementations <a href="pdfxml.html#26">[</a></text>
<text top="1176" left="204" width="9" height="16" font="5"><a href="pdfxml.html#26">9</a></text>
<text top="1176" left="213" width="9" height="16" font="0"><a href="pdfxml.html#26">–</a></text>
<text top="1176" left="222" width="18" height="16" font="5"><a href="pdfxml.html#26">11</a></text>
<text top="1176" left="240" width="10" height="16" font="0"><a href="pdfxml.html#26">].</a></text>
</page>
<page number="22" position="absolute" top="0" left="0" height="1262" width="892">
<text top="75" left="74" width="56" height="15" font="0">Sensors</text>
<text top="75" left="135" width="63" height="16" font="0">2012, 12</text>
<text top="75" left="792" width="27" height="16" font="0">606</text>
<text top="131" left="117" width="659" height="16" font="0">Figure 12. Performance in outdoor and indoor circumstances. Higher values of F mean</text>
<text top="157" left="117" width="108" height="16" font="0">more accuracy.</text>
<text top="552" left="74" width="246" height="16" font="0">4.3.2. Shadow Detection Behavior</text>
<text top="596" left="96" width="723" height="16" font="0">One of the beneﬁts of the presented approach is that it is able to compute not only the background</text>
<text top="621" left="74" width="744" height="16" font="0">information of the scene but also information about the visible shadows. This could be used to improve</text>
<text top="647" left="74" width="744" height="16" font="0">the spatial location of foreground objects as well as to obtain better measurement of its size and</text>
<text top="673" left="74" width="53" height="16" font="0">shape <a href="pdfxml.html#27">[</a></text>
<text top="673" left="127" width="18" height="16" font="5"><a href="pdfxml.html#27">28</a></text>
<text top="673" left="145" width="673" height="16" font="0"><a href="pdfxml.html#27">]. </a>In order to evaluate not only the background subtraction algorithms but also the shadow</text>
<text top="699" left="74" width="744" height="16" font="0">detection capability, several metrics have been modiﬁed, deﬁning the shadow detection accuracy η and</text>
<text top="725" left="74" width="280" height="16" font="0">the shadow discrimination accuracy ξ <a href="pdfxml.html#26">[</a></text>
<text top="725" left="355" width="18" height="16" font="5"><a href="pdfxml.html#26">15</a></text>
<text top="725" left="373" width="88" height="16" font="0"><a href="pdfxml.html#26">] </a>as follows:</text>
<text top="772" left="383" width="28" height="16" font="0">η =</text>
<text top="760" left="442" width="24" height="16" font="0">T P</text>
<text top="767" left="466" width="8" height="11" font="4">S</text>
<text top="784" left="413" width="24" height="16" font="0">T P</text>
<text top="791" left="437" width="8" height="11" font="4">S</text>
<text top="784" left="450" width="46" height="16" font="0">+ F N</text>
<text top="791" left="496" width="8" height="11" font="4">S</text>
<text top="772" left="789" width="30" height="16" font="0">(11)</text>
<text top="824" left="384" width="27" height="16" font="0">ξ =</text>
<text top="808" left="456" width="9" height="16" font="0">¯</text>
<text top="812" left="443" width="24" height="16" font="0">T P</text>
<text top="819" left="467" width="8" height="11" font="4">F</text>
<text top="837" left="413" width="24" height="16" font="0">T P</text>
<text top="843" left="437" width="8" height="11" font="4">F</text>
<text top="837" left="452" width="46" height="16" font="0">+ F N</text>
<text top="843" left="497" width="8" height="11" font="4">F</text>
<text top="825" left="789" width="30" height="16" font="0">(12)</text>
<text top="874" left="74" width="471" height="16" font="0">where the subscript S stands for shadow and F for foreground.</text>
<text top="869" left="570" width="9" height="16" font="0">¯</text>
<text top="873" left="557" width="24" height="16" font="0">T P</text>
<text top="880" left="581" width="8" height="11" font="4">F</text>
<text top="874" left="598" width="220" height="16" font="0">is the number of ground-truth</text>
<text top="899" left="74" width="744" height="16" font="0">points of the foreground minus the number of points detected as shadows belonging to foreground</text>
<text top="925" left="74" width="744" height="16" font="0">objects. The ﬁrst measure, the shadow detection accuracy, shows the capability of the algorithm to</text>
<text top="951" left="74" width="744" height="16" font="0">detect shadow points, or the low probability to misclassify a shadow point. The second measure shows</text>
<text top="977" left="74" width="706" height="16" font="0">the discrimination capability, that is, the low probability to classify a non-shadow point as shadow.</text>
<text top="1003" left="96" width="39" height="16" font="0">Table</text>
<text top="1003" left="146" width="9" height="16" font="5"><a href="pdfxml.html#23">5</a></text>
<text top="1003" left="166" width="652" height="16" font="0">shows the results obtained by the proposed architecture and the original software</text>
<text top="1028" left="74" width="744" height="16" font="0">implementation in the “Intelligent Room” sequence as well as the results from other approaches found</text>
<text top="1054" left="74" width="94" height="16" font="0">analyzed in <a href="pdfxml.html#26">[</a></text>
<text top="1054" left="169" width="18" height="16" font="5"><a href="pdfxml.html#26">15</a></text>
<text top="1054" left="187" width="632" height="16" font="0"><a href="pdfxml.html#26">]. </a>Despite the degradation suffered by the hardware implementation (mainly due to the</text>
<text top="1080" left="74" width="744" height="16" font="0">utilization of ﬁxed-point arithmetics), it offers acceptable results, considering the greater complexity of</text>
<text top="1106" left="74" width="599" height="16" font="0">the other approaches that makes them unsuitable for FPGAs with limited resources.</text>
</page>
<page number="23" position="absolute" top="0" left="0" height="1262" width="892">
<text top="75" left="74" width="56" height="15" font="0">Sensors</text>
<text top="75" left="135" width="63" height="16" font="0">2012, 12</text>
<text top="75" left="792" width="27" height="16" font="0">607</text>
<text top="131" left="117" width="659" height="16" font="0">Table 5. Shadow detection and discrimination accuracy, tested on “Intelligent Rooom”</text>
<text top="157" left="117" width="659" height="16" font="0">sequence. SNP (Statistical Non Parametric, Horprasert, our approach), SP (Statistical Para-</text>
<text top="183" left="117" width="62" height="16" font="0">metric) <a href="pdfxml.html#27">[</a></text>
<text top="183" left="179" width="18" height="16" font="5"><a href="pdfxml.html#27">29</a></text>
<text top="183" left="197" width="76" height="16" font="0"><a href="pdfxml.html#27">], </a>DNM1 <a href="pdfxml.html#27">[</a></text>
<text top="183" left="273" width="18" height="16" font="5"><a href="pdfxml.html#27">30</a></text>
<text top="183" left="291" width="102" height="16" font="0"><a href="pdfxml.html#27">] </a>and DNM2 <a href="pdfxml.html#27">[</a></text>
<text top="183" left="393" width="18" height="16" font="5"><a href="pdfxml.html#27">31</a></text>
<text top="183" left="411" width="345" height="16" font="0"><a href="pdfxml.html#27">] </a>(Deterministic Non-Model-based approaches).</text>
<text top="246" left="335" width="76" height="16" font="0">Approach</text>
<text top="233" left="429" width="129" height="16" font="0">Intelligent Room</text>
<text top="267" left="429" width="46" height="16" font="0">η (%)</text>
<text top="267" left="503" width="44" height="16" font="0">ξ (%)</text>
<text top="302" left="339" width="67" height="16" font="0">SNP Soft</text>
<text top="302" left="432" width="40" height="16" font="0">74.54</text>
<text top="302" left="505" width="40" height="16" font="0">91.76</text>
<text top="328" left="336" width="73" height="16" font="0">SNP Hard</text>
<text top="328" left="432" width="40" height="16" font="0">71.14</text>
<text top="328" left="505" width="40" height="16" font="0">88.13</text>
<text top="354" left="363" width="20" height="16" font="0">SP</text>
<text top="354" left="432" width="40" height="16" font="0">76.27</text>
<text top="354" left="505" width="40" height="16" font="0">90.74</text>
<text top="379" left="348" width="51" height="16" font="0">DNM1</text>
<text top="379" left="432" width="40" height="16" font="0">78.61</text>
<text top="379" left="505" width="40" height="16" font="0">90.29</text>
<text top="405" left="348" width="51" height="16" font="0">DNM2</text>
<text top="405" left="432" width="40" height="16" font="0">62.00</text>
<text top="405" left="505" width="40" height="16" font="0">93.89</text>
<text top="464" left="96" width="698" height="16" font="0">Regarding the degradation between the software implementation and the proposed one, Figure</text>
<text top="464" left="801" width="18" height="16" font="5"><a href="pdfxml.html#23">13</a></text>
<text top="490" left="74" width="744" height="16" font="0">shows the results for the “Intelligent Room” sequence during a series of evaluation frames. In the worst</text>
<text top="516" left="74" width="744" height="16" font="0">of the scenarios, the loss of accuracy due to the restrictions of the hardware implementations is limited</text>
<text top="541" left="74" width="569" height="16" font="0">to 5%, offering fairly good results in both detection and discrimination metrics.</text>
<text top="567" left="96" width="372" height="16" font="0">This loss of accuracy can be easily seen in Figure</text>
<text top="567" left="474" width="18" height="16" font="5"><a href="pdfxml.html#24">14</a></text>
<text top="567" left="492" width="327" height="16" font="0"><a href="pdfxml.html#24">. </a>Images (a) and (b) show the segmentation</text>
<text top="593" left="74" width="744" height="16" font="0">obtained by the software and hardware implementation respectively. The degradation is noticeable in the</text>
<text top="619" left="74" width="744" height="16" font="0">higher dispersion of the shadow points in the hardware detection, whilst the shadow regions resulting</text>
<text top="645" left="74" width="744" height="16" font="0">from the software implementation are denser. The same effect is shown in images (c) and (d), as well as</text>
<text top="670" left="74" width="744" height="16" font="0">some noise detected as shadows instead of being classiﬁed as foreground. However, the results are fairly</text>
<text top="696" left="74" width="744" height="16" font="0">accurate and the noise can be removed during the connected component stage, which was not included</text>
<text top="722" left="74" width="433" height="16" font="0">here in order to facilitate comparison with other approaches.</text>
<text top="766" left="117" width="659" height="16" font="0">Figure 13. Shadow detection accuracy and discrimination accuracy of the original software</text>
<text top="792" left="117" width="560" height="16" font="0">model and the proposed approach, evaluated on “Intelligent Room” sequence.</text>
</page>
<page number="24" position="absolute" top="0" left="0" height="1262" width="892">
<text top="75" left="74" width="56" height="15" font="0">Sensors</text>
<text top="75" left="135" width="63" height="16" font="0">2012, 12</text>
<text top="75" left="792" width="27" height="16" font="0">608</text>
<text top="131" left="117" width="659" height="16" font="0">Figure 14. Frames of the “Intelligent Room” sequence, frame 100 for (a) software and</text>
<text top="157" left="117" width="578" height="16" font="0">(b) hardware implementations, and frame 282 for (c) software and (d) hardware.</text>
<text top="484" left="248" width="21" height="16" font="0">(a)</text>
<text top="484" left="623" width="22" height="16" font="0">(b)</text>
<text top="797" left="249" width="20" height="16" font="0">(c)</text>
<text top="797" left="623" width="22" height="16" font="0">(d)</text>
<text top="841" left="74" width="111" height="16" font="0">5. Conclusions</text>
<text top="885" left="96" width="723" height="16" font="0">In this work, we have designed and analyzed an architecture to perform background subtraction in</text>
<text top="911" left="74" width="744" height="16" font="0">video sequences capable to detect shadows presented on the scene. This task is considered to be the</text>
<text top="937" left="74" width="744" height="16" font="0">ﬁrst stage in computer video surveillance systems and one of the most demanding operations in terms</text>
<text top="963" left="74" width="571" height="16" font="0">of resources utilization. Our approach is based on the algorithm by Horprasert <a href="pdfxml.html#25">[</a></text>
<text top="963" left="645" width="9" height="16" font="5"><a href="pdfxml.html#25">1</a></text>
<text top="963" left="654" width="165" height="16" font="0"><a href="pdfxml.html#25">], </a>a static model whose</text>
<text top="988" left="74" width="744" height="16" font="0">simplicity allows for a low cost FPGAs implementation and which has been extended to perform also</text>
<text top="1014" left="74" width="129" height="16" font="0">shadow detection.</text>
<text top="1040" left="96" width="723" height="16" font="0">The design techniques presented in this paper are valid to many resource-constrained hardware</text>
<text top="1066" left="74" width="744" height="16" font="0">implementations. The co-design strategy shows how to move non-real-time constrained operations to</text>
<text top="1091" left="74" width="744" height="16" font="0">software running on the processor in order to decrease the hardware resources required. In addition,</text>
<text top="1117" left="74" width="744" height="16" font="0">the combination of high level languages, such as ImpulseC with RTL descriptions deﬁned using VHDL,</text>
<text top="1143" left="74" width="744" height="16" font="0">allows reducing the implementation strategy as well as reaching a high performance by optimizing the</text>
<text top="1169" left="74" width="263" height="16" font="0">code at critical stages and interfaces.</text>
</page>
<page number="25" position="absolute" top="0" left="0" height="1262" width="892">
<text top="75" left="74" width="56" height="15" font="0">Sensors</text>
<text top="75" left="135" width="63" height="16" font="0">2012, 12</text>
<text top="75" left="792" width="27" height="16" font="0">609</text>
<text top="131" left="96" width="723" height="16" font="0">An FPGA implementation of this algorithm which offers low degradation in comparison with the</text>
<text top="157" left="74" width="744" height="16" font="0">original one has been developed. A study has been performed to analyze the bit-width associated with</text>
<text top="183" left="74" width="744" height="16" font="0">each of the ﬁxed-point variables in order to cope with the restrictions of the hardware environment. For</text>
<text top="208" left="74" width="744" height="16" font="0">the ﬁrst time, an FPGA implementation of a background model includes shadow detection logic. This</text>
<text top="234" left="74" width="744" height="16" font="0">allows us to increase the model robustness as well as to improve object localization on the scene. This is</text>
<text top="260" left="74" width="671" height="16" font="0">a valuable contribution that signiﬁcantly enhances the applicability of the proposed approach.</text>
<text top="286" left="96" width="485" height="16" font="0">The approach has been evaluated with the benchmark Wallﬂower <a href="pdfxml.html#27">[</a></text>
<text top="286" left="580" width="18" height="16" font="5"><a href="pdfxml.html#27">19</a></text>
<text top="286" left="598" width="220" height="16" font="0"><a href="pdfxml.html#27">] </a>in order to test the quality of</text>
<text top="311" left="74" width="744" height="16" font="0">the segmentation and its degradation against the original software solution. The proposed architecture</text>
<text top="337" left="74" width="744" height="16" font="0">offers good results (in terms of accuracy) in comparison with other hardware implementations found</text>
<text top="363" left="74" width="122" height="16" font="0">in the literature <a href="pdfxml.html#26">[</a></text>
<text top="363" left="196" width="9" height="16" font="5"><a href="pdfxml.html#26">9</a></text>
<text top="363" left="205" width="613" height="16" font="0"><a href="pdfxml.html#26">]. </a>Furthermore, shadow detection behavior has been analyzed by means of manually</text>
<text top="389" left="74" width="208" height="16" font="0">segmented video sequences <a href="pdfxml.html#26">[</a></text>
<text top="389" left="283" width="18" height="16" font="5"><a href="pdfxml.html#26">15</a></text>
<text top="389" left="301" width="10" height="16" font="0"><a href="pdfxml.html#26">].</a></text>
<text top="415" left="96" width="723" height="16" font="0">The implementation is able to segment objects in complex sequences with resolution 1,024 × 1,024 at</text>
<text top="440" left="74" width="744" height="16" font="0">32.8 fps (therefore 32.8 MPPS, Megapixels per Second) or from up to four cameras with less resolution.</text>
<text top="466" left="74" width="520" height="16" font="0">This represents a speed up over 35× with respect to the other approach <a href="pdfxml.html#26">[</a></text>
<text top="466" left="594" width="18" height="16" font="5"><a href="pdfxml.html#26">11</a></text>
<text top="466" left="612" width="159" height="16" font="0"><a href="pdfxml.html#26">] </a>based on Horprasert.</text>
<text top="492" left="96" width="723" height="16" font="0">In terms of accuracy/robustness, with respect to other models, the Horprasert-based approach achieves</text>
<text top="518" left="74" width="462" height="16" font="0">better results in the Bootstrap and Camouﬂage scenarios (Figure</text>
<text top="518" left="541" width="18" height="16" font="5"><a href="pdfxml.html#20">10</a></text>
<text top="518" left="559" width="259" height="16" font="0"><a href="pdfxml.html#20">). </a>Finally, in the approach described</text>
<text top="544" left="74" width="744" height="16" font="0">here, the basic Horprasert model has been extended to efﬁciently deal with shadows which represents an</text>
<text top="569" left="74" width="454" height="16" font="0">important improvement in daily scenes as illustrated in Figure</text>
<text top="569" left="534" width="18" height="16" font="5"><a href="pdfxml.html#24">14</a></text>
<text top="569" left="552" width="267" height="16" font="0"><a href="pdfxml.html#24">. </a>Concerning the cost of the system,</text>
<text top="595" left="74" width="744" height="16" font="0">the architecture has been designed for low cost FPGAs Spartan-3 by Xilinx, and it offers low power</text>
<text top="621" left="74" width="744" height="16" font="0">consumption (5.76 W). Therefore we achieve 5.7 MPPS per Watt. Our approach can be included in</text>
<text top="647" left="74" width="744" height="16" font="0">embedded systems, where parameters such as size and power are key elements that are not achievable</text>
<text top="672" left="74" width="544" height="16" font="0">by other approaches, such as commodity processors or GPU-based systems.</text>
<text top="698" left="96" width="723" height="16" font="0">For future work, we intend to evaluate new implementations based on other background models</text>
<text top="724" left="74" width="744" height="16" font="0">(dynamic and multimodal) with updating, which will allow the system to adapt to luminosity changes or</text>
<text top="750" left="74" width="744" height="16" font="0">sudden scene conﬁguration changes. We also intend to perform ofﬂine model updates with the proposed</text>
<text top="776" left="74" width="744" height="16" font="0">architecture by means of the Microblaze processor. In addition, we will consider the use of mixed</text>
<text top="801" left="74" width="744" height="16" font="0">architectures (FPGA + DSP) for the development of more complex algorithms for subsequent stages of</text>
<text top="827" left="74" width="113" height="16" font="0">video analytics.</text>
<text top="871" left="74" width="148" height="16" font="0">Acknowledgements</text>
<text top="915" left="96" width="723" height="16" font="0">This research was supported by the projects of excellence from the Andalusian Regional Government,</text>
<text top="940" left="74" width="744" height="16" font="0">Junta de Andaluc´ıa (TIC-3873, TIC-5060), the national project ARC-VISION (TEC2010-15396) and the</text>
<text top="966" left="74" width="242" height="16" font="0">EU grant TOMSY (FP7-270436).</text>
<text top="1010" left="74" width="83" height="16" font="0">References</text>
<text top="1054" left="85" width="733" height="16" font="0">1. Horprasert, T.; Harwood, D.; Davis, L.S. A Statistical Approach for Real-Time Robust Background</text>
<text top="1079" left="112" width="267" height="16" font="0">Subtraction and Shadow Detection.</text>
<text top="1079" left="410" width="408" height="16" font="0">In Proceedings of the IEEE Frame-Rate Applications</text>
<text top="1105" left="112" width="71" height="15" font="0">Workshop</text>
<text top="1105" left="183" width="307" height="16" font="0">, Kerkyra, Greece, 21–21 Septmeber 1999.</text>
<text top="1131" left="85" width="733" height="16" font="0">2. Karaman, M.; Goldmann, L.; Yu, D.; Sikora, T. Comparison of static background segmentation</text>
<text top="1157" left="112" width="420" height="16" font="0">methods. Proc. SPIE 2005, 5960, doi:10.1117/12.633437.</text>
</page>
<page number="26" position="absolute" top="0" left="0" height="1262" width="892">
<text top="75" left="74" width="56" height="15" font="0">Sensors</text>
<text top="75" left="135" width="63" height="16" font="0">2012, 12</text>
<text top="75" left="792" width="27" height="16" font="0">610</text>
<text top="131" left="85" width="733" height="16" font="0">3. Stauffer, C.; Grimson, W.E.L. Adaptive Background Mixture Models for Real-Time Tracking.</text>
<text top="157" left="112" width="706" height="16" font="0">In Proceedings of the IEEE Computer Society Conference on Computer Vision and Pattern</text>
<text top="183" left="112" width="86" height="15" font="0">Recognition</text>
<text top="183" left="199" width="487" height="16" font="0">, Fort Collins, CO, USA, 23–25 June 1999; Volume 2, pp. 637–663.</text>
<text top="208" left="85" width="733" height="16" font="0">4. Varcheie, P.D.Z.; Sills-Lavoie, M.; Bilodeau, G.A. A multiscale region-based motion detection and</text>
<text top="234" left="112" width="472" height="16" font="0">background subtraction algorithm. Sensors 2010, 10, 1041–1061.</text>
<text top="260" left="85" width="733" height="16" font="0">5. Li, L.; Huang, W.; Gu, I.Y.H.; Tian, Q. Foreground Object Detection from Videos Containing</text>
<text top="286" left="112" width="706" height="16" font="0">Complex Background. In Proceedings of the 11th ACM International Conference on Multimedia,</text>
<text top="311" left="112" width="597" height="16" font="0">Berkeley, CA, USA, November 2003; ACM: New York, NY, USA, 2003; pp. 2–10.</text>
<text top="337" left="85" width="465" height="16" font="0">6. Kim, K.; Chalidabhongse, T.H.; Harwood, D.; Davis, L.</text>
<text top="337" left="570" width="249" height="16" font="0">Real-time foreground/background</text>
<text top="363" left="112" width="556" height="16" font="0">segmentation using codebook model. Real-Time Imaging 2005, 11, 172–185.</text>
<text top="389" left="85" width="200" height="16" font="0">7. Jim´enez-Hern´andez, H.</text>
<text top="389" left="306" width="512" height="16" font="0">Background subtraction approach based on independent component</text>
<text top="415" left="112" width="287" height="16" font="0">analysis. Sensors 2010, 10, 6092–6114.</text>
<text top="440" left="85" width="733" height="16" font="0">8. Bravo, I.; Mazo, M.; L´azaro, J.L.; Gardel, A.; Jim´enez, P.; Pizarro, D. An intelligent architecture</text>
<text top="466" left="112" width="706" height="16" font="0">based on ﬁeld programmable gate arrays designed to detect moving objects by using principal</text>
<text top="492" left="112" width="371" height="16" font="0">component analysis. Sensors 2010, 10, 9232–9251.</text>
<text top="518" left="85" width="733" height="16" font="0">9. Appiah, K.; Hunter, A. A Single-Chip FPGA Implementation of Real-Time Adaptive Background</text>
<text top="544" left="112" width="51" height="16" font="0">Model.</text>
<text top="544" left="181" width="638" height="16" font="0">In Proceedings of IEEE International Conference on Field-Programmable Technology,</text>
<text top="569" left="112" width="340" height="16" font="0">Singapore, 11–14 December 2005; pp. 95–102.</text>
<text top="595" left="76" width="274" height="16" font="0">10. Jiang, H.; Ardo, H.; Owall, V.</text>
<text top="595" left="369" width="449" height="16" font="0">Hardware Accelerator Design for Video Segmentation with</text>
<text top="621" left="112" width="272" height="16" font="0">Multi-Modal Background Modelling.</text>
<text top="621" left="402" width="417" height="16" font="0">In Proceedings of the IEEE International Symposium on</text>
<text top="647" left="112" width="241" height="15" font="0">Circuits and Systems (ISCAS ’05)</text>
<text top="647" left="354" width="428" height="16" font="0">, Kobe, Japan, 23–26 May 2005; Volume 2, pp. 1142–1145.</text>
<text top="672" left="76" width="742" height="16" font="0">11. Oliveira, J.; Printes, A.; Freire, R.C.S.; Melcher, E.; Silva, I.S.S. FPGA Architecture for Static</text>
<text top="698" left="112" width="706" height="16" font="0">Background Subtraction in Real Time. In Proceedings of the 19th Annual Symposium on Integrated</text>
<text top="724" left="112" width="299" height="15" font="0">Circuits And Systems Design (SBCCI ’06)</text>
<text top="724" left="412" width="407" height="16" font="0">, Ouro Preto, Brazil, August 2006; ACM: New York, NY,</text>
<text top="750" left="112" width="166" height="16" font="0">USA, 2006; pp. 26–31.</text>
<text top="776" left="76" width="332" height="16" font="0">12. Ierodiaconou, S.; Dahnoun, N.; Xu, L.</text>
<text top="776" left="425" width="394" height="16" font="0">Implementation and Optimisation of a Video Object</text>
<text top="801" left="112" width="706" height="16" font="0">Segmentation Algorithm on an Embedded DSP Platform. In Proceedings of the The Institution of</text>
<text top="827" left="112" width="465" height="15" font="0">Engineering and Technology Conference on Crime and Security</text>
<text top="827" left="578" width="241" height="16" font="0">, London, UK, 13–14 June 2006;</text>
<text top="853" left="112" width="94" height="16" font="0">pp. 432–437.</text>
<text top="879" left="76" width="509" height="16" font="0">13. Carr, P. GPU Accelerated Multimodal Background Subtraction.</text>
<text top="879" left="603" width="216" height="16" font="0">In Proceedings of the Digital</text>
<text top="905" left="112" width="461" height="15" font="0">Image Computing: Techniques and Applications (DICTA ’08</text>
<text top="905" left="574" width="245" height="16" font="0">, Canberra, ACT, Australia, 1–3</text>
<text top="930" left="112" width="218" height="16" font="0">December 2008; pp. 279–286.</text>
<text top="956" left="76" width="742" height="16" font="0">14. Pham, V.; Vo, P.; Hung, V.T.; Bac, L.H. GPU Implementation of Extended Gaussian Mixture</text>
<text top="982" left="112" width="706" height="16" font="0">Model for Background Subtraction. In Proceedings of the IEEE RIVF International Conference</text>
<text top="1008" left="112" width="706" height="15" font="0">on Computing and Communication Technologies, Research, Innovation, and Vision for the Future</text>
<text top="1034" left="112" width="51" height="15" font="0">(RIVF)</text>
<text top="1033" left="163" width="346" height="16" font="0">, Hanoi, Vietnam, 1–4 November 2010; pp. 1–4.</text>
<text top="1059" left="76" width="742" height="16" font="0">15. Prati, A.; Mikic, I.; Trivedi, M.M.; Cucchiara, R. Detecting moving shadows: Algorithms and</text>
<text top="1085" left="112" width="518" height="16" font="0">evaluation. IEEE Trans. Pattern Anal. Mach. Intell. 2003, 25, 918–923.</text>
<text top="1111" left="76" width="677" height="16" font="0">16. Xilinx. 2011. Available online: http://www.xilinx.com (accessed on 29 December 2011).</text>
<text top="1137" left="76" width="742" height="16" font="0">17. Impulse accelerated technologies. 2011. Available online: http://www.impulseaccelerated.com/</text>
<text top="1162" left="112" width="243" height="16" font="0">(accessed on 29 December 2011).</text>
</page>
<page number="27" position="absolute" top="0" left="0" height="1262" width="892">
<text top="75" left="74" width="56" height="15" font="0">Sensors</text>
<text top="75" left="135" width="63" height="16" font="0">2012, 12</text>
<text top="75" left="792" width="27" height="16" font="0">611</text>
<text top="131" left="76" width="742" height="16" font="0">18. Seven Solutions S.L. 2011. Available online: http://www.sevensols.com (accessed on 29 December</text>
<text top="157" left="112" width="46" height="16" font="0">2011).</text>
<text top="183" left="76" width="424" height="16" font="0">19. Toyama, K.; Krumm, J.; Brumitt, B.; Meyers, B.</text>
<text top="183" left="522" width="297" height="16" font="0">Wallﬂower: Principles and Practice of</text>
<text top="208" left="112" width="706" height="16" font="0">Background Maintenance. In Proceedings of the 7th IEEE Internation Conference on Compurter</text>
<text top="234" left="112" width="45" height="15" font="0">Vision</text>
<text top="234" left="157" width="479" height="16" font="0">, Kerkyra , Greece, 20–27 September 1999; Volume 1, p. 255–261.</text>
<text top="260" left="76" width="742" height="16" font="0">20. Hedberg, H.; Kristensen, F.; Nilsson, P.; Owall, V. A Low Complexity Architecture for Binary</text>
<text top="286" left="112" width="529" height="16" font="0">Image Erosion and Dilation Using Structuring Element Decomposition.</text>
<text top="286" left="659" width="159" height="16" font="0">In Proceedings of the</text>
<text top="312" left="112" width="508" height="15" font="0">IEEE International Symposium on Circuits and Systems (ISCAS ’05)</text>
<text top="311" left="621" width="198" height="16" font="0">, Kobe, Japan, 23–26 May</text>
<text top="337" left="112" width="235" height="16" font="0">2005; Volume 4, pp. 3431–3434.</text>
<text top="363" left="76" width="742" height="16" font="0">21. Appiah, K.; Hunter, A.; Dickinson, P.; Owens, J. A Run-Length Based Connected Component</text>
<text top="389" left="112" width="706" height="16" font="0">Algorithm for FPGA Implementation. In Proceedings of the International Conference on ICECE</text>
<text top="415" left="112" width="82" height="15" font="0">Technology</text>
<text top="415" left="194" width="381" height="16" font="0">, Taipei, Taiwan, 8–10 December 2008; pp. 177–184.</text>
<text top="440" left="76" width="742" height="16" font="0">22. MPMC. Xilinx. 2011. Available online: http://www.xilinx.com/support/documentation/ip docu-</text>
<text top="466" left="112" width="397" height="16" font="0">mentation/mpmc.pdf (accessed on 29 December 2011).</text>
<text top="492" left="76" width="291" height="16" font="0">23. Avnet (FPGA Distributor). 2011.</text>
<text top="492" left="393" width="425" height="16" font="0">Available online: http://www.avnet.com (accessed on 29</text>
<text top="518" left="112" width="124" height="16" font="0">December 2011).</text>
<text top="544" left="76" width="115" height="16" font="0">24. Garcia, I.</text>
<text top="544" left="234" width="383" height="16" font="0">TMS320DM64x Power Consumption Summary.</text>
<text top="544" left="685" width="68" height="16" font="0">Available</text>
<text top="544" left="769" width="50" height="16" font="0">online:</text>
<text top="569" left="112" width="503" height="16" font="0">http://www.ti.com/litv/pdf/spra962f (accessed on 29 December 2011).</text>
<text top="595" left="76" width="742" height="16" font="0">25. Texas Instruments. 2005. Available online: http://www-s.ti.com/sc/psheets/spra962f/spra962f.zip</text>
<text top="621" left="112" width="243" height="16" font="0">(accessed on 29 December 2011).</text>
<text top="647" left="76" width="742" height="16" font="0">26. Liu, X.-L.; Wang, B.; Zheng, Z.-H. Design of Airport Video Aided Surveillance System Based on</text>
<text top="672" left="112" width="706" height="16" font="0">DSP+FPGA. In Proceedings of the 30th Chinese Control Conference (CCC), Yantai, China, 22–24</text>
<text top="698" left="112" width="192" height="16" font="0">July 2011; pp. 3214–3217.</text>
<text top="724" left="76" width="505" height="16" font="0">27. Anguita, M.; Diaz, J.; Ros, E.; Fernandez-Baldomero, F.</text>
<text top="724" left="611" width="207" height="16" font="0">Optimization strategies for</text>
<text top="750" left="112" width="706" height="16" font="0">high-performance computing of optical-ﬂow in general-purpose processors. IEEE Trans. Circuits</text>
<text top="776" left="112" width="144" height="15" font="0">Syst. Video Technol.</text>
<text top="775" left="262" width="157" height="16" font="0">2009, 19, 1475–1488.</text>
<text top="801" left="76" width="742" height="16" font="0">28. Hu, J.S.; Su, T.M. Robust background subtraction with shadow and highlight removal for indoor</text>
<text top="827" left="112" width="508" height="16" font="0">surveillance. EURASIP J. Appl. Signal Process. 2007, 2007, 108–108.</text>
<text top="853" left="76" width="437" height="16" font="0">29. Mikic, I.; Cosman, P.C.; Kogut, G.T.; Trivedi, M.M.</text>
<text top="853" left="530" width="288" height="16" font="0">Moving Shadow and Object Detection</text>
<text top="879" left="112" width="706" height="16" font="0">in Trafﬁc Scenes. In Proceedings of the 15th International Conference on Pattern Recognition,</text>
<text top="905" left="112" width="466" height="16" font="0">Barcelona , Spain, 3–7 September 2000; Volume 1, pp. 321–324.</text>
<text top="930" left="76" width="417" height="16" font="0">30. Cucchiara, R.; Grana, C.; Piccardi, M.; Prati, A.</text>
<text top="930" left="513" width="305" height="16" font="0">Detecting Objects, Shadows and Ghosts</text>
<text top="956" left="112" width="480" height="16" font="0">in Video Streams by Exploiting Color and Motion Information.</text>
<text top="956" left="616" width="202" height="16" font="0">In Proceedings of the 11th</text>
<text top="982" left="112" width="449" height="15" font="0">International Conference on Image Analysis and Processing</text>
<text top="982" left="561" width="257" height="16" font="0">, Palermo, Italy, 26–28 September</text>
<text top="1008" left="112" width="139" height="16" font="0">2001; pp. 360–365.</text>
<text top="1033" left="76" width="742" height="16" font="0">31. Stander, J.; Mech, R.; Ostermann, J. Detection of moving cast shadows for object segmentation.</text>
<text top="1059" left="112" width="167" height="15" font="0">IEEE Trans. Multimed.</text>
<text top="1059" left="285" width="112" height="16" font="0">1999, 1, 65–76.</text>
<text top="1102" left="79" width="739" height="17" font="0">c 2012 by the authors; licensee MDPI, Basel, Switzerland. This article is an open access article</text>
<text top="1129" left="74" width="744" height="16" font="0">distributed under the terms and conditions of the Creative Commons Attribution license</text>
<text top="1155" left="74" width="330" height="16" font="0">(http://creativecommons.org/licenses/by/3.0/.)</text>
</page>
</pdf2xml>
