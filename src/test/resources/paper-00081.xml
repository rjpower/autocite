<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE pdf2xml SYSTEM "pdf2xml.dtd">

<pdf2xml>
<page number="1" position="absolute" top="0" left="0" height="1188" width="918">
	<fontspec id="0" size="15" family="Times" color="#000000"/>
	<fontspec id="1" size="9" family="Times" color="#000000"/>
	<fontspec id="2" size="12" family="Times" color="#000000"/>
	<fontspec id="3" size="16" family="Helvetica" color="#585a60"/>
	<fontspec id="4" size="11" family="Helvetica" color="#585a60"/>
<text top="144" left="105" width="710" height="19" font="0">FPGA DYNAMIC RECONFIGURATION USING THE RVC TECHNOLOGY: INVERSE</text>
<text top="164" left="330" width="261" height="19" font="0">QUANTIZATION CASE STUDY</text>
<text top="208" left="91" width="106" height="19" font="0">Manel Hentati</text>
<text top="206" left="196" width="18" height="13" font="1">1,2</text>
<text top="208" left="221" width="122" height="19" font="0">, Yassine Aoudni</text>
<text top="206" left="350" width="6" height="13" font="1">2</text>
<text top="208" left="363" width="165" height="19" font="0">, Jean-Franc¸ois Nezan</text>
<text top="206" left="528" width="6" height="13" font="1">1</text>
<text top="208" left="535" width="123" height="19" font="0">, Mohamed Abid</text>
<text top="206" left="664" width="6" height="13" font="1">2</text>
<text top="208" left="677" width="155" height="19" font="0">and Olivier Deforges</text>
<text top="206" left="832" width="6" height="13" font="1">1</text>
<text top="248" left="160" width="6" height="13" font="1">1</text>
<text top="250" left="173" width="597" height="19" font="0">INSA/IETR, 20, av des Buttes de coesmes CS 14315 F-35043 RENNES, France</text>
<text top="269" left="251" width="6" height="13" font="1">2</text>
<text top="271" left="264" width="415" height="19" font="0">ENIS/CES, Route Soukra B.P. 1173, 3038 Sfax, Tunisie</text>
<text top="329" left="224" width="81" height="16" font="2">ABSTRACT</text>
<text top="348" left="82" width="366" height="16" font="2">With the rapid evolution of technology, the latest FPGA</text>
<text top="366" left="82" width="366" height="16" font="2">architectures such as Virtex series of Xilinx introduced a</text>
<text top="384" left="82" width="366" height="16" font="2">new feature called Dynamic Partial Reconﬁguration (DPR).</text>
<text top="402" left="82" width="366" height="16" font="2">This technique allows designer to conﬁgure a portion of</text>
<text top="420" left="82" width="366" height="16" font="2">the FPGA while other parts continue to run on the same</text>
<text top="438" left="82" width="366" height="16" font="2">FPGA. The design of an embedded system based on the DPR</text>
<text top="456" left="82" width="366" height="16" font="2">functionality is still complex and tedious. The MPEG con-</text>
<text top="474" left="82" width="366" height="16" font="2">sortium proposes the Reconﬁgurable Video Coding (RVC)</text>
<text top="492" left="82" width="366" height="16" font="2">technology. RVC provides a high level description of video</text>
<text top="509" left="82" width="366" height="16" font="2">decoders described as a set of interconnected Functional</text>
<text top="527" left="82" width="366" height="16" font="2">Units . This paper studies the use of the RVC technology</text>
<text top="545" left="82" width="366" height="16" font="2">for the speciﬁcation of an application and the design of a</text>
<text top="563" left="82" width="366" height="16" font="2">system based on the DPR functionality. In this paper, we</text>
<text top="581" left="82" width="366" height="16" font="2">study the Inverse Quantization (IQ) algorithm of an MPEG-</text>
<text top="599" left="82" width="366" height="16" font="2">4 decoder and how to switch between the MPEG-2 and the</text>
<text top="617" left="82" width="366" height="16" font="2">H263 IQ algorithms using RVC and DPR. This simple and</text>
<text top="635" left="82" width="366" height="16" font="2">concrete case study highlights the DPR restrictions to take</text>
<text top="653" left="82" width="366" height="16" font="2">into account in MPEG RVC description in order to use the</text>
<text top="671" left="82" width="33" height="16" font="2">DPR.</text>
<text top="696" left="97" width="351" height="16" font="2">Index Terms— MPEG-RVC, Dynamic Partial Reconﬁg-</text>
<text top="714" left="82" width="366" height="16" font="2">uration, Inverse Quantization, RVC-CAL language, FPGA,</text>
<text top="732" left="82" width="97" height="16" font="2">RVC framwork.</text>
<text top="760" left="196" width="138" height="16" font="2">I. INTRODUCTION</text>
<text top="782" left="97" width="351" height="16" font="2">Multimedia processing becomes more and more important</text>
<text top="800" left="82" width="366" height="16" font="2">with wide variety of applications. So the video standards</text>
<text top="818" left="82" width="366" height="16" font="2">Such as ITU-T H.261, H.263, ISO/IEC MPEG-1, MPEG-</text>
<text top="836" left="82" width="366" height="16" font="2">2 and MPEG-4 can’t satisfy the need of the embedded</text>
<text top="854" left="82" width="366" height="16" font="2">systems’designers. Indeed, these standards suffer from lack</text>
<text top="872" left="82" width="366" height="16" font="2">of re-usability and generality of the code provided by the</text>
<text top="890" left="82" width="366" height="16" font="2">standard (usually a C/C++ monolithic speciﬁcation). Moving</text>
<text top="908" left="82" width="366" height="16" font="2">Picture Expert Group (MPEG) proposes a new standard</text>
<text top="926" left="82" width="366" height="16" font="2">which is RVC [1]. This standard aims at providing a uniﬁed</text>
<text top="943" left="82" width="366" height="16" font="2">high-level speciﬁcation of current and future MPEG video</text>
<text top="961" left="82" width="366" height="16" font="2">coding technologies by using dataﬂow models. This standard</text>
<text top="979" left="82" width="366" height="16" font="2">offers the means to overcome the lack of interpretability</text>
<text top="997" left="82" width="366" height="16" font="2">between the many video codecs deployed in the market.</text>
<text top="1015" left="82" width="366" height="16" font="2">RVC is based on a dataﬂow-oriented language called RVC-</text>
<text top="1033" left="82" width="366" height="16" font="2">CAL [12] which is a subset of the original CAL ”Caltrop</text>
<text top="1051" left="82" width="366" height="16" font="2">Actor Language”. This language is a textual and domain</text>
<text top="1069" left="82" width="366" height="16" font="2">speciﬁc language for writing dataﬂow models. RVC-CAL</text>
<text top="329" left="473" width="366" height="16" font="2">is supported by several tools including OpenDF [20] for</text>
<text top="347" left="473" width="366" height="16" font="2">the simulation, CAL2HDL [17][18] and ORCC [19] for the</text>
<text top="365" left="473" width="295" height="16" font="2">automatic code generation (C, HDL, LLVM ...).</text>
<text top="383" left="488" width="351" height="16" font="2">In order to implement an application from a dataﬂow</text>
<text top="401" left="473" width="366" height="16" font="2">description, we use FPGA technology. This later offers a</text>
<text top="419" left="473" width="366" height="16" font="2">great balance between performance, parallelism, and cost.</text>
<text top="437" left="473" width="366" height="16" font="2">Besides, the last generation of FPGA from Xilinx provides</text>
<text top="455" left="473" width="366" height="16" font="2">DPR. This technique has prominent advantages such as the</text>
<text top="473" left="473" width="366" height="16" font="2">ability to change hardware,less reconﬁguration time and</text>
<text top="490" left="473" width="366" height="16" font="2">hardware sharing. DPR of FPGA seem to be a promising</text>
<text top="508" left="473" width="366" height="16" font="2">approach in the future, that is why we study this technology.</text>
<text top="527" left="488" width="351" height="16" font="2">In this paper, we investigate the use of DPR in the RVC</text>
<text top="545" left="473" width="366" height="16" font="2">context. As far as we know, there are not many papers</text>
<text top="563" left="473" width="366" height="16" font="2">published concerning the use of this technique in the RVC</text>
<text top="581" left="473" width="69" height="16" font="2">technology.</text>
<text top="599" left="488" width="351" height="16" font="2">In our work, DPR is applied on the IQ of a MPEG-4</text>
<text top="617" left="473" width="366" height="16" font="2">decoder. In fact, this decoder provided by the RVC group</text>
<text top="635" left="473" width="366" height="16" font="2">only supports H263 IQ. We ﬁrst add the MPEG-2 IQ</text>
<text top="653" left="473" width="366" height="16" font="2">algorithm in RVC-CAL and we use the CAL2HDL code</text>
<text top="671" left="473" width="366" height="16" font="2">generator to transform IQ algorithm from RVC-CAL to</text>
<text top="688" left="473" width="366" height="16" font="2">hardware description. After that we implement these two</text>
<text top="706" left="473" width="366" height="16" font="2">modules in reconﬁgurable platform from Xilinx using DRP.</text>
<text top="725" left="488" width="351" height="16" font="2">In the remainder of this paper, Section 2 presents the</text>
<text top="743" left="473" width="366" height="16" font="2">context, Section 3 describes these two inverse quantization</text>
<text top="761" left="473" width="366" height="16" font="2">modules, Section 4 exposes the implementation of our appli-</text>
<text top="779" left="473" width="366" height="16" font="2">cation in FPGA using DPR in the RVC framework and the</text>
<text top="796" left="473" width="366" height="16" font="2">experimental results, the Section 5 presents the discussion</text>
<text top="814" left="473" width="270" height="16" font="2">of our work. Section 6 concludes the paper.</text>
<text top="846" left="607" width="98" height="16" font="2">II. CONTEXT</text>
<text top="870" left="488" width="351" height="16" font="2">This section presents a study on the MPEG-RVC and DPR</text>
<text top="888" left="473" width="62" height="16" font="2">technique.</text>
<text top="920" left="473" width="122" height="16" font="2">II-A. MPEG RVC</text>
<text top="943" left="488" width="351" height="16" font="2">MPEG RVC aims to provide a framework to deﬁne a</text>
<text top="961" left="473" width="366" height="16" font="2">multitude different codecs by combining together blocks,</text>
<text top="979" left="473" width="366" height="16" font="2">named functional unit (FU) from a standard video tool</text>
<text top="997" left="473" width="366" height="16" font="2">library (VTL) [13]. This standard has been standardized by</text>
<text top="1015" left="473" width="366" height="16" font="2">MPEG as the part of MPEG-B and MPEG-C standards.</text>
<text top="1033" left="473" width="366" height="16" font="2">But it is still evolving. The MPEG-C standard[10] presents</text>
<text top="1051" left="473" width="366" height="16" font="2">the library of video coding tools employed in existing</text>
<text top="1069" left="473" width="366" height="16" font="2">MPEG standards. And the MPEG-B standard [14] presents</text>
<text top="735" left="29" width="0" height="17" font="3"><a href="http://hal.archives-ouvertes.fr/hal-00661337">hal-00661337, version 1 - 19 Jan 2012</a></text>
<text top="19" left="114" width="759" height="12" font="4">Author manuscript, published in &#34;Conference on Design and Architectures for Signal and Image Processing (DASIP), Tampere :</text>
<text top="32" left="782" width="91" height="12" font="4">Finland (2011)&#34;</text>
</page>
<page number="2" position="absolute" top="0" left="0" height="1188" width="918">
	<fontspec id="5" size="13" family="Times" color="#000000"/>
	<fontspec id="6" size="8" family="Times" color="#000000"/>
	<fontspec id="7" size="18" family="Times" color="#000000"/>
<text top="113" left="82" width="366" height="16" font="2">the overall framework and the standard languages used to</text>
<text top="131" left="82" width="322" height="16" font="2">describe the different components of the framework.</text>
<text top="149" left="97" width="351" height="16" font="2">In the RVC framework, a decoder is formed by a set of</text>
<text top="167" left="82" width="366" height="16" font="2">FUs and a decoder description. The Figure 1 illustrates the</text>
<text top="185" left="82" width="169" height="16" font="2">structure of a RVC decoder</text>
<text top="346" left="186" width="141" height="16" font="0">MPEG RVC Decoder</text>
<text top="242" left="257" width="71" height="14" font="5">Video Tool</text>
<text top="259" left="267" width="54" height="14" font="5">Libraries</text>
<text top="246" left="158" width="77" height="14" font="5">MPEG VTL</text>
<text top="367" left="109" width="44" height="14" font="5">Coded </text>
<text top="383" left="103" width="66" height="14" font="5">video data</text>
<text top="323" left="100" width="57" height="14" font="5">Decoder </text>
<text top="339" left="100" width="70" height="14" font="5">description</text>
<text top="339" left="365" width="60" height="14" font="5">Decoded </text>
<text top="354" left="363" width="66" height="14" font="5">video data</text>
<text top="420" left="134" width="255" height="16" font="2">Fig. 1. Structure of MPEG RVC decoder</text>
<text top="459" left="97" width="351" height="16" font="2">FUs deﬁne a processing entity of a decoder. It may</text>
<text top="477" left="82" width="366" height="16" font="2">be from MPEG VTL or/and other video tools libraries. It</text>
<text top="495" left="82" width="366" height="16" font="2">is described in RVC-CAL language. A FU contains some</text>
<text top="513" left="82" width="352" height="16" font="2">processing units, control units and input and output ports</text>
<text top="531" left="97" width="351" height="16" font="2">in [12] authors deﬁne a reconﬁgurable video with two</text>
<text top="548" left="82" width="366" height="16" font="2">types of data. The ﬁrst one is the bit stream syntax descrip-</text>
<text top="566" left="82" width="366" height="16" font="2">tion (BSD), which describes the structure of the bitstream.</text>
<text top="584" left="82" width="366" height="16" font="2">The BSD is written in RVC-BSDL. The second one is the FU</text>
<text top="602" left="82" width="366" height="16" font="2">network description (FND), which describes the connections</text>
<text top="620" left="82" width="366" height="16" font="2">between the FUs. The FND is written in FNL. The RVC</text>
<text top="638" left="82" width="366" height="16" font="2">framework is supported by several tools to secure efﬁcient</text>
<text top="656" left="82" width="366" height="16" font="2">development, reconﬁguration, and implementation processes.</text>
<text top="674" left="82" width="366" height="16" font="2">These tools are capable to directly synthesize the RVC</text>
<text top="692" left="82" width="366" height="16" font="2">decoder into both Hardware Description Languages (HDL)</text>
<text top="710" left="82" width="256" height="16" font="2">and/or software description(e.g., C, C++).</text>
<text top="728" left="97" width="351" height="16" font="2">Several works discussed the implementation in RVC</text>
<text top="746" left="82" width="255" height="16" font="2">framework using reconﬁgurable platform.</text>
<text top="764" left="97" width="351" height="16" font="2">In [16] the authors present a method to quickly prototype</text>
<text top="782" left="82" width="366" height="16" font="2">and generate hardware implementation of a baseline part of</text>
<text top="800" left="82" width="294" height="16" font="2">the LAR coder, from an RVC-CAL description.</text>
<text top="818" left="97" width="351" height="16" font="2">Co-design approach is used in paper [5] to implement</text>
<text top="835" left="82" width="324" height="16" font="2">MPEG-4 decoder SP that is described in RVC-CAL.</text>
<text top="853" left="97" width="351" height="16" font="2">In this paper [15] the authors propose a model of imple-</text>
<text top="871" left="82" width="365" height="16" font="2">mentation a motion estimation module in the RVC context.</text>
<text top="889" left="97" width="351" height="16" font="2">In our work, we propose an optimal implementation of</text>
<text top="907" left="82" width="285" height="16" font="2">H263 and MPEG-2 IQ algorithms using DPR.</text>
<text top="936" left="82" width="238" height="16" font="2">II-B. FPGA Partial Reconﬁguration</text>
<text top="958" left="97" width="351" height="16" font="2">The last generation of FPGA from Xilinx adds a new</text>
<text top="976" left="82" width="366" height="16" font="2">technique called Dynamic Partial Reconﬁguration (DPR).</text>
<text top="994" left="82" width="366" height="16" font="2">DPR provides the modiﬁcation of a portion of the device</text>
<text top="1012" left="82" width="366" height="16" font="2">while the rest remains unchanged and active. The Figure 2</text>
<text top="1030" left="82" width="245" height="16" font="2">shows a reconﬁgurable FPGA structure.</text>
<text top="1048" left="97" width="259" height="16" font="2">This technique can provide some beneﬁts.</text>
<text top="1073" left="97" width="6" height="11" font="6">•</text>
<text top="1069" left="112" width="275" height="16" font="2">Increase in functionalities of a single FPGA.</text>
<text top="201" left="765" width="45" height="16" font="0">Static </text>
<text top="220" left="772" width="28" height="16" font="0">part</text>
<text top="156" left="642" width="70" height="16" font="0">Dynamic </text>
<text top="176" left="642" width="28" height="16" font="0">part</text>
<text top="198" left="668" width="10" height="13" font="0">1</text>
<text top="236" left="640" width="70" height="16" font="0">Dynamic </text>
<text top="252" left="640" width="28" height="16" font="0">part</text>
<text top="268" left="673" width="10" height="13" font="0">2</text>
<text top="116" left="487" width="63" height="16" font="0">Dynamic</text>
<text top="134" left="488" width="28" height="16" font="0">part</text>
<text top="149" left="545" width="65" height="16" font="0">Dynamic</text>
<text top="165" left="546" width="28" height="16" font="0">part</text>
<text top="189" left="575" width="10" height="13" font="0">3</text>
<text top="294" left="777" width="51" height="18" font="7">FPGA</text>
<text top="154" left="509" width="10" height="13" font="0">4</text>
<text top="333" left="532" width="247" height="16" font="2">Fig. 2. A partially-reconﬁgurable FPGA</text>
<text top="389" left="488" width="6" height="11" font="6">•</text>
<text top="385" left="503" width="187" height="16" font="2">Improve FPGA area efﬁciency</text>
<text top="406" left="488" width="6" height="11" font="6">•</text>
<text top="403" left="503" width="223" height="16" font="2">Augment architectures ﬂexibility [3]</text>
<text top="424" left="488" width="6" height="11" font="6">•</text>
<text top="421" left="503" width="192" height="16" font="2">Reduce power consumption [4]</text>
<text top="441" left="473" width="366" height="16" font="2">However, it has two drawbacks. The ﬁrst one is the reconﬁg-</text>
<text top="459" left="473" width="366" height="16" font="2">uration time(latency) and the second one is the lack of design</text>
<text top="477" left="473" width="366" height="16" font="2">tools and documentations. The most used partially reconﬁg-</text>
<text top="495" left="473" width="366" height="16" font="2">urable FPGAs are the Xilinx Virtex series devices such as</text>
<text top="513" left="473" width="366" height="16" font="2">Virtex-II, Virtex-II Pro, Virtex-4, Virtex-5 and Virtex-6. A</text>
<text top="531" left="473" width="366" height="16" font="2">reconﬁgurable system typically comprises an area for static</text>
<text top="549" left="473" width="366" height="16" font="2">system components and one or more partial reconﬁgurable</text>
<text top="567" left="473" width="268" height="16" font="2">region for dynamic reconﬁgurable modules.</text>
<text top="585" left="488" width="351" height="16" font="2">The dynamic partial reconﬁguration is used in the different</text>
<text top="603" left="473" width="361" height="16" font="2">domains such as security, networks, and image processing.</text>
<text top="621" left="488" width="351" height="16" font="2">In [6] authors presents hardware/software implementation</text>
<text top="639" left="473" width="366" height="16" font="2">of AES (Advanced Encryption Standard) cryptography algo-</text>
<text top="657" left="473" width="366" height="16" font="2">rithm using partial dynamic reconﬁguration technique. The</text>
<text top="675" left="473" width="366" height="16" font="2">proposed architecture is based on a Microblaze processor</text>
<text top="692" left="473" width="366" height="16" font="2">that manages the reconﬁgurable module. It allows to modify</text>
<text top="710" left="473" width="366" height="16" font="2">or/and change the size of the key without stopping the</text>
<text top="728" left="473" width="366" height="16" font="2">normal operation of the system. The experimental results</text>
<text top="746" left="473" width="366" height="16" font="2">show performance of the AES algorithm in terms of security</text>
<text top="764" left="473" width="65" height="16" font="2">and safety.</text>
<text top="782" left="488" width="351" height="16" font="2">The paper [7] proposes a methodology and modular</text>
<text top="800" left="473" width="366" height="16" font="2">architecture to implement situation-based reconﬁguration in</text>
<text top="818" left="473" width="366" height="16" font="2">Wireless Network using partial reconﬁguration technique.</text>
<text top="836" left="473" width="366" height="16" font="2">This main advantage of this work appears in the reduction</text>
<text top="854" left="473" width="241" height="16" font="2">of power consumption and saving cost.</text>
<text top="872" left="488" width="351" height="16" font="2">In the reference [8], the authors present the implemen-</text>
<text top="890" left="473" width="366" height="16" font="2">tation for a scalable H.264/AVC deblocking ﬁlter using</text>
<text top="908" left="473" width="366" height="16" font="2">partial reconﬁguration System. The adopted architecture is</text>
<text top="926" left="473" width="366" height="16" font="2">based on Xilinx Virtex-4 ML410 FPGA board. The results</text>
<text top="943" left="473" width="366" height="16" font="2">show performance in terms of maximum frequency and</text>
<text top="961" left="473" width="69" height="16" font="2">throughput.</text>
<text top="979" left="488" width="351" height="16" font="2">We notice that DPR is more and more used, so this</text>
<text top="997" left="473" width="366" height="16" font="2">technique is a promise solution to design a preferment</text>
<text top="1015" left="473" width="366" height="16" font="2">embedded system. But, there is not much research on how</text>
<text top="1033" left="473" width="366" height="16" font="2">efﬁciently use DPR to implement an algorithm which is</text>
<text top="1051" left="473" width="366" height="16" font="2">described in a high-level speciﬁcation language such as</text>
<text top="1069" left="473" width="68" height="16" font="2">RVC-CAL.</text>
<text top="735" left="29" width="0" height="17" font="3">hal-00661337, version 1 - 19 Jan 2012</text>
</page>
<page number="3" position="absolute" top="0" left="0" height="1188" width="918">
	<fontspec id="8" size="17" family="Times" color="#000000"/>
	<fontspec id="9" size="21" family="Times" color="#000000"/>
	<fontspec id="10" size="16" family="Times" color="#000000"/>
	<fontspec id="11" size="19" family="Times" color="#000000"/>
	<fontspec id="12" size="14" family="Times" color="#000000"/>
	<fontspec id="13" size="7" family="Times" color="#000000"/>
<text top="113" left="155" width="218" height="16" font="2">III. INVERSE QUANTIZATION</text>
<text top="136" left="97" width="351" height="16" font="2">Inverse quantization is an important step in the video</text>
<text top="154" left="82" width="366" height="16" font="2">decoding process. Essentially, the inverse quantization al-</text>
<text top="172" left="82" width="366" height="16" font="2">gorithm reproduces the DCT coefﬁcients computed by the</text>
<text top="190" left="82" width="366" height="16" font="2">encoder. There are two inverse quantization methods spec-</text>
<text top="208" left="82" width="366" height="16" font="2">iﬁed for MPEG4 video. The ﬁrst one uses matrix called</text>
<text top="226" left="82" width="366" height="16" font="2">MPEG-2 inverse quantization and the second one is based</text>
<text top="244" left="82" width="337" height="16" font="2">on scalar coefﬁcient named H263 inverse quantization.</text>
<text top="262" left="97" width="351" height="16" font="2">MPEG-2 inverse quantization method [9] (shown in Fig-</text>
<text top="280" left="82" width="366" height="16" font="2">ure 3) introduces matrix as a weighting factor in the process.</text>
<text top="298" left="82" width="366" height="16" font="2">In fact, different matrix for intra and inter blocks are used.</text>
<text top="316" left="82" width="366" height="16" font="2">The purpose of this method is to exploit properties of the</text>
<text top="333" left="82" width="366" height="16" font="2">human visual system. When human eyes are less sensitive</text>
<text top="351" left="82" width="366" height="16" font="2">to low frequencies, which can be quantized with a coarser</text>
<text top="369" left="82" width="366" height="16" font="2">step-size compared to important frequency. The result of</text>
<text top="387" left="82" width="366" height="16" font="2">quantization method gives a coded bit-stream more compact</text>
<text top="405" left="82" width="235" height="16" font="2">with minimal distortion to the picture.</text>
<text top="437" left="91" width="4" height="16" font="8"> </text>
<text top="440" left="247" width="62" height="19" font="9">Matrix</text>
<text top="443" left="295" width="4" height="15" font="0"> </text>
<text top="532" left="395" width="44" height="19" font="9">Data</text>
<text top="539" left="443" width="4" height="15" font="0"> </text>
<text top="500" left="207" width="4" height="16" font="8"> </text>
<text top="529" left="208" width="139" height="19" font="9">MPEG2_Quant</text>
<text top="545" left="316" width="4" height="15" font="0"> </text>
<text top="501" left="126" width="26" height="19" font="9">DC</text>
<text top="504" left="137" width="4" height="15" font="0"> </text>
<text top="528" left="125" width="26" height="19" font="9">AC</text>
<text top="529" left="136" width="4" height="15" font="0"> </text>
<text top="560" left="126" width="27" height="19" font="9">QP</text>
<text top="565" left="149" width="4" height="15" font="0"> </text>
<text top="616" left="123" width="282" height="16" font="2">Fig. 3. Inverse quantization MPEG-2 diagram</text>
<text top="652" left="97" width="351" height="16" font="2">H263 inverse quantization method [9] is based on the</text>
<text top="670" left="82" width="366" height="16" font="2">calculation of scalar. Figure 4 shows the H263 inverse</text>
<text top="688" left="82" width="366" height="16" font="2">quantization diagram. The scalar is delivered by the standard</text>
<text top="706" left="82" width="241" height="16" font="2">H263. This method is easy and simple.</text>
<text top="746" left="91" width="4" height="15" font="10"> </text>
<text top="753" left="206" width="4" height="15" font="10"> </text>
<text top="777" left="221" width="112" height="18" font="11">H263_Quant</text>
<text top="796" left="320" width="4" height="14" font="12"> </text>
<text top="779" left="396" width="41" height="14" font="11">Data</text>
<text top="788" left="441" width="4" height="14" font="12"> </text>
<text top="753" left="129" width="25" height="18" font="11">DC</text>
<text top="757" left="133" width="4" height="14" font="12"> </text>
<text top="777" left="130" width="24" height="18" font="11">AC</text>
<text top="779" left="133" width="4" height="14" font="12"> </text>
<text top="802" left="130" width="26" height="18" font="11">QP</text>
<text top="810" left="145" width="4" height="14" font="12"> </text>
<text top="856" left="134" width="261" height="16" font="2">Fig. 4. Inverse quantization H263 diagram</text>
<text top="892" left="97" width="351" height="16" font="2">We note that these methods of inverse quantization have</text>
<text top="910" left="82" width="366" height="16" font="2">the same structure except the ﬁrst one that has an input</text>
<text top="928" left="82" width="109" height="16" font="2">”Matrix” in extra.</text>
<text top="946" left="97" width="351" height="16" font="2">In our work, we adopted the default quantization matrix</text>
<text top="964" left="82" width="87" height="16" font="2">deﬁned in [2].</text>
<text top="992" left="136" width="258" height="16" font="2">IV. IMPLEMENTATION &amp; RESULTS</text>
<text top="1015" left="97" width="351" height="16" font="2">In this section, we present a design method for implemen-</text>
<text top="1033" left="82" width="245" height="16" font="2">tation of two IQ algorithms using DPR.</text>
<text top="1051" left="97" width="351" height="16" font="2">To implement two reconﬁgurable modules on the same</text>
<text top="1069" left="82" width="366" height="16" font="2">place, they must have the same inputs / outputs. According</text>
<text top="164" left="729" width="11" height="8" font="6">22</text>
<text top="164" left="709" width="11" height="8" font="6">21</text>
<text top="164" left="689" width="11" height="8" font="6">20</text>
<text top="164" left="669" width="11" height="8" font="6">19</text>
<text top="149" left="729" width="11" height="8" font="6">21</text>
<text top="149" left="709" width="11" height="8" font="6">20</text>
<text top="149" left="688" width="11" height="8" font="6">19</text>
<text top="149" left="669" width="11" height="8" font="6">18</text>
<text top="133" left="729" width="11" height="8" font="6">20</text>
<text top="133" left="708" width="11" height="8" font="6">19</text>
<text top="133" left="688" width="11" height="8" font="6">18</text>
<text top="133" left="669" width="11" height="8" font="6">17</text>
<text top="118" left="728" width="11" height="8" font="6">19</text>
<text top="118" left="708" width="11" height="8" font="6">18</text>
<text top="118" left="688" width="11" height="8" font="6">17</text>
<text top="118" left="669" width="11" height="8" font="6">16</text>
<text top="163" left="810" width="11" height="8" font="6">27</text>
<text top="163" left="790" width="11" height="8" font="6">26</text>
<text top="163" left="770" width="11" height="8" font="6">24</text>
<text top="163" left="750" width="11" height="8" font="6">23</text>
<text top="148" left="810" width="11" height="8" font="6">25</text>
<text top="148" left="790" width="11" height="8" font="6">24</text>
<text top="148" left="770" width="11" height="8" font="6">23</text>
<text top="148" left="750" width="11" height="8" font="6">22</text>
<text top="133" left="810" width="11" height="8" font="6">24</text>
<text top="133" left="790" width="11" height="8" font="6">23</text>
<text top="133" left="770" width="11" height="8" font="6">22</text>
<text top="133" left="750" width="11" height="8" font="6">21</text>
<text top="117" left="810" width="11" height="8" font="6">23</text>
<text top="117" left="790" width="11" height="8" font="6">22</text>
<text top="117" left="770" width="11" height="8" font="6">21</text>
<text top="117" left="750" width="11" height="8" font="6">20</text>
<text top="225" left="730" width="11" height="8" font="6">27</text>
<text top="225" left="710" width="11" height="8" font="6">25</text>
<text top="225" left="690" width="11" height="8" font="6">24</text>
<text top="225" left="670" width="11" height="8" font="6">23</text>
<text top="210" left="730" width="11" height="8" font="6">26</text>
<text top="210" left="710" width="11" height="8" font="6">24</text>
<text top="210" left="690" width="11" height="8" font="6">23</text>
<text top="210" left="670" width="11" height="8" font="6">22</text>
<text top="194" left="730" width="11" height="8" font="6">24</text>
<text top="194" left="710" width="11" height="8" font="6">23</text>
<text top="194" left="690" width="11" height="8" font="6">22</text>
<text top="194" left="670" width="11" height="8" font="6">21</text>
<text top="179" left="730" width="11" height="8" font="6">23</text>
<text top="179" left="710" width="11" height="8" font="6">22</text>
<text top="179" left="690" width="11" height="8" font="6">21</text>
<text top="179" left="670" width="11" height="8" font="6">20</text>
<text top="225" left="811" width="11" height="8" font="6">33</text>
<text top="225" left="791" width="11" height="8" font="6">31</text>
<text top="225" left="770" width="11" height="8" font="6">30</text>
<text top="225" left="751" width="11" height="8" font="6">28</text>
<text top="210" left="811" width="11" height="8" font="6">31</text>
<text top="210" left="791" width="11" height="8" font="6">30</text>
<text top="210" left="771" width="11" height="8" font="6">28</text>
<text top="210" left="750" width="11" height="8" font="6">27</text>
<text top="194" left="811" width="11" height="8" font="6">30</text>
<text top="194" left="791" width="11" height="8" font="6">28</text>
<text top="194" left="771" width="11" height="8" font="6">27</text>
<text top="194" left="750" width="11" height="8" font="6">26</text>
<text top="179" left="811" width="11" height="8" font="6">28</text>
<text top="179" left="791" width="11" height="8" font="6">27</text>
<text top="179" left="771" width="11" height="8" font="6">26</text>
<text top="179" left="751" width="11" height="8" font="6">25</text>
<text top="117" left="490" width="2" height="9" font="13"> </text>
<text top="163" left="551" width="10" height="7" font="6">24</text>
<text top="163" left="531" width="10" height="7" font="6">23</text>
<text top="163" left="511" width="10" height="7" font="6">22</text>
<text top="163" left="492" width="10" height="7" font="6">21</text>
<text top="147" left="551" width="10" height="7" font="6">23</text>
<text top="147" left="531" width="10" height="7" font="6">22</text>
<text top="147" left="512" width="10" height="7" font="6">21</text>
<text top="147" left="491" width="10" height="7" font="6">20</text>
<text top="132" left="552" width="10" height="7" font="6">21</text>
<text top="132" left="531" width="10" height="7" font="6">19</text>
<text top="132" left="511" width="10" height="7" font="6">18</text>
<text top="132" left="491" width="10" height="7" font="6">17</text>
<text top="117" left="552" width="10" height="7" font="6">21</text>
<text top="117" left="531" width="10" height="7" font="6">18</text>
<text top="117" left="511" width="10" height="7" font="6">17</text>
<text top="117" left="494" width="5" height="7" font="6">8</text>
<text top="117" left="570" width="2" height="9" font="13"> </text>
<text top="163" left="632" width="10" height="7" font="6">32</text>
<text top="163" left="612" width="10" height="7" font="6">30</text>
<text top="163" left="592" width="10" height="7" font="6">28</text>
<text top="163" left="572" width="10" height="7" font="6">26</text>
<text top="147" left="632" width="10" height="7" font="6">30</text>
<text top="147" left="612" width="10" height="7" font="6">28</text>
<text top="147" left="592" width="10" height="7" font="6">26</text>
<text top="147" left="572" width="10" height="7" font="6">24</text>
<text top="132" left="632" width="10" height="7" font="6">28</text>
<text top="132" left="612" width="10" height="7" font="6">27</text>
<text top="132" left="592" width="10" height="7" font="6">25</text>
<text top="132" left="572" width="10" height="7" font="6">23</text>
<text top="117" left="632" width="10" height="7" font="6">27</text>
<text top="117" left="612" width="10" height="7" font="6">25</text>
<text top="117" left="592" width="10" height="7" font="6">23</text>
<text top="117" left="572" width="10" height="7" font="6">21</text>
<text top="179" left="490" width="2" height="9" font="13"> </text>
<text top="225" left="552" width="10" height="7" font="6">32</text>
<text top="225" left="531" width="10" height="7" font="6">30</text>
<text top="225" left="512" width="10" height="7" font="6">28</text>
<text top="225" left="491" width="10" height="7" font="6">27</text>
<text top="210" left="552" width="10" height="7" font="6">30</text>
<text top="210" left="532" width="10" height="7" font="6">28</text>
<text top="210" left="512" width="10" height="7" font="6">26</text>
<text top="210" left="492" width="10" height="7" font="6">25</text>
<text top="194" left="552" width="10" height="7" font="6">28</text>
<text top="194" left="532" width="10" height="7" font="6">26</text>
<text top="194" left="512" width="10" height="7" font="6">24</text>
<text top="194" left="492" width="10" height="7" font="6">23</text>
<text top="179" left="552" width="10" height="7" font="6">26</text>
<text top="179" left="532" width="10" height="7" font="6">24</text>
<text top="179" left="512" width="10" height="7" font="6">23</text>
<text top="179" left="492" width="10" height="7" font="6">22</text>
<text top="179" left="571" width="2" height="9" font="13"> </text>
<text top="225" left="632" width="10" height="7" font="6">45</text>
<text top="225" left="613" width="10" height="7" font="6">41</text>
<text top="225" left="592" width="10" height="7" font="6">38</text>
<text top="225" left="573" width="10" height="7" font="6">35</text>
<text top="210" left="632" width="10" height="7" font="6">41</text>
<text top="210" left="612" width="10" height="7" font="6">38</text>
<text top="210" left="592" width="10" height="7" font="6">35</text>
<text top="210" left="573" width="10" height="7" font="6">32</text>
<text top="194" left="632" width="10" height="7" font="6">38</text>
<text top="194" left="612" width="10" height="7" font="6">35</text>
<text top="194" left="592" width="10" height="7" font="6">32</text>
<text top="194" left="573" width="10" height="7" font="6">30</text>
<text top="179" left="632" width="10" height="7" font="6">35</text>
<text top="179" left="612" width="10" height="7" font="6">32</text>
<text top="179" left="592" width="10" height="7" font="6">30</text>
<text top="179" left="573" width="10" height="7" font="6">28</text>
<text top="111" left="479" width="2" height="10" font="13"> </text>
<text top="111" left="664" width="2" height="10" font="13"> </text>
<text top="275" left="473" width="366" height="16" font="2">to the study on these IQ algorithms, MPEG-2 IQ and H263</text>
<text top="293" left="473" width="366" height="16" font="2">IQ haven’t the same number of inputs. Therefore, we must</text>
<text top="311" left="473" width="366" height="16" font="2">add an interface and encapsulate the IQ algorithm in this</text>
<text top="329" left="473" width="366" height="16" font="2">interface. the number of interface inputs should be equal</text>
<text top="347" left="473" width="366" height="16" font="2">to the maximum of MPEG-2 IQ inputs number and H263</text>
<text top="365" left="473" width="366" height="16" font="2">IQ inputs number. The general structure of the inverse</text>
<text top="383" left="473" width="210" height="16" font="2">quantization is shown in Figure 5.</text>
<text top="431" left="482" width="4" height="11" font="0"> </text>
<text top="438" left="662" width="4" height="10" font="5"> </text>
<text top="478" left="630" width="59" height="18" font="7">Inverse</text>
<text top="475" left="685" width="4" height="11" font="0"> </text>
<text top="505" left="613" width="103" height="18" font="7">Quantization</text>
<text top="513" left="703" width="4" height="10" font="5"> </text>
<text top="438" left="515" width="22" height="13" font="7">AC</text>
<text top="437" left="511" width="4" height="10" font="5"> </text>
<text top="462" left="514" width="23" height="13" font="7">DC</text>
<text top="475" left="511" width="4" height="10" font="5"> </text>
<text top="488" left="513" width="26" height="18" font="7">QP</text>
<text top="513" left="512" width="4" height="10" font="5"> </text>
<text top="492" left="785" width="45" height="13" font="7">DATA</text>
<text top="469" left="822" width="4" height="10" font="5"> </text>
<text top="513" left="503" width="59" height="18" font="7">Quant_</text>
<text top="538" left="503" width="54" height="18" font="7">Matrix</text>
<text top="588" left="484" width="344" height="16" font="2">Fig. 5. The general structure of the inverse quantization</text>
<text top="623" left="488" width="351" height="16" font="2">In our design method, we ﬁrst add the MPEG-2 IQ</text>
<text top="641" left="473" width="366" height="16" font="2">algorithm to MPEG-4 decoder. Than we modify the H263 IQ</text>
<text top="658" left="473" width="366" height="16" font="2">algorithm. Finally we implement these two modules using</text>
<text top="676" left="473" width="33" height="16" font="2">DPR.</text>
<text top="694" left="488" width="351" height="16" font="2">In order to add the inverse quantization MPEG2 to MPEG-</text>
<text top="712" left="473" width="201" height="16" font="2">4 decoder we follow three steps:</text>
<text top="732" left="488" width="351" height="16" font="2">1) The description of MPEG-2 IQ as a dataﬂow program</text>
<text top="750" left="509" width="183" height="16" font="2">with the RVC-CAL language.</text>
<text top="768" left="488" width="351" height="16" font="2">2) The generation the code in C language with an open</text>
<text top="786" left="509" width="329" height="16" font="2">source tool named ORCC ”Open RVC-CAL Com-</text>
<text top="804" left="509" width="38" height="16" font="2">piler”.</text>
<text top="821" left="488" width="351" height="16" font="2">3) The test C code with Microsoft visual C++ using a</text>
<text top="839" left="509" width="123" height="16" font="2">test video sequence.</text>
<text top="859" left="488" width="351" height="16" font="2">After testing the decoder and verifying that is running</text>
<text top="877" left="473" width="366" height="16" font="2">correctly for both inverse quantization methods, we can au-</text>
<text top="895" left="473" width="366" height="16" font="2">tomatically transform the code in hardware description using</text>
<text top="913" left="473" width="366" height="16" font="2">CAL2HDL. The code generated is formed by VERILOG</text>
<text top="931" left="473" width="366" height="16" font="2">ﬁles that present the actors and a VHDL ﬁle for top. The</text>
<text top="949" left="473" width="366" height="16" font="2">top ﬁle deﬁnes the highest hierarchical representation of</text>
<text top="967" left="473" width="366" height="16" font="2">the design connections. The connection between the FUs</text>
<text top="985" left="473" width="353" height="16" font="2">is insured by synchronous or asynchronous FIFO buffers.</text>
<text top="1011" left="473" width="147" height="16" font="2">IV-A. Target platform</text>
<text top="1033" left="488" width="351" height="16" font="2">Our application has been tested and implemented in the</text>
<text top="1051" left="473" width="366" height="16" font="2">architecture which is deﬁned in [21]. Figure 6 illustrates our</text>
<text top="1069" left="473" width="110" height="16" font="2">target architecture</text>
<text top="735" left="29" width="0" height="17" font="3">hal-00661337, version 1 - 19 Jan 2012</text>
</page>
<page number="4" position="absolute" top="0" left="0" height="1188" width="918">
<text top="115" left="97" width="40" height="13" font="2">Clock </text>
<text top="133" left="96" width="64" height="13" font="2">Generator</text>
<text top="110" left="325" width="36" height="13" font="2">DLMB</text>
<text top="167" left="273" width="21" height="13" font="2">MB</text>
<text top="170" left="347" width="29" height="13" font="2">LMB</text>
<text top="293" left="298" width="61" height="13" font="2">Compact </text>
<text top="312" left="300" width="35" height="13" font="2">Flash</text>
<text top="252" left="223" width="57" height="13" font="2">HWICAP</text>
<text top="242" left="108" width="47" height="13" font="2">Module</text>
<text top="261" left="108" width="96" height="13" font="2">Reconfigurable</text>
<text top="244" left="306" width="47" height="13" font="2">System</text>
<text top="261" left="311" width="29" height="13" font="2">ACE</text>
<text top="252" left="383" width="39" height="13" font="2">UART</text>
<text top="196" left="390" width="50" height="13" font="2">MB_PLB</text>
<text top="159" left="102" width="37" height="13" font="2">Proc_</text>
<text top="178" left="99" width="45" height="13" font="2">system</text>
<text top="177" left="143" width="45" height="15" font="12">_reset</text>
<text top="167" left="211" width="34" height="13" font="2">MDM</text>
<text top="163" left="302" width="33" height="13" font="2">ILMB</text>
<text top="351" left="185" width="160" height="16" font="2">Fig. 6. Target architecture</text>
<text top="403" left="97" width="241" height="16" font="2">The main parts of this architecture are:</text>
<text top="428" left="97" width="6" height="11" font="6">•</text>
<text top="424" left="112" width="336" height="16" font="2">The processor Microblaze (MB) manages the imple-</text>
<text top="442" left="112" width="229" height="16" font="2">mentation of reconﬁgurable modules.</text>
<text top="464" left="97" width="6" height="11" font="6">•</text>
<text top="460" left="112" width="336" height="16" font="2">The Flash memory stores bitstreams partially reconﬁg-</text>
<text top="478" left="112" width="41" height="16" font="2">urable.</text>
<text top="500" left="97" width="6" height="11" font="6">•</text>
<text top="496" left="112" width="336" height="16" font="2">HWICAP (Hardware Internal Conﬁguration Access</text>
<text top="514" left="112" width="336" height="16" font="2">Port) loads partial bitstream from ﬂash memory . this</text>
<text top="532" left="112" width="336" height="16" font="2">component is provided by Xilinx. It has 32-bits data</text>
<text top="550" left="112" width="196" height="16" font="2">port and operating at 100 MHz.</text>
<text top="572" left="97" width="6" height="11" font="6">•</text>
<text top="568" left="112" width="336" height="16" font="2">The bus PLB (Processor Local Bus) transfers data</text>
<text top="586" left="112" width="125" height="16" font="2">between peripherals.</text>
<text top="607" left="97" width="6" height="11" font="6">•</text>
<text top="604" left="112" width="336" height="16" font="2">UART provides serial communication between PC and</text>
<text top="622" left="112" width="42" height="16" font="2">FPGA.</text>
<text top="643" left="97" width="6" height="11" font="6">•</text>
<text top="639" left="112" width="336" height="16" font="2">The LMB is a fast local bus for connecting MicroBlaze</text>
<text top="657" left="112" width="336" height="16" font="2">instruction and data ports to high-speed peripherals. It</text>
<text top="675" left="112" width="336" height="16" font="2">is the standard communication bus for Xilinx systems.</text>
<text top="697" left="97" width="6" height="11" font="6">•</text>
<text top="693" left="112" width="310" height="16" font="2">The reconﬁgurable module is inverse quantization.</text>
<text top="723" left="82" width="366" height="16" font="2">IV-B. The implementation of two inverse quantization</text>
<text top="741" left="82" width="53" height="16" font="2">modules</text>
<text top="764" left="97" width="351" height="16" font="2">Applying the ﬂow of partial reconﬁguration to Xilinx</text>
<text top="782" left="82" width="366" height="16" font="2">FPGAs requires design tools and methodologies that exploit</text>
<text top="800" left="82" width="366" height="16" font="2">the partial reconﬁguration capabilities. Xilinx proposes this</text>
<text top="818" left="82" width="366" height="16" font="2">set of tools: synthesis tool like Xilinx ISE (Integrated Syn-</text>
<text top="836" left="82" width="366" height="16" font="2">thesis Environment), PlanAhead provides friendly graphical</text>
<text top="854" left="82" width="366" height="16" font="2">interface for placement/routing jobs, EDK (embedded devel-</text>
<text top="872" left="82" width="281" height="16" font="2">opment kit) helps to build an on-chip system.</text>
<text top="890" left="97" width="351" height="16" font="2">We verify the functionality of our design using the Xilinx</text>
<text top="908" left="82" width="366" height="16" font="2">Virtex-5 development board. This board has several pe-</text>
<text top="926" left="82" width="366" height="16" font="2">ripheral devices and connectors such as FLASH, DDRAM,</text>
<text top="943" left="82" width="366" height="16" font="2">UART, JTAG, VGA and other peripherals which allow</text>
<text top="961" left="82" width="366" height="16" font="2">implementation of complex FPGA applications. The core of</text>
<text top="979" left="82" width="366" height="16" font="2">the board is Xilinx virtex-5 lx110tff1136 FPGA in which</text>
<text top="997" left="82" width="366" height="16" font="2">the Microblaze soft-core processor is implemented. The</text>
<text top="1015" left="82" width="366" height="16" font="2">Microblaze is a 32-bit RISC embedded [22] processor. In</text>
<text top="1033" left="82" width="366" height="16" font="2">this approach, to commute from one reconﬁgurable module</text>
<text top="1051" left="82" width="366" height="16" font="2">to another, we need a unit of control to manage efﬁciently</text>
<text top="1069" left="82" width="366" height="16" font="2">the partial reconﬁguration. And to deﬁne the reconﬁgurable</text>
<text top="113" left="473" width="366" height="16" font="2">partition region in the FPGA, we should know the occupied</text>
<text top="131" left="473" width="366" height="16" font="2">area by each IQ module. To validate the efﬁciency of</text>
<text top="149" left="473" width="366" height="16" font="2">partial reconﬁguration technique in the RVC technology,</text>
<text top="167" left="473" width="366" height="16" font="2">we compare the area occupied, maximun frequency, power</text>
<text top="185" left="473" width="366" height="16" font="2">consumption and design time of an architecture with DPR</text>
<text top="203" left="473" width="366" height="16" font="2">and anothor one without DPR . In the ﬁrst time, we have</text>
<text top="221" left="473" width="366" height="16" font="2">implemented the inverse quantization algorithm in the virtex-</text>
<text top="239" left="473" width="366" height="16" font="2">5 (XC5LX110T) board and virtex-4 (XC4VFX12) board of</text>
<text top="257" left="473" width="366" height="16" font="2">Xilinx The synthesis results are summarized in the Table I.</text>
<text top="275" left="473" width="366" height="16" font="2">this results, we allow to know the value of the area required</text>
<text top="293" left="473" width="366" height="16" font="2">for each module reconﬁgurable. The IQ H263 module and</text>
<text top="310" left="473" width="366" height="16" font="2">QI-MPEG-2 the module correspond at inverse quantization</text>
<text top="328" left="473" width="366" height="16" font="2">H263 and MPEG-2 algorithms, respectively. IQ MPEG2-</text>
<text top="346" left="473" width="366" height="16" font="2">H263 module contains two types of inverse quantization</text>
<text top="364" left="473" width="366" height="16" font="2">H263 and MPEG-2. To switch between these two modules</text>
<text top="382" left="473" width="215" height="16" font="2">we add a loop ”if” in the CAL ﬁle</text>
<text top="430" left="564" width="179" height="16" font="2">Table I. On-chip area results</text>
<text top="459" left="574" width="79" height="13" font="1">FPGA Resource</text>
<text top="459" left="671" width="64" height="13" font="1">XC5LX110T</text>
<text top="459" left="753" width="58" height="13" font="1">XC4VFX12</text>
<text top="487" left="513" width="43" height="13" font="1">IQ H263</text>
<text top="487" left="625" width="29" height="13" font="1">Slices</text>
<text top="487" left="687" width="48" height="13" font="1">83\69120</text>
<text top="487" left="753" width="48" height="13" font="1">83\69120</text>
<text top="513" left="606" width="47" height="13" font="1">Flip Flop</text>
<text top="513" left="699" width="36" height="13" font="1">19\140</text>
<text top="513" left="753" width="48" height="13" font="1">83\69120</text>
<text top="540" left="631" width="22" height="13" font="1">DSP</text>
<text top="540" left="710" width="24" height="13" font="1">1\64</text>
<text top="540" left="753" width="24" height="13" font="1">1\32</text>
<text top="567" left="625" width="28" height="13" font="1">LUTs</text>
<text top="567" left="687" width="48" height="13" font="1">76\69120</text>
<text top="567" left="753" width="48" height="13" font="1">96\69120</text>
<text top="595" left="500" width="56" height="13" font="1">IQ MPEG2</text>
<text top="595" left="625" width="29" height="13" font="1">Slices</text>
<text top="595" left="681" width="54" height="13" font="1">122\69120</text>
<text top="595" left="753" width="48" height="13" font="1">99\69120</text>
<text top="622" left="606" width="47" height="13" font="1">Flip Flop</text>
<text top="622" left="699" width="36" height="13" font="1">57\140</text>
<text top="622" left="753" width="54" height="13" font="1">123\69120</text>
<text top="649" left="631" width="22" height="13" font="1">DSP</text>
<text top="649" left="710" width="24" height="13" font="1">2\64</text>
<text top="649" left="753" width="24" height="13" font="1">2\32</text>
<text top="675" left="625" width="28" height="13" font="1">LUTs</text>
<text top="675" left="681" width="54" height="13" font="1">133\69120</text>
<text top="675" left="753" width="54" height="13" font="1">123\69120</text>
<text top="703" left="496" width="60" height="13" font="1">IQ MPEG2-</text>
<text top="703" left="625" width="29" height="13" font="1">Slices</text>
<text top="703" left="681" width="54" height="13" font="1">152\69120</text>
<text top="703" left="753" width="54" height="13" font="1">123\69120</text>
<text top="716" left="529" width="27" height="13" font="1">H263</text>
<text top="743" left="606" width="47" height="13" font="1">Flip Flop</text>
<text top="743" left="699" width="36" height="13" font="1">87\140</text>
<text top="743" left="753" width="54" height="13" font="1">143\69120</text>
<text top="770" left="631" width="22" height="13" font="1">DSP</text>
<text top="770" left="710" width="24" height="13" font="1">2\64</text>
<text top="770" left="753" width="24" height="13" font="1">2\32</text>
<text top="797" left="625" width="28" height="13" font="1">LUTs</text>
<text top="797" left="681" width="54" height="13" font="1">182\69120</text>
<text top="797" left="753" width="54" height="13" font="1">202\69120</text>
<text top="834" left="488" width="351" height="16" font="2">We note that MPEG-2 IQ uses more area than H263 IQ.</text>
<text top="851" left="473" width="362" height="16" font="2">Because the computation of MPEG-2 IQ is more complex.</text>
<text top="870" left="488" width="351" height="16" font="2">According to these results we can deﬁne the reconﬁg-</text>
<text top="888" left="473" width="366" height="16" font="2">urable partition region. This region should be at least equal</text>
<text top="906" left="473" width="366" height="16" font="2">to the greater value of the area required for each module</text>
<text top="924" left="473" width="90" height="16" font="2">reconﬁgurable.</text>
<text top="942" left="488" width="351" height="16" font="2">The performance implementation of IQ modules is</text>
<text top="960" left="473" width="143" height="16" font="2">grouped in the Table II</text>
<text top="978" left="488" width="351" height="16" font="2">Table III gives the experimental results in term of power</text>
<text top="996" left="473" width="366" height="16" font="2">consumption. The results are obtained via XPower which is</text>
<text top="1014" left="473" width="221" height="16" font="2">the power estimation tool of Xilinx.</text>
<text top="1033" left="488" width="351" height="16" font="2">We ﬁnd that the saving area on chip indicates directly the</text>
<text top="1051" left="473" width="188" height="16" font="2">optimized power consumption.</text>
<text top="1069" left="488" width="351" height="16" font="2">After checking of different hardware implementation of</text>
<text top="735" left="29" width="0" height="17" font="3">hal-00661337, version 1 - 19 Jan 2012</text>
</page>
<page number="5" position="absolute" top="0" left="0" height="1188" width="918">
<text top="120" left="124" width="280" height="16" font="2">Table II. Performance implementation for IQ</text>
<text top="150" left="205" width="79" height="13" font="1">FPGA Resource</text>
<text top="150" left="302" width="64" height="13" font="1">XC5LX110T</text>
<text top="150" left="383" width="58" height="13" font="1">XC4VFX12</text>
<text top="177" left="138" width="43" height="13" font="1">IQ H263</text>
<text top="177" left="236" width="48" height="13" font="1">Minimum</text>
<text top="177" left="345" width="21" height="13" font="1">9.85</text>
<text top="177" left="383" width="27" height="13" font="1">7.869</text>
<text top="191" left="230" width="54" height="13" font="1">Period (ns)</text>
<text top="218" left="234" width="50" height="13" font="1">Maximum</text>
<text top="218" left="327" width="39" height="13" font="1">110.072</text>
<text top="218" left="383" width="33" height="13" font="1">127.08</text>
<text top="231" left="199" width="85" height="13" font="1">Frequency(MHZ)</text>
<text top="258" left="121" width="60" height="13" font="1">IQ MPEG-2</text>
<text top="258" left="236" width="48" height="13" font="1">Minimum</text>
<text top="258" left="333" width="33" height="13" font="1">10.882</text>
<text top="258" left="383" width="33" height="13" font="1">10.258</text>
<text top="272" left="230" width="54" height="13" font="1">Period (ns)</text>
<text top="299" left="234" width="50" height="13" font="1">Maximum</text>
<text top="299" left="333" width="33" height="13" font="1">91.455</text>
<text top="299" left="383" width="33" height="13" font="1">97.481</text>
<text top="312" left="199" width="85" height="13" font="1">Frequency(MHZ)</text>
<text top="340" left="91" width="91" height="13" font="1">IQ MPEG-2-H263</text>
<text top="340" left="236" width="48" height="13" font="1">Minimum</text>
<text top="340" left="333" width="33" height="13" font="1">11.919</text>
<text top="340" left="383" width="33" height="13" font="1">11.120</text>
<text top="353" left="230" width="54" height="13" font="1">Period (ns)</text>
<text top="380" left="234" width="50" height="13" font="1">Maximum</text>
<text top="380" left="333" width="33" height="13" font="1">83.895</text>
<text top="380" left="383" width="33" height="13" font="1">90.770</text>
<text top="394" left="199" width="85" height="13" font="1">Frequency(MHZ)</text>
<text top="442" left="90" width="349" height="16" font="2">Table III. Power consumption estimation of IQ modules</text>
<text top="471" left="273" width="88" height="13" font="1">Total power (mw)</text>
<text top="499" left="195" width="60" height="13" font="1">IQ MPEG-2</text>
<text top="499" left="273" width="18" height="13" font="1">859</text>
<text top="526" left="211" width="43" height="13" font="1">IQ H263</text>
<text top="526" left="273" width="18" height="13" font="1">845</text>
<text top="553" left="164" width="91" height="13" font="1">IQ MPEG-2-H263</text>
<text top="553" left="273" width="18" height="13" font="1">872</text>
<text top="607" left="82" width="366" height="16" font="2">IQ algorithms, we continue with the implementation of the</text>
<text top="625" left="82" width="142" height="16" font="2">application using DPR.</text>
<text top="644" left="97" width="351" height="16" font="2">In our method design, ﬁrst we have created a processor</text>
<text top="662" left="82" width="366" height="16" font="2">system using EDK. Than, we have added a user peripheral</text>
<text top="680" left="82" width="366" height="16" font="2">which included a place holder for the reconﬁgurable parti-</text>
<text top="698" left="82" width="366" height="16" font="2">tion, and we have generated netlist ﬁles. After that, we have</text>
<text top="716" left="82" width="366" height="16" font="2">created an software application (code C) using SDK. This</text>
<text top="734" left="82" width="366" height="16" font="2">code is executed by the Microblaze processor, to switch a</text>
<text top="752" left="82" width="366" height="16" font="2">conﬁguration to another. Finally, full bitstreams as well as</text>
<text top="770" left="82" width="366" height="16" font="2">partial reconﬁguration bitstreams have been generated using</text>
<text top="788" left="82" width="366" height="16" font="2">the PlanAhead software. Also, we have generated an ACE</text>
<text top="805" left="82" width="366" height="16" font="2">ﬁle for Compact Flash memory. With ACE ﬁle we can au-</text>
<text top="823" left="82" width="366" height="16" font="2">tomatically program the FPGA because this ﬁle contain the</text>
<text top="841" left="82" width="356" height="16" font="2">bitstreams and other information for programming FPGA.</text>
<text top="860" left="97" width="351" height="16" font="2">In our experimentation, we use virtex-5 board and the</text>
<text top="878" left="82" width="366" height="16" font="2">HWICAP from Xilinx which has 32-bits data port and</text>
<text top="896" left="82" width="140" height="16" font="2">operating at 100 MHz.</text>
<text top="915" left="97" width="351" height="16" font="2">Table IV shows the synthesis results of the static and</text>
<text top="933" left="82" width="312" height="16" font="2">reconﬁgurable regions, and their device utilization.</text>
<text top="983" left="122" width="285" height="16" font="2">Table IV. Performance implementation for IQ</text>
<text top="1012" left="207" width="40" height="13" font="1">Register</text>
<text top="1012" left="264" width="28" height="13" font="1">LUTs</text>
<text top="1012" left="310" width="27" height="13" font="1">slices</text>
<text top="1012" left="355" width="41" height="13" font="1">DSP48E</text>
<text top="1039" left="129" width="60" height="13" font="1">IQ MPEG-2</text>
<text top="1039" left="223" width="24" height="13" font="1">6537</text>
<text top="1039" left="268" width="24" height="13" font="1">6743</text>
<text top="1039" left="310" width="24" height="13" font="1">3769</text>
<text top="1039" left="355" width="6" height="13" font="1">5</text>
<text top="1067" left="145" width="43" height="13" font="1">IQ H263</text>
<text top="1067" left="223" width="24" height="13" font="1">6498</text>
<text top="1067" left="268" width="24" height="13" font="1">6686</text>
<text top="1067" left="310" width="24" height="13" font="1">3708</text>
<text top="1067" left="355" width="6" height="13" font="1">4</text>
<text top="113" left="488" width="351" height="16" font="2">Table V presents the partial bitstream size and the conﬁgu-</text>
<text top="131" left="473" width="366" height="16" font="2">ration time. The conﬁguration time is obtained by a hardware</text>
<text top="149" left="473" width="366" height="16" font="2">timer implemented in FPGA. This time is dependent on the</text>
<text top="167" left="473" width="366" height="16" font="2">size of the conﬁguration ﬁle and on the way to download it</text>
<text top="185" left="473" width="70" height="16" font="2">into FPGA.</text>
<text top="227" left="557" width="192" height="16" font="2">Table V. bitstream information</text>
<text top="254" left="558" width="49" height="13" font="1">bitstreams</text>
<text top="254" left="630" width="40" height="13" font="1">Size per</text>
<text top="254" left="688" width="66" height="13" font="1">Conﬁguration</text>
<text top="267" left="626" width="45" height="13" font="1">bitstream</text>
<text top="267" left="688" width="41" height="13" font="1">time per</text>
<text top="281" left="635" width="35" height="13" font="1">(Bytes)</text>
<text top="281" left="688" width="71" height="13" font="1">bitstream (us)</text>
<text top="308" left="548" width="60" height="13" font="1">IQ MPEG-2</text>
<text top="308" left="640" width="30" height="13" font="1">61440</text>
<text top="308" left="688" width="27" height="13" font="1">157,6</text>
<text top="336" left="564" width="43" height="13" font="1">IQ H263</text>
<text top="336" left="640" width="30" height="13" font="1">61440</text>
<text top="336" left="688" width="27" height="13" font="1">155,8</text>
<text top="372" left="488" width="351" height="16" font="2">Table IV illustrates the design time for an architecture</text>
<text top="390" left="473" width="366" height="16" font="2">with DPR and another one without this technique. This</text>
<text top="408" left="473" width="366" height="16" font="2">time presents the time required to develop an application</text>
<text top="426" left="473" width="62" height="16" font="2">on FPGA.</text>
<text top="469" left="583" width="140" height="16" font="2">Table VI. Design time</text>
<text top="498" left="695" width="59" height="13" font="1">Design time</text>
<text top="525" left="568" width="109" height="13" font="1">architecture with DPR</text>
<text top="525" left="695" width="45" height="13" font="1">2 mouths</text>
<text top="553" left="553" width="125" height="13" font="1">architecture without DPR</text>
<text top="553" left="695" width="40" height="13" font="1">2 weeks</text>
<text top="590" left="488" width="351" height="16" font="2">The experimental results show the efﬁciency of the RDP</text>
<text top="608" left="473" width="366" height="16" font="2">approach in reducing the occupied area and the consumption</text>
<text top="626" left="473" width="366" height="16" font="2">power. However, the design time is still high. This is mainly</text>
<text top="643" left="473" width="366" height="16" font="2">due to the lack of a well-adapted design process methodol-</text>
<text top="661" left="473" width="366" height="16" font="2">ogy and tools supporting DPR. The results presented in this</text>
<text top="679" left="473" width="366" height="16" font="2">paper where our ﬁrst experience using the DPR technology.</text>
<text top="697" left="473" width="366" height="16" font="2">The time spent for the proposed experiments can thus be</text>
<text top="715" left="473" width="366" height="16" font="2">decreased but the process still long, tedious and error-prone.</text>
<text top="742" left="599" width="113" height="16" font="2">V. DISCUSSION</text>
<text top="765" left="488" width="351" height="16" font="2">Based on the research presented on this paper, it is clear</text>
<text top="783" left="473" width="366" height="16" font="2">that the MPEG RVC standard should evolve in order to really</text>
<text top="801" left="473" width="332" height="16" font="2">complete the functionality deﬁned in its requirements.</text>
<text top="818" left="488" width="351" height="16" font="2">To dynamically replace any algorithm part (FU) with</text>
<text top="836" left="473" width="366" height="16" font="2">another one in a FPGA, you should know from the synthesis</text>
<text top="854" left="473" width="366" height="16" font="2">phase the Inputs /Outputs (I/O) and area required of each of</text>
<text top="872" left="473" width="147" height="16" font="2">the reconﬁgurable part .</text>
<text top="890" left="488" width="351" height="16" font="2">The reconﬁguration times for the inverse quantization are</text>
<text top="908" left="473" width="366" height="16" font="2">very short (about 157 us) compared to the time of an image</text>
<text top="926" left="473" width="366" height="16" font="2">decoding (typically 40ms). This shows that, the DPR may be</text>
<text top="944" left="473" width="366" height="16" font="2">used between two images of a video sequence to reconﬁgure</text>
<text top="962" left="473" width="366" height="16" font="2">the system. We can consider a reconﬁguration depending on</text>
<text top="980" left="473" width="366" height="16" font="2">the type of decoded images (I for Intra, P for Predictive or</text>
<text top="997" left="473" width="127" height="16" font="2">B for bi-Directional)</text>
<text top="1015" left="488" width="351" height="16" font="2">These results were obtained with a Virtex-5 ICAP. The</text>
<text top="1033" left="473" width="366" height="16" font="2">later operating at 100 MHZ and has 32-bits data port. But,</text>
<text top="1051" left="473" width="366" height="16" font="2">if we use a Virtex-II ICAP, (operating at 50 MHz and has</text>
<text top="1069" left="473" width="366" height="16" font="2">8-bits data port), we will not achieve sufﬁcient performance</text>
<text top="735" left="29" width="0" height="17" font="3">hal-00661337, version 1 - 19 Jan 2012</text>
</page>
<page number="6" position="absolute" top="0" left="0" height="1188" width="918">
<text top="113" left="82" width="366" height="16" font="2">(reconﬁguration time is about 1228.2 us). So the PRD</text>
<text top="131" left="82" width="366" height="16" font="2">technique is not interesting in this case (reconﬁguration</text>
<text top="149" left="82" width="262" height="16" font="2">between two images of a video sequence).</text>
<text top="167" left="97" width="351" height="16" font="2">In the RVC framework, the modiﬁed FU should be a part</text>
<text top="185" left="82" width="366" height="16" font="2">of the VTL. Indeed, if two FUs of the VTL are deﬁned for</text>
<text top="203" left="82" width="366" height="16" font="2">the same algorithm (MPEG-2 and H263 FUs for IQ is an</text>
<text top="221" left="82" width="366" height="16" font="2">example ) these two FUs must have the same I/O to apply</text>
<text top="239" left="82" width="366" height="16" font="2">the DPR, even if these I/O are not used during the execution</text>
<text top="257" left="82" width="366" height="16" font="2">of this algorithm. Moreover, it is necessary that the area</text>
<text top="275" left="82" width="366" height="16" font="2">allocated for these FUs is at least equal to the greater of two</text>
<text top="293" left="82" width="207" height="16" font="2">area needed for each of two FUs.</text>
<text top="311" left="97" width="351" height="16" font="2">Actually, the main objective of MPEG RVC standard is</text>
<text top="329" left="82" width="366" height="16" font="2">to describe the algorithms in the VTL as they exist in</text>
<text top="347" left="82" width="366" height="16" font="2">previous standards. This is against the use of DPR for</text>
<text top="365" left="82" width="366" height="16" font="2">existing algorithms and it must be taken into account to</text>
<text top="383" left="82" width="366" height="16" font="2">future algorithms in which it is difﬁcult to know a priori</text>
<text top="401" left="82" width="366" height="16" font="2">the I/O. It is even more difﬁcult to predict the surface</text>
<text top="419" left="82" width="366" height="16" font="2">required of algorithms without knowing the details of their</text>
<text top="437" left="82" width="366" height="16" font="2">programming. So a new research is needed to deﬁne a</text>
<text top="455" left="82" width="366" height="16" font="2">”generic codec” in which these parameters (I/O and area)</text>
<text top="472" left="82" width="366" height="16" font="2">are deﬁned. These parameters should adopt the worst case.</text>
<text top="490" left="82" width="366" height="16" font="2">The ﬁnal implementation will not be fully optimized in terms</text>
<text top="508" left="82" width="120" height="16" font="2">of area and latency.</text>
<text top="527" left="97" width="351" height="16" font="2">A second solution is to consider all of the decoder as</text>
<text top="544" left="82" width="366" height="16" font="2">a single zone for the DPR. This technique is certainly</text>
<text top="562" left="82" width="366" height="16" font="2">less interesting in the context of the DPR (reconﬁguration</text>
<text top="580" left="82" width="366" height="16" font="2">time is longer). But the ﬁnal solution will be optimized</text>
<text top="598" left="82" width="366" height="16" font="2">in terms of area and latency. This solution can use the</text>
<text top="616" left="82" width="366" height="16" font="2">standard MPEG RVC without modiﬁcation . However the</text>
<text top="634" left="82" width="366" height="16" font="2">generation of bitstreams must be done on the FPGA when a</text>
<text top="652" left="82" width="366" height="16" font="2">new RVC codec must be instantiated ( Online Generation).</text>
<text top="670" left="82" width="366" height="16" font="2">This approach is already used in some works such as the</text>
<text top="688" left="82" width="366" height="16" font="2">generation of LLVM code from RVC-CAL [11]. DPR seems</text>
<text top="706" left="82" width="366" height="16" font="2">to be able to give good results. Therefore, in our future</text>
<text top="724" left="82" width="366" height="16" font="2">work, we will adopt this approach. As we notice, partial</text>
<text top="742" left="82" width="366" height="16" font="2">reconﬁguration is one of the useful solutions to reduce on</text>
<text top="760" left="82" width="366" height="16" font="2">chip area an increase performance, we use this technique to</text>
<text top="778" left="82" width="336" height="16" font="2">design an optimal implementation of RVC application.</text>
<text top="808" left="199" width="131" height="16" font="2">VI. CONCLUSION</text>
<text top="832" left="97" width="351" height="16" font="2">This paper introduces DPR technique and proposes to</text>
<text top="850" left="82" width="366" height="16" font="2">use it in a RVC technology. Since, the RVC framework</text>
<text top="868" left="82" width="366" height="16" font="2">is still under development at MPEG. There is not much</text>
<text top="886" left="82" width="366" height="16" font="2">research on how efﬁciently use DPR in the RVC framework.</text>
<text top="904" left="82" width="366" height="16" font="2">Based on our study, DPR approach should satisfy these three</text>
<text top="922" left="82" width="69" height="16" font="2">constraints:</text>
<text top="947" left="97" width="6" height="11" font="6">•</text>
<text top="943" left="112" width="336" height="16" font="2">Reconﬁgurable modules implemented on the same</text>
<text top="961" left="112" width="266" height="16" font="2">place, must have the same inputs / outputs.</text>
<text top="983" left="97" width="6" height="11" font="6">•</text>
<text top="979" left="112" width="336" height="16" font="2">A unit of control is required to manage efﬁciently</text>
<text top="997" left="112" width="336" height="16" font="2">the partial reconﬁguration. This unit control is a code</text>
<text top="1015" left="112" width="330" height="16" font="2">written in C and executed by a Microblaze processor.</text>
<text top="1037" left="97" width="6" height="11" font="6">•</text>
<text top="1033" left="112" width="336" height="16" font="2">The area of the reconﬁgurable partition region is at least</text>
<text top="1051" left="112" width="336" height="16" font="2">equal to the greater of two area needed for each of two</text>
<text top="1069" left="112" width="146" height="16" font="2">reconﬁgurable modules.</text>
<text top="113" left="488" width="351" height="16" font="2">The proposed architecture is feasible for implementation</text>
<text top="131" left="473" width="366" height="16" font="2">an IQ algorithm of MPEG-4 decoder using DPR and the</text>
<text top="149" left="473" width="366" height="16" font="2">experimental results show that dynamic reconﬁguration of</text>
<text top="167" left="473" width="366" height="16" font="2">FPGAs is a promising approach for saving resources and</text>
<text top="185" left="473" width="146" height="16" font="2">increasing performance.</text>
<text top="203" left="488" width="351" height="16" font="2">As perspectives, we propose to continue the use DPR in</text>
<text top="221" left="473" width="366" height="16" font="2">the RVC technology by applying this technique between two</text>
<text top="239" left="473" width="366" height="16" font="2">different RVC decoders. These two decoders will be placed</text>
<text top="257" left="473" width="366" height="16" font="2">in same reconﬁgurable partition regions in FPGA. We plan</text>
<text top="275" left="473" width="366" height="16" font="2">also to improve the tools which automatically implement the</text>
<text top="293" left="473" width="256" height="16" font="2">decoder by integrating DPR functionality.</text>
<text top="326" left="588" width="136" height="16" font="2">VII. REFERENCES</text>
<text top="352" left="473" width="366" height="16" font="2">[1] Matthieu Wipliez, Ghislain Roquier, Jean-Franois Nezan</text>
<text top="370" left="498" width="341" height="16" font="2">Software code generation for the RVC-CAL language ,</text>
<text top="388" left="498" width="341" height="16" font="2">Springer link ,Journal of signal processing systems June</text>
<text top="405" left="498" width="30" height="16" font="2">2009</text>
<text top="423" left="473" width="366" height="16" font="2">[2] ISO/IEC 14496-2: 2004, Information technology -</text>
<text top="441" left="498" width="330" height="16" font="2">Coding of audio-visual objects - Part 2: Visual, 2004.</text>
<text top="459" left="473" width="366" height="16" font="2">[3] Cindy Kao Beneﬁts of Partial Reconﬁguration Take</text>
<text top="477" left="498" width="341" height="16" font="2">advantage of even more capabilities in your FPGA,</text>
<text top="495" left="498" width="281" height="16" font="2">Xcell Journal Xilinx,, vol. I, pp. 65-67, 2005.</text>
<text top="513" left="473" width="366" height="16" font="2">[4] Michael G. Lorenz, Luis Mengibar, Mario G. Valderas,</text>
<text top="531" left="498" width="341" height="16" font="2">and Luis Entrena Power Consumption Reduction</text>
<text top="549" left="498" width="341" height="16" font="2">Through Dynamic Reconﬁguration, Springer-Verlag</text>
<text top="567" left="498" width="234" height="16" font="2">Berlin Heidelberg, pp. 751-760,2004 .</text>
<text top="585" left="473" width="366" height="16" font="2">[5] Nicolas Siret, Ismail Sabry, Jean Franois Nezan and</text>
<text top="603" left="498" width="341" height="16" font="2">Mickael Raulet A codesign synthesis from an MPEG-4</text>
<text top="621" left="498" width="341" height="16" font="2">decoder dataﬂow description,IEEE international Sympo-</text>
<text top="639" left="498" width="248" height="16" font="2">sium Circuit and Systems ISCAS,2010 .</text>
<text top="657" left="473" width="366" height="16" font="2">[6] Zine El Abidine ALAOUI ISMAILI and Ahmed</text>
<text top="674" left="498" width="341" height="16" font="2">MOUSSASelf-Partial and Dynamic Reconﬁguration Im-</text>
<text top="692" left="498" width="341" height="16" font="2">plementation for AES using FPGA, IJCSI International</text>
<text top="710" left="498" width="309" height="16" font="2">Journal of Computer Science Issues, Vol. 2, 2009.</text>
<text top="728" left="473" width="366" height="16" font="2">[7] Rafael Garcia, Ann Gordon-Ross, and Alan D.</text>
<text top="746" left="498" width="341" height="16" font="2">George Exploiting Partially Reconﬁgurable FPGAs for</text>
<text top="764" left="498" width="341" height="16" font="2">Situation-Based Reconﬁguration in Wireless Sensor Net-</text>
<text top="782" left="498" width="341" height="16" font="2">works, FPCCM ,IEEE International Symposium Field-</text>
<text top="800" left="498" width="341" height="16" font="2">Programmable Custom Computing Machines, April</text>
<text top="818" left="498" width="34" height="16" font="2">2009.</text>
<text top="836" left="473" width="366" height="16" font="2">[8] Rakan Khraisha and Jooheung Lee A scalable</text>
<text top="854" left="498" width="341" height="16" font="2">H.264/AVC deblocking ﬁlter architecture using dynamic</text>
<text top="872" left="498" width="341" height="16" font="2">Partial reconﬁguration, ICASSP International Confer-</text>
<text top="890" left="498" width="341" height="16" font="2">ence on Acoustics, Speech, and Signal Processing , pp.</text>
<text top="908" left="498" width="149" height="16" font="2">1566-1569, Mars 2010 .</text>
<text top="926" left="473" width="366" height="16" font="2">[9] M. Closson, B. Blodget, J. Mason, B. Bridgford, and</text>
<text top="943" left="498" width="341" height="16" font="2">J. Young MPEG-4 Natural Video Codings,book ,April</text>
<text top="961" left="498" width="30" height="16" font="2">2002</text>
<text top="979" left="473" width="366" height="16" font="2">[10] MPEG Video TechnologiesPart 4: Video Tool Library,</text>
<text top="997" left="498" width="184" height="16" font="2">ISO/IEC FDIS 23002-4, 2009</text>
<text top="1015" left="473" width="366" height="16" font="2">[11] Jerome Gorin, Matthieu Wipliez Franoise Prteux ,</text>
<text top="1033" left="498" width="341" height="16" font="2">Mickael Raulet LLVM-based and scalable MPEG-RVC</text>
<text top="1051" left="498" width="338" height="16" font="2">decoder,Journal of Real Time Image Processing ,2010.</text>
<text top="1069" left="473" width="366" height="16" font="2">[12] Mattavelli, M., Amer, I., Raulet, M The reconﬁgurable</text>
<text top="735" left="29" width="0" height="17" font="3">hal-00661337, version 1 - 19 Jan 2012</text>
</page>
<page number="7" position="absolute" top="0" left="0" height="1188" width="918">
<text top="113" left="107" width="341" height="16" font="2">video coding, Signal Processing Magazine, IEEE 27(3),</text>
<text top="131" left="107" width="113" height="16" font="2">pp159 -167, 2010.</text>
<text top="149" left="82" width="366" height="16" font="2">[13] Ihab Amer, Christophe Lucarz, Ghislain Roquier,Marco</text>
<text top="167" left="107" width="341" height="16" font="2">Mattavelli, Mickal Raulet, Jean-Franois Nezan, and</text>
<text top="185" left="107" width="341" height="16" font="2">Olivier Dforges Reconﬁgurable Video Coding on Multi-</text>
<text top="203" left="107" width="286" height="16" font="2">core, IEEE Signal Processing magazine, 2009.</text>
<text top="221" left="82" width="366" height="16" font="2">[14] MPEG Systems TechnologiesPart 4: Codec Conﬁgura-</text>
<text top="239" left="107" width="311" height="16" font="2">tion Representation, ISO/IEC FDIS 23001-4, 2009</text>
<text top="257" left="82" width="366" height="16" font="2">[15] Julien Dubois, Richard Thavot ,Romuald Mosqueron</text>
<text top="275" left="107" width="341" height="16" font="2">,Johel Miteran and Christophe Lucarz Motion Estimation</text>
<text top="293" left="107" width="341" height="16" font="2">Accelerator with User Search Strategy in an RVC Con-</text>
<text top="310" left="107" width="341" height="16" font="2">text ,IEEE ICIP Journal of Real Time Image Processing</text>
<text top="328" left="107" width="37" height="16" font="2">,2009.</text>
<text top="346" left="82" width="366" height="16" font="2">[16] Khaled Jerbi, Matthieu Wipliez, Mickael Raulet,</text>
<text top="364" left="107" width="341" height="16" font="2">Olivier Dforges, Marie Babel and Mohamed Abid Au-</text>
<text top="382" left="107" width="341" height="16" font="2">tomatic Method For Efﬁcient Hardware Implementation</text>
<text top="400" left="107" width="341" height="16" font="2">From RVC-CAL Dataﬂow: A LAR Coder baseline Case</text>
<text top="418" left="107" width="229" height="16" font="2">Study,Journal of Convergence , 2010.</text>
<text top="436" left="82" width="366" height="16" font="2">[17] R. Gu, J. W. Janneck, S. S. Bhattacharyya, M. Raulet,</text>
<text top="454" left="107" width="341" height="16" font="2">M. Wipliez, and W. Plishker, Exploring the concurrency</text>
<text top="472" left="107" width="341" height="16" font="2">of an MPEG RVC decoder based on dataﬂow program</text>
<text top="490" left="107" width="341" height="16" font="2">analysis,IEEE Transactions on Circuits and Systems for</text>
<text top="508" left="107" width="341" height="16" font="2">Video Technology, vol. 19, no. 11, pp. 16461657, 2009.</text>
<text top="526" left="82" width="156" height="16" font="2">[18] Cal2HDL-openforge</text>
<text top="526" left="265" width="39" height="16" font="2">source</text>
<text top="526" left="331" width="57" height="16" font="2">Available</text>
<text top="526" left="414" width="33" height="16" font="2">from:</text>
<text top="544" left="107" width="341" height="16" font="2">http://openforge.sourceforge.net. [Accessed: December</text>
<text top="562" left="107" width="35" height="16" font="2">2010]</text>
<text top="579" left="82" width="366" height="16" font="2">[19] J. W. Janneck, M. Mattavelli, M. Raulet, and</text>
<text top="597" left="107" width="341" height="16" font="2">M. Wipliez, Reconﬁgurable video coding: a stream</text>
<text top="615" left="107" width="341" height="16" font="2">programming approach to the speciﬁcation of new video</text>
<text top="633" left="107" width="341" height="16" font="2">coding standards,in MMSys 10: Proceedings of the</text>
<text top="651" left="107" width="341" height="16" font="2">ﬁrst annual ACM SIGMM conference on Multimedia</text>
<text top="669" left="107" width="320" height="16" font="2">systems. New York, USA: ACM, pp. 223234, 2010.</text>
<text top="687" left="82" width="366" height="16" font="2">[20] S. Bhattacharyya, G. Brebner, J. Eker, J. Janneck,</text>
<text top="705" left="107" width="341" height="16" font="2">M. Mattavelli, C. von Platen, and M. Raulet, OpenDF -</text>
<text top="723" left="107" width="341" height="16" font="2">A Dataﬂow Toolset for Reconﬁgurable Hardware and</text>
<text top="741" left="107" width="341" height="16" font="2">Multicore Systems,First Swedish Workshop on Multi-</text>
<text top="759" left="107" width="341" height="16" font="2">Core Computing, MCC , Ronneby, Sweden, November</text>
<text top="777" left="107" width="77" height="16" font="2">27-28, 2008.</text>
<text top="795" left="82" width="366" height="16" font="2">[21] PlanAhead Software Tutorial Partial Reconﬁguration of</text>
<text top="813" left="107" width="316" height="16" font="2">a Processor Peripheral,UG744, 21 September 2010.</text>
<text top="831" left="82" width="366" height="16" font="2">[22] MicroBlaze Processor Reference Guide Embedded De-</text>
<text top="848" left="107" width="296" height="16" font="2">velopment Kit EDK 10.1i, UG081 (v9.0), 2008.</text>
<text top="735" left="29" width="0" height="17" font="3">hal-00661337, version 1 - 19 Jan 2012</text>
</page>
</pdf2xml>
