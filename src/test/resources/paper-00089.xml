<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE pdf2xml SYSTEM "pdf2xml.dtd">

<pdf2xml>
<page number="1" position="absolute" top="0" left="0" height="1020" width="722">
	<fontspec id="0" size="23" family="Times" color="#231f20"/>
	<fontspec id="1" size="21" family="Times" color="#231f20"/>
	<fontspec id="2" size="16" family="Times" color="#231f20"/>
	<fontspec id="3" size="14" family="Times" color="#231f20"/>
	<fontspec id="4" size="9" family="Times" color="#231f20"/>
	<fontspec id="5" size="12" family="Times" color="#231f20"/>
	<fontspec id="6" size="12" family="Times" color="#231f20"/>
	<fontspec id="7" size="11" family="Times" color="#231f20"/>
	<fontspec id="8" size="6" family="Times" color="#231f20"/>
	<fontspec id="9" size="25" family="Times" color="#231f20"/>
<text top="106" left="624" width="14" height="24" font="0"><b>0</b></text>
<text top="175" left="157" width="480" height="22" font="1"><b>Parallel Symbolic Analysis of Large Analog</b></text>
<text top="203" left="338" width="293" height="22" font="1"><b>Circuits on GPU Platforms</b></text>
<text top="202" left="638" width="7" height="19" font="2">*</text>
<text top="244" left="98" width="131" height="17" font="3">Sheldon X.-D. Tan</text>
<text top="241" left="229" width="6" height="12" font="4">1</text>
<text top="244" left="235" width="96" height="17" font="3">, Xue-Xin Liu</text>
<text top="241" left="332" width="6" height="12" font="4">1</text>
<text top="244" left="338" width="90" height="17" font="3">, Eric Mlinar</text>
<text top="241" left="428" width="6" height="12" font="4">1</text>
<text top="244" left="439" width="192" height="17" font="3">and Esteban Tlelo-Cuautle</text>
<text top="241" left="631" width="6" height="12" font="4">2</text>
<text top="260" left="119" width="6" height="12" font="4">1</text>
<text top="262" left="126" width="512" height="15" font="5"><i>Department of Electrical Engineering, University of California, Riverside, CA 92521</i></text>
<text top="282" left="417" width="6" height="12" font="4">2</text>
<text top="285" left="423" width="215" height="15" font="5"><i>Dapartment of Electronics, INAOE</i></text>
<text top="300" left="601" width="6" height="12" font="4">1</text>
<text top="303" left="607" width="31" height="15" font="5"><i>USA</i></text>
<text top="317" left="587" width="6" height="12" font="4">2</text>
<text top="320" left="593" width="44" height="15" font="5"><i>Mexico</i></text>
<text top="365" left="85" width="97" height="13" font="6"><b>1. Introduction</b></text>
<text top="391" left="85" width="553" height="14" font="7">Graph-based symbolic technique is a viable tool for calculating the behavior or the</text>
<text top="407" left="85" width="233" height="14" font="7">characterization of an analog circuit.</text>
<text top="407" left="334" width="303" height="14" font="7">Traditional symbolic analysis tools typically are</text>
<text top="424" left="85" width="553" height="14" font="7">used to calculate the behavior or the characteristic of a circuit in terms of symbolic</text>
<text top="440" left="85" width="553" height="14" font="7">parameters (Gielen et al., 1994). The introduction of determinant decision diagrams based</text>
<text top="457" left="85" width="553" height="14" font="7">symbolic analysis technique allows exact symbolic analysis of much larger analog circuits</text>
<text top="473" left="85" width="553" height="14" font="7">than any other existing approaches (Shi &amp; Tan, 2000; 2001). Furthermore, with hierarchical</text>
<text top="490" left="85" width="553" height="14" font="7">symbolic representations (Tan et al., 2005; Tan &amp; Shi, 2000), exact symbolic analysis via DDD</text>
<text top="506" left="85" width="462" height="14" font="7">graphs essentially allows the analysis of arbitrarily large analog circuits.</text>
<text top="506" left="562" width="76" height="14" font="7">Some recent</text>
<text top="522" left="85" width="553" height="14" font="7">advancement in DDD ordering technique and variants of DDD allow even larger analog</text>
<text top="539" left="85" width="235" height="14" font="7">circuits to be analyzed (Shi, 2010a;b).</text>
<text top="539" left="334" width="304" height="14" font="7">Once the circuit’s small-signal characteristics are</text>
<text top="555" left="85" width="553" height="14" font="7">presented by DDDs, the evaluation of DDDs, whose CPU time is proportional to the sizes</text>
<text top="572" left="85" width="553" height="14" font="7">of DDDs, will give exact numerical values. However, with large networks, the DDD size can</text>
<text top="588" left="85" width="392" height="14" font="7">be huge and the resulting evaluation can be very time consuming.</text>
<text top="614" left="85" width="553" height="14" font="7">Modern computer architecture has shifted towards designs that employ multiple processor</text>
<text top="630" left="85" width="553" height="14" font="7">cores on a chip, so called multi-core processors or chip-multiprocessors (CMP) (AMD Inc.,</text>
<text top="646" left="85" width="553" height="14" font="7">2006; Intel Corporation, 2006). The graphic processing unit (GPU) is one of the most powerful</text>
<text top="663" left="85" width="553" height="14" font="7">many-core computing systems in mass-market use (AMD Inc., 2011a; NVIDIA Corporation,</text>
<text top="679" left="85" width="553" height="14" font="7">2011a). For instance, NVIDIA Telsa T10 chip has a peak performance of over 1 TFLOPS</text>
<text top="696" left="85" width="553" height="14" font="7">versus about 80–100 GFLOPS of Intel i5 series Quad-core CPUs (Kirk &amp; Hwu, 2010). In</text>
<text top="712" left="85" width="553" height="14" font="7">addition to the primary use of GPUs in accelerating graphics rendering operations, there has</text>
<text top="729" left="85" width="553" height="14" font="7">been considerable interest in exploiting GPUs for general purpose computation (Göddeke,</text>
<text top="745" left="85" width="35" height="14" font="7">2011).</text>
<text top="745" left="137" width="501" height="14" font="7">The introduction of new parallel programming interfaces for general purpose</text>
<text top="762" left="85" width="553" height="14" font="7">computations, such as Computer Uniﬁed Device Architecture (CUDA) (NVIDIA Corporation,</text>
<text top="778" left="85" width="553" height="14" font="7">2011b), Stream SDK (AMD Inc., 2011b) and OpenCL (Khronos Group, 2011), has made</text>
<text top="794" left="85" width="553" height="14" font="7">GPUs a powerful and attractive choice for developing high-performance numerical, scientiﬁc</text>
<text top="811" left="85" width="341" height="14" font="7">computation and solving practical engineering problems.</text>
<text top="870" left="84" width="3" height="9" font="8">*</text>
<text top="870" left="89" width="549" height="12" font="4">This work is funded in part by NSF grants NSF OISE-0929699, OISE-1130402, CCF-1017090 and part by</text>
<text top="884" left="85" width="354" height="12" font="4">CN-11-575 UC MEXUS-CONACYT Collaborative Research Grants.</text>
<text top="106" left="623" width="15" height="31" font="9"><b>6</b></text>
</page>
<page number="2" position="absolute" top="0" left="0" height="1020" width="722">
	<fontspec id="10" size="5" family="Times" color="#231f20"/>
	<fontspec id="11" size="11" family="Times" color="#231f20"/>
	<fontspec id="12" size="12" family="Times" color="#231f20"/>
	<fontspec id="13" size="8" family="Times" color="#231f20"/>
	<fontspec id="14" size="11" family="Times" color="#231f20"/>
	<fontspec id="15" size="10" family="Times" color="#231f20"/>
<text top="81" left="85" width="4" height="7" font="10">2</text>
<text top="81" left="598" width="40" height="7" font="10">VLSI Design</text>
<text top="111" left="85" width="553" height="14" font="7">In this chapter, we present an efﬁcient parallel DDD evaluation technique based on general</text>
<text top="128" left="85" width="553" height="14" font="7">purpose GPU (GPGPU) computing platform to explore the parallelism of DDD structures. We</text>
<text top="144" left="85" width="553" height="14" font="7">present a new data structures to present the DDD graphs in the GPUs for massively threaded</text>
<text top="161" left="85" width="553" height="14" font="7">parallel computing of the numerical values of DDD graphs. The new method explores data</text>
<text top="177" left="85" width="553" height="14" font="7">parallelism in the DDD numerical evaluation process where DDD graphs are traversed in a</text>
<text top="194" left="85" width="553" height="14" font="7">depth-ﬁrst fashion. Numerical results show that the new evaluation algorithm can achieve</text>
<text top="210" left="85" width="553" height="14" font="7">about one to two orders of magnitude speedup over the serial CPU based evaluations of</text>
<text top="226" left="85" width="553" height="14" font="7">some analog circuits. The presented parallel techniques can be used for the parallelization</text>
<text top="243" left="85" width="553" height="14" font="7">of many decision diagrams based applications such as logic synthesis, optimization, and</text>
<text top="259" left="85" width="553" height="14" font="7">formal veriﬁcation, all of which are based on binary decision diagrams (BDDs) and its</text>
<text top="276" left="85" width="221" height="14" font="7">variants (Bryant, 1995; Minato, 1996).</text>
<text top="301" left="85" width="235" height="14" font="7">This chapter is organized as follows.</text>
<text top="301" left="335" width="303" height="14" font="7">Section 2 reviews DDD-based symbolic analysis</text>
<text top="318" left="85" width="553" height="14" font="7">techniques. Section 3 brieﬂy review the GPU architectures and CUDA computing. Section 4</text>
<text top="334" left="85" width="553" height="14" font="7">introduces the new parallel algorithm, and then the results are demonstrated in Section 5.</text>
<text top="350" left="85" width="246" height="14" font="7">Lastly, Section 6 summarizes this chapter.</text>
<text top="387" left="85" width="289" height="13" font="6"><b>2. DDDs and DDD-based symbolic analysis</b></text>
<text top="413" left="85" width="553" height="14" font="7">Before we introduce our GPU-base parallel analysis method, we ﬁrst provide a brief overview</text>
<text top="429" left="85" width="427" height="14" font="7">of determinant decision diagram (DDD) Shi &amp; Tan (2000) in this section.</text>
<text top="455" left="85" width="553" height="14" font="7">Determinant decision diagrams (DDDs) was introduced to represent determinants</text>
<text top="471" left="85" width="553" height="14" font="7">symbolically Shi &amp; Tan (2000). A DDD is essentially a zero-suppressed Binary Decision</text>
<text top="487" left="85" width="553" height="14" font="7">Diagrams (ZBDDs) — introduced originally for representing sparse subset systems Minato</text>
<text top="504" left="85" width="553" height="14" font="7">(1993). A ZBDD is a variant of a Binary Decision Diagram (BDD) introduced by Akers Akers</text>
<text top="520" left="85" width="307" height="14" font="7">(1976) and popularized by Bryant Bryant (1986).</text>
<text top="520" left="407" width="231" height="14" font="7">BDDs have brought great success to</text>
<text top="537" left="85" width="553" height="14" font="7">formal veriﬁcation and testing for combinational and sequential digital circuits Bryant</text>
<text top="553" left="85" width="553" height="14" font="7">(1986); Hachtel &amp; Somenzi (1996). DDD representation has several advantages over both the</text>
<text top="570" left="85" width="382" height="14" font="7">expanded and arbitrarily nested forms of a symbolic expression.</text>
<text top="595" left="85" width="553" height="14" font="7">• First, similar to the nested form, DDD representation is compact for a large class of analog</text>
<text top="611" left="104" width="533" height="14" font="7">circuits. A ladder-structured network can be represented by a diagram where the number</text>
<text top="628" left="104" width="533" height="14" font="7">of vertices in the diagram (called its <i>size</i>) is equal to the number of symbolic parameters.</text>
<text top="644" left="104" width="533" height="14" font="7">As indicated by Shi &amp; Tan (2000), the typical size of DDD is dramatically smaller than that</text>
<text top="661" left="104" width="210" height="14" font="7">of product terms. For instance, 5.71</text>
<text top="657" left="314" width="11" height="18" font="12">×</text>
<text top="661" left="325" width="13" height="14" font="7">10</text>
<text top="658" left="339" width="10" height="11" font="13">20</text>
<text top="661" left="353" width="284" height="14" font="7">terms can be represented by a diagram with 398</text>
<text top="677" left="104" width="49" height="14" font="7">vertices.</text>
<text top="697" left="85" width="553" height="14" font="7">• Second, similar to the expanded form, DDD representation is canonical, i.e., every</text>
<text top="713" left="104" width="533" height="14" font="7">determinant has a <i>unique </i>representation, and is amenable to symbolic manipulations.</text>
<text top="729" left="104" width="533" height="14" font="7">This property of canonical representation for matrix determinants is similar to BDD for</text>
<text top="746" left="104" width="420" height="14" font="7">representing <i>binary functions </i>and ZBDD for representing <i>subset systems</i>.</text>
<text top="771" left="85" width="553" height="14" font="7">A key observation is that the circuit matrix is sparse and that for many times, a</text>
<text top="788" left="85" width="553" height="14" font="7">symbolic expression may share many sub-expressions. For example, consider the following</text>
<text top="804" left="85" width="73" height="14" font="7">determinant</text>
<text top="842" left="200" width="19" height="14" font="7">det</text>
<text top="839" left="219" width="5" height="18" font="12">(</text>
<text top="842" left="225" width="13" height="13" font="14"><b>M</b></text>
<text top="839" left="239" width="20" height="18" font="12">) =</text>
<text top="817" left="268" width="42" height="14" font="11"><i>a b </i>0 0</text>
<text top="834" left="268" width="41" height="14" font="11"><i>c d e </i>0</text>
<text top="850" left="268" width="42" height="14" font="7">0 <i>f g h</i></text>
<text top="867" left="268" width="41" height="14" font="7">0 0 <i>i j</i></text>
<text top="839" left="319" width="11" height="18" font="12">=</text>
<text top="842" left="334" width="25" height="14" font="11"><i>adgj</i></text>
<text top="839" left="362" width="11" height="18" font="12">−</text>
<text top="842" left="376" width="24" height="14" font="11"><i>adhi</i></text>
<text top="839" left="403" width="11" height="18" font="12">−</text>
<text top="842" left="417" width="24" height="14" font="11"><i>ae f j</i></text>
<text top="839" left="444" width="11" height="18" font="12">−</text>
<text top="842" left="458" width="24" height="14" font="11"><i>bcgj</i></text>
<text top="839" left="484" width="11" height="18" font="12">+</text>
<text top="842" left="498" width="27" height="14" font="11"><i>cbih</i>.</text>
<text top="842" left="622" width="16" height="14" font="7">(1)</text>
<text top="71" left="85" width="23" height="20" font="7">114</text>
<text top="73" left="576" width="67" height="17" font="15">VLSI Design</text>
</page>
<page number="3" position="absolute" top="0" left="0" height="1020" width="722">
	<fontspec id="16" size="12" family="Times" color="#000000"/>
	<fontspec id="17" size="10" family="Times" color="#000000"/>
	<fontspec id="18" size="9" family="Times" color="#000000"/>
<text top="81" left="85" width="225" height="7" font="10">Parallel Symbolic Analysis of Large Analog Circuits on GPU Platforms 1</text>
<text top="81" left="634" width="4" height="7" font="10">3</text>
<text top="288" left="290" width="4" height="13" font="16"><b>i</b></text>
<text top="423" left="213" width="6" height="12" font="17"><b>1</b></text>
<text top="423" left="387" width="6" height="12" font="17"><b>0</b></text>
<text top="118" left="351" width="7" height="13" font="16"><b>a</b></text>
<text top="171" left="391" width="6" height="13" font="16"><b>c</b></text>
<text top="232" left="415" width="8" height="13" font="16"><b>b</b></text>
<text top="232" left="330" width="5" height="13" font="16"><b>f</b></text>
<text top="228" left="258" width="7" height="13" font="16"><b>g</b></text>
<text top="288" left="217" width="5" height="13" font="16"><b>j</b></text>
<text top="284" left="359" width="6" height="13" font="16"><b>e</b></text>
<text top="171" left="302" width="8" height="13" font="16"><b>d</b></text>
<text top="108" left="492" width="31" height="10" font="18"><b>1 edge</b></text>
<text top="133" left="492" width="31" height="10" font="18"><b>0 edge</b></text>
<text top="353" left="290" width="8" height="13" font="16"><b>h</b></text>
<text top="456" left="85" width="170" height="14" font="7">Fig. 1. A ZBDD representing</text>
<text top="453" left="258" width="7" height="18" font="12">{</text>
<text top="456" left="266" width="144" height="14" font="11"><i>adgi</i>, <i>adhi</i>, <i>a f ej</i>, <i>cbgj</i>, <i>cbih</i></text>
<text top="453" left="410" width="7" height="18" font="12">}</text>
<text top="456" left="420" width="91" height="14" font="7">under ordering</text>
<text top="473" left="85" width="6" height="14" font="11"><i>a</i></text>
<text top="469" left="95" width="11" height="18" font="12">&gt;</text>
<text top="473" left="111" width="5" height="14" font="11"><i>c</i></text>
<text top="469" left="120" width="11" height="18" font="12">&gt;</text>
<text top="473" left="135" width="6" height="14" font="11"><i>b</i></text>
<text top="469" left="145" width="11" height="18" font="12">&gt;</text>
<text top="473" left="160" width="7" height="14" font="11"><i>d</i></text>
<text top="469" left="171" width="11" height="18" font="12">&gt;</text>
<text top="473" left="188" width="4" height="14" font="11"><i>f</i></text>
<text top="469" left="197" width="11" height="18" font="12">&gt;</text>
<text top="473" left="212" width="5" height="14" font="11"><i>e</i></text>
<text top="469" left="222" width="11" height="18" font="12">&gt;</text>
<text top="473" left="237" width="7" height="14" font="11"><i>g</i></text>
<text top="469" left="248" width="11" height="18" font="12">&gt;</text>
<text top="473" left="262" width="4" height="14" font="11"><i>i</i></text>
<text top="469" left="271" width="11" height="18" font="12">&gt;</text>
<text top="473" left="286" width="7" height="14" font="11"><i>h</i></text>
<text top="469" left="296" width="11" height="18" font="12">&gt;</text>
<text top="473" left="312" width="4" height="14" font="11"><i>j</i></text>
<text top="502" left="85" width="553" height="14" font="7">Note that sub-terms <i>ad</i>, <i>gj</i>, and <i>hi </i>appear in several product terms, and each product</text>
<text top="518" left="85" width="553" height="14" font="7">term involves a subset (four) out of ten symbolic parameters. Therefore, we view each</text>
<text top="534" left="85" width="553" height="14" font="7">symbolic product term as a subset, and use a ZBDD to represent the subset system</text>
<text top="551" left="85" width="434" height="14" font="7">composed of all the subsets each corresponding to a product term.</text>
<text top="551" left="536" width="102" height="14" font="7">Fig. 1 illustrates</text>
<text top="567" left="85" width="429" height="14" font="7">the corresponding ZBDD representing all the subsets involved in det</text>
<text top="564" left="514" width="5" height="18" font="12">(</text>
<text top="567" left="520" width="13" height="13" font="14"><b>M</b></text>
<text top="564" left="533" width="5" height="18" font="12">)</text>
<text top="567" left="545" width="93" height="14" font="7">under ordering</text>
<text top="584" left="85" width="6" height="14" font="11"><i>a</i></text>
<text top="580" left="95" width="11" height="18" font="12">&gt;</text>
<text top="584" left="111" width="5" height="14" font="11"><i>c</i></text>
<text top="580" left="120" width="11" height="18" font="12">&gt;</text>
<text top="584" left="135" width="6" height="14" font="11"><i>b</i></text>
<text top="580" left="145" width="11" height="18" font="12">&gt;</text>
<text top="584" left="160" width="7" height="14" font="11"><i>d</i></text>
<text top="580" left="171" width="11" height="18" font="12">&gt;</text>
<text top="584" left="188" width="4" height="14" font="11"><i>f</i></text>
<text top="580" left="197" width="11" height="18" font="12">&gt;</text>
<text top="584" left="212" width="5" height="14" font="11"><i>e</i></text>
<text top="580" left="222" width="11" height="18" font="12">&gt;</text>
<text top="584" left="237" width="7" height="14" font="11"><i>g</i></text>
<text top="580" left="248" width="11" height="18" font="12">&gt;</text>
<text top="584" left="262" width="4" height="14" font="11"><i>i</i></text>
<text top="580" left="271" width="11" height="18" font="12">&gt;</text>
<text top="584" left="286" width="7" height="14" font="11"><i>h</i></text>
<text top="580" left="296" width="11" height="18" font="12">&gt;</text>
<text top="584" left="312" width="326" height="14" font="11"><i>j</i>. It can be seen that sub-terms <i>ad</i>, <i>gj</i>, and <i>ih </i>have been</text>
<text top="600" left="85" width="211" height="14" font="7">shared in the ZBDD representation.</text>
<text top="626" left="85" width="553" height="14" font="7">Following directly from the properties of ZBDDs, we have the following observations. First,</text>
<text top="642" left="85" width="553" height="14" font="7">given a ﬁxed order of symbolic parameters, all the subsets in a symbolic determinant can be</text>
<text top="658" left="85" width="553" height="14" font="7">represented uniquely by a ZBDD. Second, every 1-path in the ZBDD corresponds to a product</text>
<text top="675" left="85" width="553" height="14" font="7">term, and the number of 1-edges in any 1-path is <i>n</i>. The total number of 1-paths is equal to</text>
<text top="691" left="85" width="334" height="14" font="7">the number of product terms in a symbolic determinant.</text>
<text top="717" left="85" width="553" height="14" font="7">We can view the resulting ZBDD as a graphical representation of the recursive application</text>
<text top="733" left="85" width="553" height="14" font="7">of the determinant expansion with the expansion order <i>a</i>, <i>c</i>, <i>b</i>, <i>d</i>, <i>f </i>, <i>e</i>, <i>g</i>, <i>i</i>, <i>h</i>, <i>j</i>. Each vertex</text>
<text top="750" left="85" width="553" height="14" font="7">is labeled with the matrix entry with respect to which the determinant is expanded, and</text>
<text top="766" left="85" width="553" height="14" font="7">it represents all the subsets contained in the corresponding sub-matrix determinant. The</text>
<text top="782" left="85" width="553" height="14" font="7">1-edge points to the vertex representing all the subsets contained in the cofactor of the current</text>
<text top="799" left="85" width="553" height="14" font="7">expansion, and 0-edge points to the vertex representing all the subsets contained in the</text>
<text top="815" left="85" width="64" height="14" font="7">remainder.</text>
<text top="841" left="85" width="553" height="14" font="7">To embed the signs of the product terms of a symbolic determinant into its corresponding</text>
<text top="857" left="85" width="281" height="14" font="7">ZBDD, we associate each vertex <i>v </i>with a sign, <i>s</i></text>
<text top="854" left="366" width="5" height="18" font="12">(</text>
<text top="857" left="372" width="7" height="14" font="11"><i>v</i></text>
<text top="854" left="379" width="5" height="18" font="12">)</text>
<text top="857" left="385" width="119" height="14" font="7">, deﬁned as follows:</text>
<text top="71" left="617" width="23" height="20" font="7">115</text>
<text top="73" left="85" width="371" height="17" font="15">Parallel Symbolic Analysis of Large Analog Circuits on GPU Platforms</text>
</page>
<page number="4" position="absolute" top="0" left="0" height="1020" width="722">
	<fontspec id="19" size="8" family="Times" color="#231f20"/>
<text top="81" left="85" width="4" height="7" font="10">4</text>
<text top="81" left="598" width="40" height="7" font="10">VLSI Design</text>
<text top="464" left="85" width="419" height="14" font="7">Fig. 2. A signed ZBDD for representing symbolic terms from matrix <b>M</b></text>
<text top="493" left="85" width="51" height="14" font="7">• Let <i>P</i></text>
<text top="490" left="137" width="5" height="18" font="12">(</text>
<text top="493" left="142" width="7" height="14" font="11"><i>v</i></text>
<text top="490" left="149" width="5" height="18" font="12">)</text>
<text top="493" left="159" width="479" height="14" font="7">be the set of ZBDD vertices that originate the 1-edges in any 1-path rooted at <i>v</i>.</text>
<text top="509" left="104" width="30" height="14" font="7">Then</text>
<text top="526" left="226" width="5" height="14" font="11"><i>s</i></text>
<text top="523" left="232" width="5" height="18" font="12">(</text>
<text top="526" left="238" width="7" height="14" font="11"><i>v</i></text>
<text top="523" left="245" width="20" height="18" font="12">) =</text>
<text top="521" left="278" width="17" height="24" font="2">∏</text>
<text top="544" left="269" width="5" height="11" font="19"><i>x</i></text>
<text top="541" left="275" width="29" height="14" font="13">∈<i>P</i>(<i>v</i>)</text>
<text top="526" left="306" width="25" height="14" font="7">sign</text>
<text top="523" left="331" width="5" height="18" font="12">(</text>
<text top="526" left="336" width="5" height="14" font="11"><i>r</i></text>
<text top="523" left="342" width="5" height="18" font="12">(</text>
<text top="526" left="348" width="7" height="14" font="11"><i>x</i></text>
<text top="523" left="355" width="19" height="18" font="12">) −</text>
<text top="526" left="377" width="5" height="14" font="11"><i>r</i></text>
<text top="523" left="383" width="5" height="18" font="12">(</text>
<text top="526" left="389" width="7" height="14" font="11"><i>v</i></text>
<text top="523" left="396" width="11" height="18" font="12">))</text>
<text top="526" left="411" width="25" height="14" font="7">sign</text>
<text top="523" left="436" width="5" height="18" font="12">(</text>
<text top="526" left="442" width="5" height="14" font="11"><i>c</i></text>
<text top="523" left="447" width="5" height="18" font="12">(</text>
<text top="526" left="453" width="7" height="14" font="11"><i>x</i></text>
<text top="523" left="460" width="20" height="18" font="12">) −</text>
<text top="526" left="483" width="5" height="14" font="11"><i>c</i></text>
<text top="523" left="489" width="5" height="18" font="12">(</text>
<text top="526" left="494" width="7" height="14" font="11"><i>v</i></text>
<text top="523" left="502" width="11" height="18" font="12">))</text>
<text top="526" left="513" width="3" height="14" font="7">,</text>
<text top="526" left="622" width="16" height="14" font="7">(2)</text>
<text top="563" left="104" width="45" height="14" font="7">where <i>r</i></text>
<text top="560" left="150" width="5" height="18" font="12">(</text>
<text top="563" left="156" width="7" height="14" font="11"><i>x</i></text>
<text top="560" left="163" width="5" height="18" font="12">)</text>
<text top="563" left="172" width="31" height="14" font="7">and <i>c</i></text>
<text top="560" left="203" width="5" height="18" font="12">(</text>
<text top="563" left="209" width="7" height="14" font="11"><i>x</i></text>
<text top="560" left="217" width="5" height="18" font="12">)</text>
<text top="563" left="225" width="413" height="14" font="7">refer to the absolute row and column indices of vertex <i>x </i>in the original</text>
<text top="580" left="104" width="199" height="14" font="7">matrix, and <i>u </i>is an integer so that</text>
<text top="617" left="293" width="25" height="14" font="7">sign</text>
<text top="614" left="318" width="5" height="18" font="12">(</text>
<text top="617" left="323" width="7" height="14" font="11"><i>u</i></text>
<text top="614" left="331" width="48" height="18" font="12">) = +</text>
<text top="609" left="379" width="37" height="14" font="7">1, if <i>u</i></text>
<text top="606" left="421" width="11" height="18" font="12">&gt;</text>
<text top="609" left="436" width="10" height="14" font="7">0,</text>
<text top="622" left="368" width="11" height="18" font="12">−</text>
<text top="626" left="379" width="37" height="14" font="7">1, if <i>u</i></text>
<text top="622" left="421" width="11" height="18" font="12">&lt;</text>
<text top="626" left="436" width="10" height="14" font="7">0.</text>
<text top="658" left="85" width="351" height="14" font="7">• If <i>v </i>has an edge pointing to the 1-terminal vertex, then <i>s</i></text>
<text top="654" left="436" width="5" height="18" font="12">(</text>
<text top="658" left="442" width="7" height="14" font="11"><i>v</i></text>
<text top="654" left="449" width="36" height="18" font="12">) = +</text>
<text top="658" left="485" width="10" height="14" font="7">1.</text>
<text top="683" left="85" width="553" height="14" font="7">This is called the <i>sign rule</i>. For example, in Fig. 2, shown beside each vertex are the row and</text>
<text top="700" left="85" width="553" height="14" font="7">column indices of that vertex in the original matrix, as well as the sign of that vertex obtained</text>
<text top="716" left="85" width="430" height="14" font="7">by using the sign rule above. For the sign rule, we have following result:</text>
<text top="741" left="85" width="69" height="13" font="14"><b>Theorem 1.</b></text>
<text top="741" left="162" width="166" height="14" font="11"><i>The sign of a DDD vertex v, s</i></text>
<text top="738" left="328" width="5" height="18" font="12">(</text>
<text top="741" left="334" width="7" height="14" font="11"><i>v</i></text>
<text top="738" left="341" width="5" height="18" font="12">)</text>
<text top="741" left="346" width="292" height="14" font="11"><i>, is uniquely determined by (2), and the product of all</i></text>
<text top="758" left="85" width="390" height="14" font="11"><i>the signs in a path is exactly the sign of the corresponding product term.</i></text>
<text top="792" left="85" width="553" height="14" font="7">For example, consider the 1-path <i>acbgih </i>in Fig. 2. The vertices that originate all the 1-edges are</text>
<text top="808" left="85" width="221" height="14" font="11"><i>c</i>, <i>b</i>, <i>i</i>, <i>h</i>, their corresponding signs are</text>
<text top="805" left="309" width="11" height="18" font="12">−</text>
<text top="808" left="320" width="3" height="14" font="7">,</text>
<text top="805" left="327" width="11" height="18" font="12">+</text>
<text top="808" left="338" width="3" height="14" font="7">,</text>
<text top="805" left="345" width="11" height="18" font="12">−</text>
<text top="808" left="360" width="23" height="14" font="7">and</text>
<text top="805" left="386" width="11" height="18" font="12">+</text>
<text top="808" left="397" width="180" height="14" font="7">, respectively. Their product is</text>
<text top="805" left="580" width="11" height="18" font="12">+</text>
<text top="808" left="591" width="46" height="14" font="7">. This is</text>
<text top="825" left="85" width="253" height="14" font="7">the sign of the symbolic product term <i>cbih</i>.</text>
<text top="850" left="85" width="553" height="14" font="7">With ZBDD and the sign rule as two foundations, we are now ready to introduce formally</text>
<text top="867" left="85" width="364" height="14" font="7">our representation of a symbolic determinant. Let <b>A </b>be an <i>n</i></text>
<text top="863" left="452" width="11" height="18" font="12">×</text>
<text top="867" left="466" width="172" height="14" font="11"><i>n </i>sparse matrix with a set of</text>
<text top="883" left="85" width="188" height="14" font="7">distinct <i>m </i>symbolic parameters</text>
<text top="880" left="277" width="7" height="18" font="12">{</text>
<text top="883" left="284" width="6" height="14" font="11"><i>a</i></text>
<text top="888" left="291" width="5" height="11" font="13">1</text>
<text top="883" left="296" width="28" height="14" font="7">, ..., <i>a</i></text>
<text top="887" left="325" width="8" height="11" font="19"><i>m</i></text>
<text top="880" left="334" width="7" height="18" font="12">}</text>
<text top="883" left="341" width="55" height="14" font="7">, where 1</text>
<text top="880" left="401" width="11" height="18" font="12">≤</text>
<text top="883" left="417" width="10" height="14" font="11"><i>m</i></text>
<text top="880" left="433" width="11" height="18" font="12">≤</text>
<text top="883" left="449" width="7" height="14" font="11"><i>n</i></text>
<text top="880" left="457" width="5" height="11" font="13">2</text>
<text top="883" left="462" width="171" height="14" font="7">. Each symbolic parameter <i>a</i></text>
<text top="888" left="634" width="3" height="11" font="19"><i>i</i></text>
<text top="71" left="85" width="23" height="20" font="7">116</text>
<text top="73" left="576" width="67" height="17" font="15">VLSI Design</text>
</page>
<page number="5" position="absolute" top="0" left="0" height="1020" width="722">
	<fontspec id="20" size="10" family="Times" color="#000000"/>
	<fontspec id="21" size="7" family="Times" color="#000000"/>
	<fontspec id="22" size="7" family="Times" color="#000000"/>
	<fontspec id="23" size="5" family="Times" color="#231f20"/>
<text top="81" left="85" width="225" height="7" font="10">Parallel Symbolic Analysis of Large Analog Circuits on GPU Platforms 2</text>
<text top="81" left="634" width="4" height="7" font="10">5</text>
<text top="423" left="218" width="6" height="12" font="17"><b>1</b></text>
<text top="423" left="392" width="6" height="12" font="17"><b>0</b></text>
<text top="118" left="356" width="7" height="13" font="16"><b>a</b></text>
<text top="171" left="396" width="6" height="13" font="16"><b>c</b></text>
<text top="232" left="420" width="8" height="13" font="16"><b>b</b></text>
<text top="232" left="335" width="5" height="13" font="16"><b>f</b></text>
<text top="228" left="262" width="7" height="13" font="16"><b>g</b></text>
<text top="288" left="222" width="5" height="13" font="16"><b>j</b></text>
<text top="284" left="364" width="6" height="13" font="16"><b>e</b></text>
<text top="171" left="307" width="8" height="13" font="16"><b>d</b></text>
<text top="172" left="218" width="66" height="12" font="20">d(gj-hi)-f(ej)</text>
<text top="164" left="428" width="58" height="12" font="20">-c(b(gj-hi)]</text>
<text top="111" left="194" width="139" height="12" font="20">a[d(gj-hi)-f(ej)]-c[b(gj-hi)]</text>
<text top="229" left="218" width="24" height="12" font="20">gj-hi</text>
<text top="229" left="291" width="27" height="12" font="20">-f(ej)</text>
<text top="229" left="364" width="40" height="12" font="20">b(gj-hi)</text>
<text top="289" left="335" width="9" height="12" font="20">je</text>
<text top="289" left="258" width="14" height="12" font="20">-hi</text>
<text top="285" left="194" width="4" height="12" font="20">j</text>
<text top="108" left="497" width="31" height="10" font="18"><b>1 edge</b></text>
<text top="133" left="497" width="31" height="10" font="18"><b>0 edge</b></text>
<text top="174" left="388" width="3" height="9" font="21">-</text>
<text top="231" left="327" width="3" height="9" font="22"><b>-</b></text>
<text top="292" left="287" width="3" height="9" font="22"><b>-</b></text>
<text top="353" left="295" width="8" height="13" font="16"><b>h</b></text>
<text top="288" left="295" width="4" height="13" font="16"><b>i</b></text>
<text top="353" left="270" width="8" height="13" font="16"><b>h</b></text>
<text top="456" left="85" width="402" height="14" font="7">Fig. 3. A determinant decision diagram representation for matrix <b>M</b></text>
<text top="485" left="85" width="195" height="14" font="7">is associated with a unique pair <i>r</i></text>
<text top="482" left="281" width="5" height="18" font="12">(</text>
<text top="485" left="287" width="6" height="14" font="11"><i>a</i></text>
<text top="490" left="293" width="3" height="11" font="19"><i>i</i></text>
<text top="482" left="297" width="5" height="18" font="12">)</text>
<text top="485" left="306" width="32" height="14" font="7">and <i>c</i></text>
<text top="482" left="338" width="5" height="18" font="12">(</text>
<text top="485" left="344" width="6" height="14" font="11"><i>a</i></text>
<text top="490" left="350" width="3" height="11" font="19"><i>i</i></text>
<text top="482" left="354" width="5" height="18" font="12">)</text>
<text top="485" left="359" width="278" height="14" font="7">, which denote, respectively, the row index and</text>
<text top="502" left="85" width="109" height="14" font="7">column index of <i>a</i></text>
<text top="507" left="194" width="3" height="11" font="19"><i>i</i></text>
<text top="502" left="198" width="440" height="14" font="7">. A <i>determinant decision diagram </i>is a signed, rooted, directed acyclic graph</text>
<text top="518" left="85" width="553" height="14" font="7">with two terminal vertices, namely the 0-terminal vertex and the 1-terminal vertex. Each</text>
<text top="534" left="85" width="131" height="14" font="7">non-terminal vertex <i>a</i></text>
<text top="539" left="216" width="3" height="11" font="19"><i>i</i></text>
<text top="534" left="225" width="162" height="14" font="7">is associated with a sign, <i>s</i></text>
<text top="531" left="387" width="5" height="18" font="12">(</text>
<text top="534" left="393" width="6" height="14" font="11"><i>a</i></text>
<text top="539" left="400" width="3" height="11" font="19"><i>i</i></text>
<text top="531" left="404" width="5" height="18" font="12">)</text>
<text top="534" left="409" width="229" height="14" font="7">, determined by the sign rule deﬁned</text>
<text top="551" left="85" width="544" height="14" font="7">by (2). It has two outgoing edges, called 1-edge and 0-edge, pointing, respectively, to <i>D</i></text>
<text top="555" left="629" width="5" height="11" font="19"><i>a</i></text>
<text top="559" left="634" width="2" height="8" font="23"><i>i</i></text>
<text top="567" left="85" width="37" height="14" font="7">and <i>D</i></text>
<text top="572" left="122" width="5" height="11" font="19"><i>a</i></text>
<text top="576" left="127" width="2" height="8" font="23"><i>i</i></text>
<text top="567" left="131" width="309" height="14" font="7">. A determinant decision graph having root vertex <i>a</i></text>
<text top="572" left="440" width="3" height="11" font="19"><i>i</i></text>
<text top="567" left="448" width="190" height="14" font="7">denotes a matrix determinant <i>D</i></text>
<text top="584" left="85" width="130" height="14" font="7">deﬁned recursively as</text>
<text top="609" left="85" width="38" height="14" font="7">• If <i>a</i></text>
<text top="614" left="124" width="3" height="11" font="19"><i>i</i></text>
<text top="609" left="131" width="184" height="14" font="7">is the 1-terminal vertex, then <i>D</i></text>
<text top="606" left="319" width="11" height="18" font="12">=</text>
<text top="609" left="334" width="10" height="14" font="7">1.</text>
<text top="629" left="85" width="38" height="14" font="7">• If <i>a</i></text>
<text top="633" left="124" width="3" height="11" font="19"><i>i</i></text>
<text top="629" left="131" width="184" height="14" font="7">is the 0-terminal vertex, then <i>D</i></text>
<text top="625" left="319" width="11" height="18" font="12">=</text>
<text top="629" left="334" width="10" height="14" font="7">0.</text>
<text top="648" left="85" width="38" height="14" font="7">• If <i>a</i></text>
<text top="653" left="124" width="3" height="11" font="19"><i>i</i></text>
<text top="648" left="131" width="174" height="14" font="7">is a non-terminal vertex, then</text>
<text top="677" left="310" width="10" height="14" font="11"><i>D</i></text>
<text top="674" left="324" width="11" height="18" font="12">=</text>
<text top="677" left="340" width="6" height="14" font="11"><i>a</i></text>
<text top="682" left="346" width="3" height="11" font="19"><i>i</i></text>
<text top="677" left="350" width="5" height="14" font="11"><i>s</i></text>
<text top="674" left="355" width="5" height="18" font="12">(</text>
<text top="677" left="361" width="6" height="14" font="11"><i>a</i></text>
<text top="682" left="368" width="3" height="11" font="19"><i>i</i></text>
<text top="674" left="372" width="5" height="18" font="12">)</text>
<text top="677" left="377" width="10" height="14" font="11"><i>D</i></text>
<text top="681" left="388" width="5" height="11" font="19"><i>a</i></text>
<text top="685" left="393" width="2" height="8" font="23"><i>i</i></text>
<text top="674" left="400" width="11" height="18" font="12">+</text>
<text top="677" left="414" width="10" height="14" font="11"><i>D</i></text>
<text top="682" left="424" width="5" height="11" font="19"><i>a</i></text>
<text top="686" left="430" width="2" height="8" font="23"><i>i</i></text>
<text top="677" left="622" width="16" height="14" font="7">(3)</text>
<text top="709" left="85" width="40" height="14" font="7">Here <i>s</i></text>
<text top="706" left="125" width="5" height="18" font="12">(</text>
<text top="709" left="131" width="6" height="14" font="11"><i>a</i></text>
<text top="714" left="138" width="3" height="11" font="19"><i>i</i></text>
<text top="706" left="142" width="5" height="18" font="12">)</text>
<text top="709" left="147" width="10" height="14" font="11"><i>D</i></text>
<text top="713" left="158" width="5" height="11" font="19"><i>a</i></text>
<text top="717" left="163" width="2" height="8" font="23"><i>i</i></text>
<text top="709" left="172" width="224" height="14" font="7">is the <i>cofactor </i>of <i>D </i>with respect to <i>a</i></text>
<text top="714" left="397" width="3" height="11" font="19"><i>i</i></text>
<text top="709" left="401" width="20" height="14" font="7">, <i>D</i></text>
<text top="713" left="421" width="5" height="11" font="19"><i>a</i></text>
<text top="717" left="426" width="2" height="8" font="23"><i>i</i></text>
<text top="709" left="435" width="203" height="14" font="7">is the <i>minor </i>of <i>D </i>with respect to</text>
<text top="726" left="85" width="6" height="14" font="11"><i>a</i></text>
<text top="731" left="92" width="3" height="11" font="19"><i>i</i></text>
<text top="726" left="95" width="19" height="14" font="7">, <i>D</i></text>
<text top="730" left="115" width="5" height="11" font="19"><i>a</i></text>
<text top="734" left="120" width="2" height="8" font="23"><i>i</i></text>
<text top="726" left="128" width="231" height="14" font="7">is the <i>remainder </i>of <i>D </i>with respect to <i>a</i></text>
<text top="731" left="359" width="3" height="11" font="19"><i>i</i></text>
<text top="726" left="363" width="275" height="14" font="7">, and operations are algebraic multiplications</text>
<text top="742" left="85" width="434" height="14" font="7">and additions. For example, Fig. 3 shows the DDD representation of det</text>
<text top="739" left="519" width="5" height="18" font="12">(</text>
<text top="742" left="525" width="13" height="13" font="14"><b>M</b></text>
<text top="742" left="538" width="100" height="14" font="7">) under ordering</text>
<text top="759" left="85" width="6" height="14" font="11"><i>a</i></text>
<text top="755" left="95" width="11" height="18" font="12">&gt;</text>
<text top="759" left="111" width="5" height="14" font="11"><i>c</i></text>
<text top="755" left="120" width="11" height="18" font="12">&gt;</text>
<text top="759" left="135" width="6" height="14" font="11"><i>b</i></text>
<text top="755" left="145" width="11" height="18" font="12">&gt;</text>
<text top="759" left="160" width="7" height="14" font="11"><i>d</i></text>
<text top="755" left="171" width="11" height="18" font="12">&gt;</text>
<text top="759" left="188" width="4" height="14" font="11"><i>f</i></text>
<text top="755" left="197" width="11" height="18" font="12">&gt;</text>
<text top="759" left="212" width="5" height="14" font="11"><i>e</i></text>
<text top="755" left="222" width="11" height="18" font="12">&gt;</text>
<text top="759" left="237" width="7" height="14" font="11"><i>g</i></text>
<text top="755" left="248" width="11" height="18" font="12">&gt;</text>
<text top="759" left="262" width="4" height="14" font="11"><i>i</i></text>
<text top="755" left="271" width="11" height="18" font="12">&gt;</text>
<text top="759" left="286" width="7" height="14" font="11"><i>h</i></text>
<text top="755" left="296" width="11" height="18" font="12">&gt;</text>
<text top="759" left="312" width="7" height="14" font="11"><i>j</i>.</text>
<text top="784" left="85" width="553" height="14" font="7">To enforce the uniqueness and compactness of the DDD representation, the three rules of</text>
<text top="800" left="85" width="553" height="14" font="7">ZBDDs, namely, zero-suppression, ordered, and shared are adopted. This leads to DDDs</text>
<text top="817" left="85" width="192" height="14" font="7">having the following properties:</text>
<text top="842" left="85" width="553" height="14" font="7">• Every 1-path from the root corresponds to a product term in the fully expanded symbolic</text>
<text top="859" left="104" width="534" height="14" font="7">expression. It contains exactly <i>n </i>1-edges. The number of 1-paths is equal to the number of</text>
<text top="875" left="104" width="88" height="14" font="7">product terms.</text>
<text top="71" left="617" width="23" height="20" font="7">117</text>
<text top="73" left="85" width="371" height="17" font="15">Parallel Symbolic Analysis of Large Analog Circuits on GPU Platforms</text>
</page>
<page number="6" position="absolute" top="0" left="0" height="1020" width="722">
<text top="81" left="85" width="4" height="7" font="10">6</text>
<text top="81" left="598" width="40" height="7" font="10">VLSI Design</text>
<text top="111" left="85" width="553" height="14" font="7">• For any determinant <i>D</i>, there is a unique DDD representation under a given vertex</text>
<text top="128" left="104" width="55" height="14" font="7">ordering.</text>
<text top="153" left="85" width="42" height="14" font="7">We use</text>
<text top="150" left="131" width="4" height="18" font="12">|</text>
<text top="153" left="135" width="33" height="14" font="11"><i>DDD</i></text>
<text top="150" left="169" width="4" height="18" font="12">|</text>
<text top="153" left="176" width="398" height="14" font="7">to denote the <i>size of </i>a DDD, i.e., the number of vertices in the DDD.</text>
<text top="179" left="85" width="553" height="14" font="7">Once a DDD has been constructed, its numerical values of the determinant it represents can</text>
<text top="195" left="85" width="553" height="14" font="7">be computed by performing the depth-ﬁrst type search of the graph and performing (3) at</text>
<text top="212" left="85" width="553" height="14" font="7">each node, whose time complexity is linear function of the size of the graphs (its number of</text>
<text top="228" left="85" width="418" height="14" font="7">nodes). The computing step is call <i>Evaluate(D) </i>where <i>D </i>is a DDD root.</text>
<text top="253" left="85" width="553" height="14" font="7">For each vertex, there are two values, <i>vself </i>and <i>vtree</i>. As above mentioned, vself represents</text>
<text top="270" left="85" width="553" height="14" font="7">the value of the element itself; while vtree represents the value of the whole tree (or subtree).</text>
<text top="286" left="85" width="553" height="14" font="7">For each vertex, the vtree equals vself multiplying vtree of 1-subtree plus vtree of 0-subtree as</text>
<text top="303" left="85" width="553" height="14" font="7">shown in (3). In this example, the value of the determinant equals vtree of <i>a</i>; while vtree of a</text>
<text top="319" left="85" width="553" height="14" font="7">equals vself of <i>a </i>multiplying vtree of <i>b </i>plus vtree of <i>c</i>. In a serial implementation, the tree value</text>
<text top="336" left="85" width="553" height="14" font="7">of <i>a </i>is computed by recursively computing all vtree of subtrees, which is very time-consuming</text>
<text top="352" left="85" width="172" height="14" font="7">when the tree becomes large.</text>
<text top="377" left="85" width="553" height="14" font="7">One key observation for DDD structure is that the data dependence is very clear. The data</text>
<text top="394" left="85" width="553" height="14" font="7">dependency is very simple: a node can be evaluated only after its children are evaluated.</text>
<text top="410" left="85" width="553" height="14" font="7">Such dependency implies the parallelism where all the nodes satisfying this constraint can</text>
<text top="427" left="85" width="553" height="14" font="7">be evaluated at the same time. Also, in frequency analysis of analog circuits, evaluation of a</text>
<text top="443" left="85" width="553" height="14" font="7">DDD node at different frequency runs can be performed in parallel. In the following section</text>
<text top="460" left="85" width="524" height="14" font="7">we show how we can explore such parallelism to speed up the DDD evaluation process.</text>
<text top="496" left="85" width="208" height="13" font="6"><b>3. Review of GPU architectures</b></text>
<text top="522" left="85" width="553" height="14" font="7">CUDA (short for Compute Uniﬁed Device Architecture) is the parallel computing architecture</text>
<text top="538" left="85" width="553" height="14" font="7">for NVIDIA many-core GPU processors. The architecture of a typical CUDA-capable GPU</text>
<text top="555" left="85" width="553" height="14" font="7">is consisted of an array of highly threaded streaming multiprocessors (SM) and comes with</text>
<text top="571" left="85" width="553" height="14" font="7">more than 4 GBytes DRAM, referred to as global memory. Each SM has eight streaming</text>
<text top="588" left="85" width="553" height="14" font="7">processor (SP) and two special function units (SFU), and possesses its own shared memory</text>
<text top="604" left="85" width="505" height="14" font="7">and instruction cache. The structure of a streaming multiprocessor is shown in Fig. 4.</text>
<text top="629" left="85" width="553" height="14" font="7">As the programming model of GPU, CUDA extends C into CUDA C, and supports tasks such</text>
<text top="646" left="85" width="553" height="14" font="7">as threads calling and memory allocation, which makes programmers able to explore most</text>
<text top="662" left="85" width="553" height="14" font="7">of the capabilities of GPU parallelism. In CUDA programming model, threads are organized</text>
<text top="679" left="85" width="553" height="14" font="7">into blocks; blocks of threads are organized into grids. CUDA also assumes that both the host</text>
<text top="695" left="85" width="553" height="14" font="7">(CPU) and the device (GPU) maintain their own separate memory spaces in DRAM, referred</text>
<text top="712" left="85" width="553" height="14" font="7">to as host memory and device memory, respectively. For every block of threads, a shared</text>
<text top="728" left="85" width="553" height="14" font="7">memory is accessible to all threads in that same block. And the global memory is accessible</text>
<text top="744" left="85" width="553" height="14" font="7">to all threads in all blocks. Developers can write programs running millions of threads with</text>
<text top="761" left="85" width="553" height="14" font="7">thousands of blocks in a parallel approach. This massive parallelism forms the reason that</text>
<text top="777" left="85" width="537" height="14" font="7">programs with GPU acceleration can be multiple times faster than their CPU counterparts.</text>
<text top="803" left="85" width="553" height="14" font="7">One thing to mention is that for some series of CUDA GPU, a multiprocessor has eight</text>
<text top="819" left="85" width="553" height="14" font="7">single-precision ﬂoating point ALUs (one per core) but only one double-precision ALU</text>
<text top="836" left="85" width="553" height="14" font="7">(shared by the eight cores). Thus, for applications whose execution time is dominated by</text>
<text top="852" left="85" width="553" height="14" font="7">ﬂoating point computations, switching from single-precision to double-precision will decrease</text>
<text top="868" left="85" width="553" height="14" font="7">performance by a factor of approximately eight. However, this situation is being improved</text>
<text top="71" left="85" width="23" height="20" font="7">118</text>
<text top="73" left="576" width="67" height="17" font="15">VLSI Design</text>
</page>
<page number="7" position="absolute" top="0" left="0" height="1020" width="722">
	<fontspec id="24" size="10" family="Times" color="#231f20"/>
<text top="81" left="85" width="225" height="7" font="10">Parallel Symbolic Analysis of Large Analog Circuits on GPU Platforms 3</text>
<text top="81" left="634" width="4" height="7" font="10">7</text>
<text top="460" left="85" width="268" height="14" font="7">Fig. 4. Structure of streaming multiprocessor.</text>
<text top="488" left="85" width="553" height="14" font="7">in NVIDIA T20 series, the Fermi family. These most recent GPU from NVIDIA can already</text>
<text top="505" left="85" width="379" height="14" font="7">provide much better double-precision performance than before.</text>
<text top="541" left="85" width="233" height="13" font="6"><b>4. New GPU-based DDD evaluation</b></text>
<text top="567" left="85" width="553" height="14" font="7">In this section, we present the new GPU-based DDD evaluation algorithm. Before the details</text>
<text top="583" left="85" width="553" height="14" font="7">of GPU-based DDD evaluation method, we ﬁrst discuss the new DDD data structure for GPU</text>
<text top="600" left="85" width="117" height="14" font="7">parallel computing.</text>
<text top="625" left="85" width="553" height="14" font="7">One key observation for DDD structure is that the data dependence is very clear. The data</text>
<text top="642" left="85" width="553" height="14" font="7">dependency is very simple: a node can be evaluated only after its children are evaluated.</text>
<text top="658" left="85" width="553" height="14" font="7">Such dependency implies the parallelism where all the nodes satisfying this constraint can be</text>
<text top="674" left="85" width="553" height="14" font="7">evaluated at the same time. Also, in frequency analysis of analog circuits, evaluation of a DDD</text>
<text top="691" left="85" width="553" height="14" font="7">node at different frequency runs can be performed in parallel. In the following subsections</text>
<text top="707" left="85" width="524" height="14" font="7">we show how we can explore such parallelism to speed up the DDD evaluation process.</text>
<text top="743" left="85" width="135" height="12" font="24"><b>4.1 New data structure</b></text>
<text top="768" left="85" width="553" height="14" font="7">To achieve the best performance on GPU, linear memory structure, i.e., data stored in</text>
<text top="784" left="85" width="553" height="14" font="7">consequent memory addresses, is preferable. For CPU serial computing, the data structure</text>
<text top="801" left="85" width="553" height="14" font="7">is based on dynamic links in a linked binary tree. For parallel computing, the data will be</text>
<text top="817" left="85" width="553" height="14" font="7">stored in linear arrays which can be more efﬁciently accessed by different threads based on</text>
<text top="834" left="85" width="63" height="14" font="7">thread ids.</text>
<text top="859" left="85" width="553" height="14" font="7">As we discussed above, the DDD representation stores all product terms of the determinant</text>
<text top="876" left="85" width="553" height="14" font="7">of the MNA matrix in a binary linked tree structure. The vertex in the tree structure is known</text>
<text top="71" left="617" width="23" height="20" font="7">119</text>
<text top="73" left="85" width="371" height="17" font="15">Parallel Symbolic Analysis of Large Analog Circuits on GPU Platforms</text>
</page>
<page number="8" position="absolute" top="0" left="0" height="1020" width="722">
<text top="81" left="85" width="4" height="7" font="10">8</text>
<text top="81" left="598" width="40" height="7" font="10">VLSI Design</text>
<text top="280" left="85" width="335" height="14" font="7">Fig. 5. Illustration of the data structure for serial method</text>
<text top="723" left="85" width="348" height="14" font="7">Fig. 6. Illustration of the data structure for parallel method</text>
<text top="752" left="85" width="553" height="14" font="7">as DDD node that represents element in MNA matrix which is identiﬁed by its index. For</text>
<text top="768" left="85" width="553" height="14" font="7">each DDD node, the data structure includes the sign value, the MNA index, the RCL values,</text>
<text top="784" left="85" width="553" height="14" font="7">corresponding frequency value, <i>vself</i>, and <i>vtree</i>. In the serial approach, these values are stored</text>
<text top="801" left="85" width="553" height="14" font="7">in a data structure and connected through links, as shown in Fig. 5. On the other side, in</text>
<text top="817" left="85" width="553" height="14" font="7">the parallel approach, all of these data are stored separately in corresponding linear arrays</text>
<text top="834" left="85" width="553" height="14" font="7">and each element is identiﬁed by the DDD node index (not necessarily the same as the MNA</text>
<text top="850" left="85" width="347" height="14" font="7">element index). Figure 6 illustrates the new data structure.</text>
<text top="71" left="85" width="23" height="20" font="7">120</text>
<text top="73" left="576" width="67" height="17" font="15">VLSI Design</text>
</page>
<page number="9" position="absolute" top="0" left="0" height="1020" width="722">
<text top="81" left="85" width="225" height="7" font="10">Parallel Symbolic Analysis of Large Analog Circuits on GPU Platforms 4</text>
<text top="81" left="634" width="4" height="7" font="10">9</text>
<text top="111" left="85" width="553" height="14" font="7">Two choices are available for <i>vself </i>data structure. One is similar to the data structure of <i>vtree</i>.</text>
<text top="128" left="85" width="553" height="14" font="7">The <i>vself </i>value for each DDD node is stored consecutively. This data structure is called the</text>
<text top="144" left="85" width="553" height="14" font="7">linear version of <i>vself </i>data structure. The other method is as shown in Fig. 6. The array is</text>
<text top="161" left="85" width="553" height="14" font="7">organized per MNA element. Due to the fact that some of the DDD nodes share the same</text>
<text top="177" left="85" width="553" height="14" font="7">MNA element value, the second data structure is more compact in memory than the linear</text>
<text top="194" left="85" width="553" height="14" font="7">version. So it is called the compact version of <i>vself </i>data structure. The compact version is</text>
<text top="210" left="85" width="553" height="14" font="7">suitable for small circuits because it reduces the global memory trafﬁc when computing <i>vself</i>.</text>
<text top="226" left="85" width="553" height="14" font="7">However, for large circuits, the calculation of <i>vtree </i>dominates the time cost. And we can</text>
<text top="243" left="85" width="553" height="14" font="7">implement a strategy to reduce the global memory trafﬁc for computing <i>vtree </i>using the linear</text>
<text top="259" left="85" width="553" height="14" font="7">version of <i>vself </i>data structure to further improve the GPU performance. Therefore, for larger</text>
<text top="276" left="85" width="553" height="14" font="7">circuits, the linear version is preferable. The performance comparison is discussed later in the</text>
<text top="292" left="85" width="74" height="14" font="7">next section.</text>
<text top="328" left="85" width="109" height="12" font="24"><b>4.2 Algorithm ﬂow</b></text>
<text top="353" left="85" width="553" height="14" font="7">The parallel evaluating process consists of two stages. First, the <i>vself </i>values for all DDD nodes</text>
<text top="369" left="85" width="553" height="14" font="7">are computed and stored. In this stage, a set of 2D threads are launched on GPU devices. The</text>
<text top="386" left="85" width="553" height="14" font="7">X-dimension of the 2D threads represents different frequencies; the Y-dimension represents</text>
<text top="402" left="85" width="553" height="14" font="7">different elements (for compact <i>vself</i>) or DDD nodes (for linear <i>vself</i>). Therefore, all elements</text>
<text top="419" left="85" width="553" height="14" font="7">(or DDD nodes) can be computed under all frequencies in massively parallel manners. In</text>
<text top="435" left="85" width="553" height="14" font="7">the second stage, we simultaneously launch GPU 2D threads to compute all the <i>vtree </i>values</text>
<text top="451" left="85" width="553" height="14" font="7">for DDD nodes based on (3). Notice that a DDD node <i>vtree </i>value becomes valid when all its</text>
<text top="468" left="85" width="553" height="14" font="7">children’s <i>vtree </i>values are valid. Since we compute all the <i>vtree </i>for all the nodes at the same</text>
<text top="484" left="85" width="553" height="14" font="7">time, the correct <i>vtree </i>values will automatically propagate from the bottom of the DDD tree</text>
<text top="501" left="85" width="553" height="14" font="7">to the top node. The number of such <i>vtree </i>iterative computing are decided by the number of</text>
<text top="517" left="85" width="553" height="14" font="7">layers in DDD tree. A layer represents a set of DDD nodes whose distance from <i>1-terminal</i></text>
<text top="534" left="85" width="553" height="14" font="7">or <i>0-terminal </i>are the same. The number of layers equal to the longest distance between</text>
<text top="550" left="85" width="553" height="14" font="7">non-terminal nodes and <i>1-terminal</i>/<i>0-terminal</i>. Algorithm 1 shows the ﬂow of parallel DDD</text>
<text top="566" left="85" width="271" height="14" font="7">evaluation using compact <i>vself </i>data structure.</text>
<text top="592" left="85" width="553" height="14" font="7">Line 3 and Line 4 load frequency index and element index respectively with CUDA built-in</text>
<text top="608" left="85" width="553" height="14" font="7">variables (Thread.X and Thread.Y are our simpliﬁed notations). These built-in variables are</text>
<text top="625" left="85" width="553" height="14" font="7">the mechanism for identifying data within different threads in CUDA. Then, line 5 and Line 6</text>
<text top="641" left="85" width="553" height="14" font="7">compute the <i>vself </i>with the RCL value of the element under given frequency. From line 8, loop</text>
<text top="658" left="85" width="553" height="14" font="7">for computing <i>vtree </i>is entered. Line 13 and Line 14 load <i>vtree </i>values for left/right branch</text>
<text top="674" left="85" width="553" height="14" font="7">using function <i>Then()/Else()</i>. Line 15 through Line 26 explains themselves. Line 27 computes</text>
<text top="691" left="85" width="282" height="14" font="11"><i>vtree </i>with <i>vself </i>and <i>Left/Right </i>and ends the ﬂow.</text>
<text top="726" left="85" width="183" height="12" font="24"><b>4.3 Coalesced memory access</b></text>
<text top="751" left="85" width="553" height="14" font="7">The GPU performance can be further improved by making proper use of coalesced global</text>
<text top="768" left="85" width="553" height="14" font="7">memory access to prevent the global memory bandwidth from being performance limitation.</text>
<text top="784" left="85" width="553" height="14" font="7">Coalesced memory access is one efﬁcient method reducing global memory trafﬁc. When all</text>
<text top="801" left="85" width="553" height="14" font="7">threads in a warp execute a load instruction, the hardware detects whether the threads access</text>
<text top="817" left="85" width="553" height="14" font="7">the consecutive global memory address. In such case, the hardware coalesces all of these</text>
<text top="833" left="85" width="553" height="14" font="7">accesses into a consolidated access to the consecutive global memory. In the implementation</text>
<text top="850" left="85" width="553" height="14" font="7">of GPU-accelerated DDD evaluation, such favorable data access pattern is fulﬁlled for the</text>
<text top="866" left="85" width="553" height="14" font="7">linear version of <i>vself </i>data structure to gain performance enhancement. The <i>vself </i>data structure</text>
<text top="883" left="85" width="553" height="14" font="7">is in a linear pattern so that the <i>vself </i>values for a given DDD node under a series of frequency</text>
<text top="71" left="617" width="23" height="20" font="7">121</text>
<text top="73" left="85" width="371" height="17" font="15">Parallel Symbolic Analysis of Large Analog Circuits on GPU Platforms</text>
</page>
<page number="10" position="absolute" top="0" left="0" height="1020" width="722">
<text top="81" left="85" width="8" height="7" font="10">10</text>
<text top="81" left="598" width="40" height="7" font="10">VLSI Design</text>
<text top="110" left="85" width="74" height="13" font="14"><b>Algorithm 1</b></text>
<text top="110" left="163" width="238" height="14" font="7">Parallel DDD evaluation algorithm ﬂow</text>
<text top="134" left="92" width="9" height="12" font="4">1:</text>
<text top="133" left="108" width="10" height="13" font="14"><b>if</b></text>
<text top="133" left="121" width="240" height="14" font="7">Launch GPU threads for each node <b>then</b></text>
<text top="151" left="92" width="9" height="12" font="4">2:</text>
<text top="150" left="123" width="113" height="14" font="7">{Computing vself:}</text>
<text top="167" left="92" width="9" height="12" font="4">3:</text>
<text top="166" left="123" width="46" height="14" font="11"><i>FreqIdx</i></text>
<text top="163" left="173" width="14" height="18" font="12">←</text>
<text top="166" left="191" width="53" height="14" font="11"><i>Thread</i>.<i>X</i></text>
<text top="183" left="92" width="9" height="12" font="4">4:</text>
<text top="182" left="123" width="50" height="14" font="11"><i>ElemIdx</i></text>
<text top="179" left="177" width="14" height="18" font="12">←</text>
<text top="182" left="195" width="52" height="14" font="11"><i>Thread</i>.<i>Y</i></text>
<text top="200" left="92" width="9" height="12" font="4">5:</text>
<text top="195" left="123" width="5" height="18" font="12">(</text>
<text top="199" left="129" width="38" height="14" font="11"><i>R</i>, <i>C</i>, <i>L</i></text>
<text top="195" left="167" width="24" height="18" font="12">) ←</text>
<text top="199" left="195" width="48" height="14" font="11"><i>GetRCL</i></text>
<text top="195" left="243" width="5" height="18" font="12">(</text>
<text top="199" left="249" width="50" height="14" font="11"><i>ElemIdx</i></text>
<text top="195" left="299" width="5" height="18" font="12">)</text>
<text top="216" left="92" width="9" height="12" font="4">6:</text>
<text top="215" left="123" width="28" height="14" font="11"><i>vsel f</i></text>
<text top="212" left="157" width="23" height="18" font="12">← (</text>
<text top="215" left="181" width="24" height="14" font="11"><i>R</i>, <i>C</i></text>
<text top="212" left="208" width="7" height="18" font="12">∗</text>
<text top="215" left="219" width="25" height="14" font="11"><i>Freq</i></text>
<text top="212" left="246" width="11" height="18" font="12">+</text>
<text top="215" left="261" width="42" height="14" font="11"><i>L</i>/<i>Freq</i></text>
<text top="212" left="303" width="5" height="18" font="12">)</text>
<text top="233" left="92" width="9" height="12" font="4">7:</text>
<text top="232" left="108" width="36" height="13" font="14"><b>end if</b></text>
<text top="249" left="92" width="9" height="12" font="4">8:</text>
<text top="248" left="108" width="37" height="13" font="14"><b>for all</b></text>
<text top="248" left="149" width="85" height="14" font="11"><i>lyr </i>such that 0</text>
<text top="245" left="237" width="11" height="18" font="12">≤</text>
<text top="248" left="252" width="17" height="14" font="11"><i>lyr</i></text>
<text top="245" left="273" width="11" height="18" font="12">≤</text>
<text top="248" left="288" width="123" height="14" font="11"><i>NumberO f Layers </i><b>do</b></text>
<text top="266" left="92" width="9" height="12" font="4">9:</text>
<text top="265" left="123" width="114" height="14" font="7">{Computing vtree:}</text>
<text top="282" left="86" width="15" height="12" font="4">10:</text>
<text top="281" left="123" width="10" height="13" font="14"><b>if</b></text>
<text top="281" left="136" width="240" height="14" font="7">Launch GPU threads for each node <b>then</b></text>
<text top="299" left="86" width="15" height="12" font="4">11:</text>
<text top="298" left="138" width="46" height="14" font="11"><i>FreqIdx</i></text>
<text top="294" left="188" width="14" height="18" font="12">←</text>
<text top="298" left="206" width="53" height="14" font="11"><i>Thread</i>.<i>X</i></text>
<text top="315" left="86" width="15" height="12" font="4">12:</text>
<text top="314" left="138" width="53" height="14" font="11"><i>DDDIdx</i></text>
<text top="310" left="196" width="14" height="18" font="12">←</text>
<text top="314" left="214" width="52" height="14" font="11"><i>Thread</i>.<i>Y</i></text>
<text top="331" left="86" width="15" height="12" font="4">13:</text>
<text top="330" left="138" width="26" height="14" font="11"><i>Le f t</i></text>
<text top="327" left="168" width="14" height="18" font="12">←</text>
<text top="330" left="186" width="29" height="14" font="11"><i>Then</i></text>
<text top="327" left="215" width="5" height="18" font="12">(</text>
<text top="330" left="221" width="53" height="14" font="11"><i>DDDIdx</i></text>
<text top="327" left="275" width="5" height="18" font="12">)</text>
<text top="348" left="86" width="15" height="12" font="4">14:</text>
<text top="347" left="138" width="32" height="14" font="11"><i>Right</i></text>
<text top="343" left="175" width="14" height="18" font="12">←</text>
<text top="347" left="193" width="24" height="14" font="11"><i>Else</i></text>
<text top="343" left="217" width="5" height="18" font="12">(</text>
<text top="347" left="223" width="53" height="14" font="11"><i>DDDIdx</i></text>
<text top="343" left="277" width="5" height="18" font="12">)</text>
<text top="364" left="86" width="15" height="12" font="4">15:</text>
<text top="363" left="138" width="10" height="13" font="14"><b>if</b></text>
<text top="363" left="151" width="20" height="14" font="7">is 0</text>
<text top="360" left="173" width="11" height="18" font="12">−</text>
<text top="363" left="187" width="80" height="14" font="11"><i>terminal </i><b>then</b></text>
<text top="381" left="86" width="15" height="12" font="4">16:</text>
<text top="380" left="153" width="26" height="14" font="11"><i>Le f t</i></text>
<text top="376" left="183" width="23" height="18" font="12">← (</text>
<text top="380" left="206" width="19" height="14" font="7">0, 0</text>
<text top="376" left="226" width="5" height="18" font="12">)</text>
<text top="397" left="86" width="15" height="12" font="4">17:</text>
<text top="396" left="153" width="32" height="14" font="11"><i>Right</i></text>
<text top="393" left="190" width="24" height="18" font="12">← (</text>
<text top="396" left="213" width="19" height="14" font="7">0, 0</text>
<text top="393" left="232" width="5" height="18" font="12">)</text>
<text top="414" left="86" width="15" height="12" font="4">18:</text>
<text top="413" left="138" width="24" height="13" font="14"><b>else</b></text>
<text top="430" left="86" width="15" height="12" font="4">19:</text>
<text top="429" left="153" width="10" height="13" font="14"><b>if</b></text>
<text top="429" left="166" width="20" height="14" font="7">is 1</text>
<text top="426" left="188" width="11" height="18" font="12">−</text>
<text top="429" left="202" width="80" height="14" font="11"><i>terminal </i><b>then</b></text>
<text top="447" left="86" width="15" height="12" font="4">20:</text>
<text top="446" left="168" width="26" height="14" font="11"><i>Le f t</i></text>
<text top="442" left="198" width="23" height="18" font="12">← (</text>
<text top="446" left="221" width="19" height="14" font="7">1, 0</text>
<text top="442" left="241" width="5" height="18" font="12">)</text>
<text top="463" left="86" width="15" height="12" font="4">21:</text>
<text top="462" left="168" width="32" height="14" font="11"><i>Right</i></text>
<text top="458" left="205" width="24" height="18" font="12">← (</text>
<text top="462" left="228" width="19" height="14" font="7">1, 0</text>
<text top="458" left="247" width="5" height="18" font="12">)</text>
<text top="479" left="86" width="15" height="12" font="4">22:</text>
<text top="478" left="153" width="36" height="13" font="14"><b>end if</b></text>
<text top="496" left="86" width="15" height="12" font="4">23:</text>
<text top="495" left="138" width="36" height="13" font="14"><b>end if</b></text>
<text top="512" left="86" width="15" height="12" font="4">24:</text>
<text top="511" left="138" width="10" height="13" font="14"><b>if</b></text>
<text top="511" left="151" width="25" height="14" font="11"><i>sign</i></text>
<text top="508" left="176" width="5" height="18" font="12">(</text>
<text top="511" left="182" width="53" height="14" font="11"><i>DDDIdx</i></text>
<text top="508" left="236" width="20" height="18" font="12">) &lt;</text>
<text top="511" left="260" width="38" height="14" font="7">0 <b>then</b></text>
<text top="529" left="86" width="15" height="12" font="4">25:</text>
<text top="528" left="153" width="28" height="14" font="11"><i>vsel f</i></text>
<text top="524" left="187" width="29" height="18" font="12">← −</text>
<text top="528" left="216" width="7" height="14" font="7">1</text>
<text top="524" left="226" width="7" height="18" font="12">∗</text>
<text top="528" left="236" width="28" height="14" font="11"><i>vsel f</i></text>
<text top="545" left="86" width="15" height="12" font="4">26:</text>
<text top="544" left="138" width="36" height="13" font="14"><b>end if</b></text>
<text top="562" left="86" width="15" height="12" font="4">27:</text>
<text top="561" left="138" width="28" height="14" font="11"><i>vtree</i></text>
<text top="557" left="170" width="14" height="18" font="12">←</text>
<text top="561" left="188" width="28" height="14" font="11"><i>vsel f</i></text>
<text top="557" left="221" width="7" height="18" font="12">∗</text>
<text top="561" left="231" width="26" height="14" font="11"><i>Le f t</i></text>
<text top="557" left="260" width="11" height="18" font="12">+</text>
<text top="561" left="274" width="32" height="14" font="11"><i>Right</i></text>
<text top="578" left="86" width="15" height="12" font="4">28:</text>
<text top="577" left="123" width="36" height="13" font="14"><b>end if</b></text>
<text top="595" left="86" width="15" height="12" font="4">29:</text>
<text top="594" left="108" width="45" height="13" font="14"><b>end for</b></text>
<text top="624" left="85" width="553" height="14" font="7">values are stored in coalesced memory. Therefore, threads, in the same block, with consecutive</text>
<text top="640" left="85" width="553" height="14" font="7">thread index will access consecutive global memory locations, which ensure that the hardware</text>
<text top="657" left="85" width="553" height="14" font="7">coalesces these accessing process in just one reading operation. In this example, this technique</text>
<text top="673" left="85" width="553" height="14" font="7">reduces the global memory trafﬁc by a factor of 16. However, for the compact version of <i>vself</i></text>
<text top="690" left="85" width="553" height="14" font="7">data structure, the <i>vself </i>values are stored per elements, which means that for consecutive DDD</text>
<text top="706" left="85" width="553" height="14" font="7">nodes, their respective <i>vself </i>values are not stored in consecutive locations. So, for the compact</text>
<text top="723" left="85" width="553" height="14" font="7">version of <i>vself </i>data structure, the global memory access is not coalesced. The performance</text>
<text top="739" left="85" width="446" height="14" font="7">comparison for both of versions is discussed in experimental result section.</text>
<text top="775" left="85" width="134" height="13" font="6"><b>5. Numerical results</b></text>
<text top="801" left="85" width="553" height="14" font="7">We have implemented both CPU serial version and GPU version of the DDD-based evaluation</text>
<text top="818" left="85" width="287" height="14" font="7">programs using C++ and CUDA C, respectively.</text>
<text top="843" left="85" width="553" height="14" font="7">The serial and parallel versions of programs have been tested under the same hardware</text>
<text top="859" left="85" width="553" height="14" font="7">and OS conﬁguraions. The computation platform is a Linux server with two Intel Xeon</text>
<text top="876" left="85" width="553" height="14" font="7">E5620 2.4 GHz Quad-Core CPUs, 36 GBytes memory, equipped with NVIDIA Tesla S1070</text>
<text top="71" left="85" width="23" height="20" font="7">122</text>
<text top="73" left="576" width="67" height="17" font="15">VLSI Design</text>
</page>
<page number="11" position="absolute" top="0" left="0" height="1020" width="722">
<text top="81" left="85" width="225" height="7" font="10">Parallel Symbolic Analysis of Large Analog Circuits on GPU Platforms 5</text>
<text top="81" left="630" width="8" height="7" font="10">11</text>
<text top="494" left="85" width="189" height="14" font="7">Fig. 7. Performance comparison</text>
<text top="523" left="85" width="553" height="14" font="7">1U rack-mounted system (containing four T10 GPUs). The software environment is Red Hat</text>
<text top="539" left="85" width="389" height="14" font="7">4.1.2-48 Linux, gcc version 4.1.2 20080704, and CUDA version 3.2.</text>
<text top="564" left="85" width="553" height="14" font="7">For the purpose of performance comparison, the programs with CPU-serial and GPU-parallel</text>
<text top="581" left="85" width="493" height="14" font="7">algorithm are both tested for the same set of circuits. The testing circuits include:</text>
<text top="578" left="584" width="54" height="17" font="11"><i>μ</i>A741 (a</text>
<text top="597" left="85" width="553" height="14" font="7">bipolar opamp), Cascode (a CMOS Cascode opamp), ladder7, ladder21, ladder100 (7-, 21-,</text>
<text top="614" left="85" width="553" height="14" font="7">100-section cascade resistive ladder networks), rctree1, rctree2 (two RC tree networks), rlctest,</text>
<text top="630" left="85" width="240" height="14" font="7">vcstest, ccstest, bigtst (some RLC ﬁlters).</text>
<text top="656" left="85" width="553" height="14" font="7">In the two implementations, the same DDD construction algorithm is shared. The numerical</text>
<text top="672" left="85" width="553" height="14" font="7">evaluation process is done under serial and parallel version separately. The performance</text>
<text top="688" left="85" width="553" height="14" font="7">comparison for each of the given circuit is listed in Table 1 and illustrated in Fig. 7. In our</text>
<text top="705" left="85" width="553" height="14" font="7">experimental results, the overhead for data transferring between host and GPU devices are</text>
<text top="721" left="85" width="553" height="14" font="7">not included as their costs can be amortized over many DDD evaluation processes and can be</text>
<text top="738" left="85" width="553" height="14" font="7">partially overlapped with GPU computing in more advanced parallelization implementation.</text>
<text top="754" left="85" width="553" height="14" font="7">The statistics information for DDD representation is also included in the same table. The ﬁrst</text>
<text top="771" left="85" width="553" height="14" font="7">column indicates the name of each circuit tested. The second to fourth columns represent the</text>
<text top="787" left="85" width="553" height="14" font="7">number of nodes in circuit, the number of elements in the MNA matrix and the number of</text>
<text top="803" left="85" width="553" height="14" font="7">DDD nodes in the generated DDD graph, respectively. The number of determinant product</text>
<text top="820" left="85" width="553" height="14" font="7">terms is shown in ﬁfth column. CPU time is the time cost for the calculation of DDD evaluation</text>
<text top="836" left="85" width="553" height="14" font="7">in serial algorithm. The GPU time is the computing time cost for GPU-parallelism (the kernel</text>
<text top="853" left="85" width="552" height="14" font="7">parts). The ﬁnal column summerizes the speedup of parallel algorithm over serial algorithm.</text>
<text top="71" left="617" width="23" height="20" font="7">123</text>
<text top="73" left="85" width="371" height="17" font="15">Parallel Symbolic Analysis of Large Analog Circuits on GPU Platforms</text>
</page>
<page number="12" position="absolute" top="0" left="0" height="1020" width="722">
<text top="81" left="85" width="8" height="7" font="10">12</text>
<text top="81" left="598" width="40" height="7" font="10">VLSI Design</text>
<text top="477" left="85" width="180" height="14" font="7">Fig. 8. The circuit schematic of</text>
<text top="474" left="269" width="39" height="17" font="11"><i>μ</i>A741</text>
<text top="737" left="85" width="305" height="14" font="7">Fig. 9. The small signal model for bipolar transistor</text>
<text top="766" left="85" width="510" height="14" font="7">Now let us investigate one typical example in detail. Fig. 8 shows the schematic of a</text>
<text top="763" left="599" width="39" height="17" font="11"><i>μ</i>A741</text>
<text top="782" left="85" width="553" height="14" font="7">circuit. This bipolar opamp contains 26 transistors and 11 resistors. DC analysis is ﬁrst</text>
<text top="799" left="85" width="553" height="14" font="7">performed by SPICE to obtain the operation point, and then small-signal model, shown in</text>
<text top="815" left="85" width="553" height="14" font="7">Fig. 9, is used for DDD symbolic analysis and numerical evaluation. The AC analysis is</text>
<text top="831" left="85" width="553" height="14" font="7">performed using both CPU DDD evaluation and GPU parallel DDD evaluation proposed in</text>
<text top="848" left="85" width="553" height="14" font="7">our work. In Fig. 10 plots the frequency responses of the gain and the phase at the ampliﬁer’s</text>
<text top="864" left="85" width="553" height="14" font="7">output node from the two comparison methods. It can be observed that GPU parallel DDD</text>
<text top="881" left="85" width="553" height="14" font="7">evaluation provides the same result as it CPU serial counterpart does. We measured the run</text>
<text top="71" left="85" width="23" height="20" font="7">124</text>
<text top="73" left="576" width="67" height="17" font="15">VLSI Design</text>
</page>
<page number="13" position="absolute" top="0" left="0" height="1020" width="722">
	<fontspec id="25" size="5" family="Times" color="#000000"/>
	<fontspec id="26" size="2" family="Times" color="#000000"/>
	<fontspec id="27" size="5" family="Times" color="#000000"/>
	<fontspec id="28" size="1" family="Times" color="#000000"/>
	<fontspec id="29" size="9" family="Times" color="#231f20"/>
<text top="81" left="85" width="225" height="7" font="10">Parallel Symbolic Analysis of Large Analog Circuits on GPU Platforms 6</text>
<text top="81" left="630" width="8" height="7" font="10">13</text>
<text top="243" left="193" width="8" height="7" font="25">10</text>
<text top="241" left="201" width="3" height="4" font="26">0</text>
<text top="243" left="250" width="8" height="7" font="25">10</text>
<text top="241" left="258" width="3" height="4" font="26">1</text>
<text top="243" left="307" width="8" height="7" font="25">10</text>
<text top="241" left="315" width="3" height="4" font="26">2</text>
<text top="243" left="364" width="8" height="7" font="25">10</text>
<text top="241" left="372" width="3" height="4" font="26">3</text>
<text top="243" left="421" width="8" height="7" font="25">10</text>
<text top="241" left="429" width="3" height="4" font="26">4</text>
<text top="243" left="478" width="8" height="7" font="25">10</text>
<text top="241" left="486" width="3" height="4" font="26">5</text>
<text top="243" left="536" width="8" height="7" font="25">10</text>
<text top="241" left="543" width="3" height="4" font="26">6</text>
<text top="236" left="193" width="4" height="7" font="25">0</text>
<text top="218" left="189" width="8" height="7" font="25">10</text>
<text top="200" left="189" width="8" height="7" font="25">20</text>
<text top="182" left="189" width="8" height="7" font="25">30</text>
<text top="164" left="189" width="8" height="7" font="25">40</text>
<text top="146" left="189" width="8" height="7" font="25">50</text>
<text top="128" left="189" width="8" height="7" font="25">60</text>
<text top="250" left="354" width="30" height="7" font="25">Freq (Hz)</text>
<text top="195" left="186" width="0" height="7" font="27">Gain (dB)</text>
<text top="237" left="197" width="1" height="3" font="28"> </text>
<text top="129" left="540" width="1" height="3" font="28"> </text>
<text top="134" left="523" width="15" height="7" font="25">CPU</text>
<text top="143" left="523" width="16" height="7" font="25">GPU</text>
<text top="394" left="193" width="8" height="7" font="25">10</text>
<text top="392" left="201" width="3" height="4" font="26">0</text>
<text top="394" left="250" width="8" height="7" font="25">10</text>
<text top="392" left="258" width="3" height="4" font="26">1</text>
<text top="394" left="307" width="8" height="7" font="25">10</text>
<text top="392" left="315" width="3" height="4" font="26">2</text>
<text top="394" left="364" width="8" height="7" font="25">10</text>
<text top="392" left="372" width="3" height="4" font="26">3</text>
<text top="394" left="421" width="8" height="7" font="25">10</text>
<text top="392" left="429" width="3" height="4" font="26">4</text>
<text top="394" left="478" width="8" height="7" font="25">10</text>
<text top="392" left="486" width="3" height="4" font="26">5</text>
<text top="394" left="536" width="8" height="7" font="25">10</text>
<text top="392" left="543" width="3" height="4" font="26">6</text>
<text top="387" left="181" width="16" height="7" font="25">−100</text>
<text top="365" left="185" width="12" height="7" font="25">−80</text>
<text top="344" left="185" width="12" height="7" font="25">−60</text>
<text top="322" left="185" width="12" height="7" font="25">−40</text>
<text top="300" left="185" width="12" height="7" font="25">−20</text>
<text top="278" left="193" width="4" height="7" font="25">0</text>
<text top="401" left="354" width="30" height="7" font="25">Freq (Hz)</text>
<text top="355" left="177" width="0" height="7" font="27">Phase (degree)</text>
<text top="388" left="197" width="1" height="3" font="28"> </text>
<text top="280" left="540" width="1" height="3" font="28"> </text>
<text top="285" left="523" width="15" height="7" font="25">CPU</text>
<text top="294" left="523" width="16" height="7" font="25">GPU</text>
<text top="435" left="85" width="180" height="14" font="7">Fig. 10. Frequency response of</text>
<text top="432" left="268" width="370" height="17" font="11"><i>μ</i>A741 ampliﬁer. The red solid curve is the result of CPU DDD</text>
<text top="451" left="85" width="498" height="14" font="7">evaluation, while the blue dashed line is the result of GPU parallel DDD evaluation.</text>
<text top="480" left="85" width="553" height="14" font="7">time of these two methods: the program of CPU evaluation costs 0.84 second, while the GPU</text>
<text top="497" left="85" width="553" height="14" font="7">parallel version only takes 0.029 second. For this benchmark circuit, we can judge that the</text>
<text top="513" left="85" width="553" height="14" font="7">parallel computation can easily achieve a speedup of 29 times. As the size of the circuit and</text>
<text top="530" left="85" width="422" height="14" font="7">the number of DDD nodes grow larger, more speedup can be expected.</text>
<text top="555" left="85" width="302" height="14" font="7">From Table 1, we can make some observations.</text>
<text top="555" left="401" width="236" height="14" font="7">For a variety of circuits tested in the</text>
<text top="571" left="85" width="553" height="14" font="7">experiment, the GPU-accelerated version outperforms all of their counterparts. The maximum</text>
<text top="588" left="85" width="295" height="14" font="7">performance speedup is 38.33 times for <i>bigtst</i>.</text>
<text top="588" left="397" width="241" height="14" font="7">The time cost of the serial version is</text>
<text top="604" left="85" width="553" height="14" font="7">growing fast along the increasing of circuit size (nodes in the circuit). On the other side,</text>
<text top="621" left="85" width="553" height="14" font="7">however, the GPU-based parallel version performs much better for larger circuits. And</text>
<text top="637" left="85" width="553" height="14" font="7">more importantly, the larger the circuit is, the better performance improvement we can gain</text>
<text top="654" left="85" width="553" height="14" font="7">using GPU-acceleration. This trend is illustrated in Fig. 11. This result implies that the</text>
<text top="677" left="122" width="33" height="12" font="4">circuit</text>
<text top="677" left="170" width="178" height="12" font="4"># nodes # elements # DDD nodes</text>
<text top="677" left="363" width="39" height="12" font="4"># terms</text>
<text top="677" left="416" width="192" height="12" font="4">CPU time (s) GPU time (s) speedup</text>
<text top="696" left="124" width="30" height="12" font="4">bigtst</text>
<text top="696" left="185" width="12" height="12" font="4">32</text>
<text top="696" left="235" width="18" height="12" font="4">112</text>
<text top="696" left="304" width="18" height="12" font="4">642</text>
<text top="696" left="356" width="21" height="12" font="4">2.68</text>
<text top="693" left="379" width="10" height="16" font="15">×</text>
<text top="696" left="391" width="12" height="12" font="4">10</text>
<text top="694" left="403" width="4" height="9" font="8">7</text>
<text top="696" left="439" width="21" height="12" font="4">9.21</text>
<text top="696" left="509" width="27" height="12" font="4">0.240</text>
<text top="696" left="571" width="27" height="12" font="4">38.33</text>
<text top="711" left="118" width="41" height="12" font="4">cascode</text>
<text top="711" left="185" width="12" height="12" font="4">14</text>
<text top="711" left="238" width="12" height="12" font="4">76</text>
<text top="711" left="301" width="24" height="12" font="4">2110</text>
<text top="711" left="356" width="21" height="12" font="4">2.32</text>
<text top="708" left="379" width="10" height="16" font="15">×</text>
<text top="711" left="391" width="12" height="12" font="4">10</text>
<text top="709" left="403" width="4" height="9" font="8">5</text>
<text top="711" left="439" width="21" height="12" font="4">6.65</text>
<text top="711" left="509" width="27" height="12" font="4">0.369</text>
<text top="711" left="571" width="27" height="12" font="4">18.00</text>
<text top="724" left="122" width="34" height="12" font="4">ccstest</text>
<text top="724" left="187" width="6" height="12" font="4">9</text>
<text top="724" left="238" width="12" height="12" font="4">35</text>
<text top="724" left="304" width="18" height="12" font="4">109</text>
<text top="724" left="373" width="18" height="12" font="4">260</text>
<text top="724" left="439" width="21" height="12" font="4">0.32</text>
<text top="724" left="509" width="27" height="12" font="4">0.014</text>
<text top="724" left="571" width="27" height="12" font="4">23.40</text>
<text top="739" left="113" width="52" height="12" font="4">ladder100</text>
<text top="739" left="181" width="18" height="12" font="4">101</text>
<text top="739" left="235" width="18" height="12" font="4">301</text>
<text top="739" left="304" width="18" height="12" font="4">301</text>
<text top="739" left="353" width="21" height="12" font="4">9.27</text>
<text top="736" left="377" width="10" height="16" font="15">×</text>
<text top="739" left="389" width="12" height="12" font="4">10</text>
<text top="736" left="401" width="9" height="9" font="8">20</text>
<text top="739" left="436" width="27" height="12" font="4">11.31</text>
<text top="739" left="509" width="27" height="12" font="4">0.323</text>
<text top="739" left="571" width="27" height="12" font="4">35.00</text>
<text top="752" left="116" width="46" height="12" font="4">ladder21</text>
<text top="752" left="185" width="12" height="12" font="4">22</text>
<text top="752" left="238" width="12" height="12" font="4">64</text>
<text top="752" left="307" width="12" height="12" font="4">64</text>
<text top="752" left="367" width="30" height="12" font="4">28657</text>
<text top="752" left="439" width="21" height="12" font="4">0.55</text>
<text top="752" left="509" width="27" height="12" font="4">0.021</text>
<text top="752" left="571" width="27" height="12" font="4">25.69</text>
<text top="765" left="119" width="41" height="12" font="4">ladder7</text>
<text top="765" left="187" width="6" height="12" font="4">8</text>
<text top="765" left="238" width="12" height="12" font="4">22</text>
<text top="765" left="307" width="12" height="12" font="4">22</text>
<text top="765" left="376" width="12" height="12" font="4">34</text>
<text top="765" left="439" width="21" height="12" font="4">0.08</text>
<text top="765" left="509" width="27" height="12" font="4">0.007</text>
<text top="765" left="571" width="27" height="12" font="4">10.86</text>
<text top="780" left="121" width="36" height="12" font="4">rctree1</text>
<text top="780" left="185" width="12" height="12" font="4">40</text>
<text top="780" left="235" width="18" height="12" font="4">119</text>
<text top="780" left="304" width="18" height="12" font="4">211</text>
<text top="780" left="356" width="21" height="12" font="4">1.15</text>
<text top="777" left="379" width="10" height="16" font="15">×</text>
<text top="780" left="391" width="12" height="12" font="4">10</text>
<text top="778" left="403" width="4" height="9" font="8">8</text>
<text top="780" left="439" width="21" height="12" font="4">2.53</text>
<text top="780" left="509" width="27" height="12" font="4">0.076</text>
<text top="780" left="571" width="27" height="12" font="4">33.30</text>
<text top="795" left="121" width="36" height="12" font="4">rctree2</text>
<text top="795" left="185" width="12" height="12" font="4">53</text>
<text top="795" left="235" width="18" height="12" font="4">158</text>
<text top="795" left="304" width="18" height="12" font="4">302</text>
<text top="795" left="353" width="21" height="12" font="4">4.89</text>
<text top="791" left="377" width="10" height="16" font="15">×</text>
<text top="795" left="389" width="12" height="12" font="4">10</text>
<text top="792" left="401" width="9" height="9" font="8">10</text>
<text top="795" left="439" width="21" height="12" font="4">4.76</text>
<text top="795" left="509" width="27" height="12" font="4">0.134</text>
<text top="795" left="571" width="27" height="12" font="4">35.51</text>
<text top="808" left="123" width="32" height="12" font="4">rlctest</text>
<text top="808" left="187" width="6" height="12" font="4">9</text>
<text top="808" left="238" width="12" height="12" font="4">39</text>
<text top="808" left="304" width="18" height="12" font="4">119</text>
<text top="808" left="373" width="18" height="12" font="4">572</text>
<text top="808" left="439" width="21" height="12" font="4">0.01</text>
<text top="808" left="509" width="27" height="12" font="4">0.001</text>
<text top="808" left="574" width="21" height="12" font="4">8.82</text>
<text top="819" left="122" width="34" height="16" font="29"><i>μ</i>A741</text>
<text top="822" left="185" width="12" height="12" font="4">23</text>
<text top="822" left="238" width="12" height="12" font="4">89</text>
<text top="822" left="301" width="24" height="12" font="4">6205</text>
<text top="822" left="364" width="36" height="12" font="4">363914</text>
<text top="822" left="439" width="21" height="12" font="4">0.84</text>
<text top="822" left="509" width="27" height="12" font="4">0.029</text>
<text top="822" left="571" width="27" height="12" font="4">29.14</text>
<text top="835" left="124" width="30" height="12" font="4">vcstst</text>
<text top="835" left="185" width="12" height="12" font="4">12</text>
<text top="835" left="238" width="12" height="12" font="4">46</text>
<text top="835" left="304" width="18" height="12" font="4">121</text>
<text top="835" left="373" width="18" height="12" font="4">536</text>
<text top="835" left="439" width="21" height="12" font="4">0.28</text>
<text top="835" left="509" width="27" height="12" font="4">0.013</text>
<text top="835" left="571" width="27" height="12" font="4">20.74</text>
<text top="859" left="85" width="541" height="14" font="7">Table 1. Performance comparison of CPU-serial and GPU-parallel DDD evaluation for a set</text>
<text top="875" left="85" width="58" height="14" font="7">of circuits</text>
<text top="71" left="617" width="23" height="20" font="7">125</text>
<text top="73" left="85" width="371" height="17" font="15">Parallel Symbolic Analysis of Large Analog Circuits on GPU Platforms</text>
</page>
<page number="14" position="absolute" top="0" left="0" height="1020" width="722">
<text top="81" left="85" width="8" height="7" font="10">14</text>
<text top="81" left="598" width="40" height="7" font="10">VLSI Design</text>
<text top="447" left="85" width="533" height="14" font="7">Fig. 11. The performance speedup of GPU-acceleration vs. circuits size (number of nodes)</text>
<text top="476" left="85" width="553" height="14" font="7">GPU-acceleration is suitable to overcome the performance problem of DDD-based numerical</text>
<text top="492" left="85" width="166" height="14" font="7">evaluation for large circuits.</text>
<text top="830" left="85" width="539" height="14" font="7">Fig. 12. Performance comparison for two approaches of vself data structure (the x-axis is in</text>
<text top="847" left="85" width="96" height="14" font="7">logarithm scale)</text>
<text top="71" left="85" width="23" height="20" font="7">126</text>
<text top="73" left="576" width="67" height="17" font="15">VLSI Design</text>
</page>
<page number="15" position="absolute" top="0" left="0" height="1020" width="722">
<text top="81" left="85" width="225" height="7" font="10">Parallel Symbolic Analysis of Large Analog Circuits on GPU Platforms 7</text>
<text top="81" left="630" width="8" height="7" font="10">15</text>
<text top="111" left="85" width="553" height="14" font="7">In this experiment, both of data structures for storing <i>vself </i>are implemented. The performance</text>
<text top="128" left="85" width="553" height="14" font="7">comparison is listed in Table 2. The GPU parallel version under both of the two data structures</text>
<text top="144" left="85" width="553" height="14" font="7">for <i>vself </i>outperforms the serial version. And the performance speedup is clearly related to</text>
<text top="161" left="85" width="553" height="14" font="7">the number of product terms in MNA matrix, as shown in Fig. 12. For small circuits with</text>
<text top="177" left="85" width="553" height="14" font="7">less MNA matrix product terms, the compact version of <i>vself </i>is more efﬁcient due to the</text>
<text top="194" left="85" width="553" height="14" font="7">lowering of global memory trafﬁc when calculating <i>vself</i>. However, for large circuits with</text>
<text top="210" left="85" width="553" height="14" font="7">bigger number of MNA matrix product terms, the linear version of <i>vself </i>outperforms the</text>
<text top="226" left="85" width="553" height="14" font="7">compact version <i>comp vself </i>owing to the effect of coalesced memory access as discussed in</text>
<text top="243" left="85" width="100" height="14" font="7">the prior section.</text>
<text top="266" left="99" width="38" height="14" font="7">circuit</text>
<text top="266" left="162" width="44" height="14" font="7"># terms</text>
<text top="266" left="222" width="46" height="14" font="7">CPU (s)</text>
<text top="266" left="325" width="77" height="14" font="7">GPU time (s)</text>
<text top="266" left="524" width="51" height="14" font="7">speedup</text>
<text top="283" left="273" width="367" height="14" font="7">w/ comp vself w/ linear vself w/ comp vself w/ linear vself</text>
<text top="304" left="101" width="33" height="14" font="7">bigtst</text>
<text top="304" left="155" width="23" height="14" font="7">2.68</text>
<text top="301" left="181" width="11" height="18" font="12">×</text>
<text top="304" left="195" width="13" height="14" font="7">10</text>
<text top="301" left="208" width="5" height="11" font="13">7</text>
<text top="304" left="233" width="23" height="14" font="7">9.21</text>
<text top="304" left="302" width="30" height="14" font="7">0.240</text>
<text top="304" left="395" width="30" height="14" font="7">0.223</text>
<text top="304" left="488" width="30" height="14" font="7">38.33</text>
<text top="304" left="581" width="30" height="14" font="7">41.21</text>
<text top="321" left="94" width="46" height="14" font="7">cascode</text>
<text top="321" left="155" width="23" height="14" font="7">2.32</text>
<text top="318" left="181" width="11" height="18" font="12">×</text>
<text top="321" left="195" width="13" height="14" font="7">10</text>
<text top="318" left="208" width="5" height="11" font="13">5</text>
<text top="321" left="233" width="23" height="14" font="7">6.65</text>
<text top="321" left="302" width="30" height="14" font="7">0.369</text>
<text top="321" left="395" width="30" height="14" font="7">0.452</text>
<text top="321" left="488" width="30" height="14" font="7">18.00</text>
<text top="321" left="581" width="30" height="14" font="7">14.70</text>
<text top="337" left="98" width="39" height="14" font="7">ccstest</text>
<text top="337" left="174" width="20" height="14" font="7">260</text>
<text top="337" left="233" width="23" height="14" font="7">0.32</text>
<text top="337" left="302" width="30" height="14" font="7">0.014</text>
<text top="337" left="395" width="30" height="14" font="7">0.033</text>
<text top="337" left="488" width="30" height="14" font="7">23.40</text>
<text top="337" left="584" width="23" height="14" font="7">9.65</text>
<text top="354" left="88" width="88" height="14" font="7">ladder100 9.27</text>
<text top="351" left="178" width="11" height="18" font="12">×</text>
<text top="354" left="192" width="13" height="14" font="7">10</text>
<text top="352" left="205" width="10" height="11" font="13">20</text>
<text top="354" left="230" width="30" height="14" font="7">11.31</text>
<text top="354" left="302" width="30" height="14" font="7">0.323</text>
<text top="354" left="395" width="30" height="14" font="7">0.097</text>
<text top="354" left="488" width="30" height="14" font="7">35.00</text>
<text top="354" left="577" width="37" height="14" font="7">116.92</text>
<text top="371" left="91" width="52" height="14" font="7">ladder21</text>
<text top="371" left="167" width="33" height="14" font="7">28657</text>
<text top="371" left="233" width="23" height="14" font="7">0.55</text>
<text top="371" left="302" width="30" height="14" font="7">0.021</text>
<text top="371" left="395" width="30" height="14" font="7">0.028</text>
<text top="371" left="488" width="30" height="14" font="7">25.69</text>
<text top="371" left="581" width="30" height="14" font="7">19.40</text>
<text top="387" left="95" width="46" height="14" font="7">ladder7</text>
<text top="387" left="178" width="13" height="14" font="7">34</text>
<text top="387" left="233" width="23" height="14" font="7">0.08</text>
<text top="387" left="302" width="30" height="14" font="7">0.007</text>
<text top="387" left="395" width="30" height="14" font="7">0.025</text>
<text top="387" left="488" width="30" height="14" font="7">10.86</text>
<text top="387" left="584" width="23" height="14" font="7">3.20</text>
<text top="404" left="97" width="40" height="14" font="7">rctree1</text>
<text top="404" left="155" width="23" height="14" font="7">1.15</text>
<text top="401" left="181" width="11" height="18" font="12">×</text>
<text top="404" left="195" width="13" height="14" font="7">10</text>
<text top="401" left="208" width="5" height="11" font="13">8</text>
<text top="404" left="233" width="23" height="14" font="7">2.53</text>
<text top="404" left="302" width="30" height="14" font="7">0.076</text>
<text top="404" left="395" width="30" height="14" font="7">0.057</text>
<text top="404" left="488" width="30" height="14" font="7">33.30</text>
<text top="404" left="581" width="30" height="14" font="7">44.71</text>
<text top="421" left="97" width="40" height="14" font="7">rctree2</text>
<text top="421" left="152" width="23" height="14" font="7">4.89</text>
<text top="418" left="178" width="11" height="18" font="12">×</text>
<text top="421" left="192" width="13" height="14" font="7">10</text>
<text top="419" left="205" width="10" height="11" font="13">10</text>
<text top="421" left="233" width="23" height="14" font="7">4.76</text>
<text top="421" left="302" width="30" height="14" font="7">0.134</text>
<text top="421" left="395" width="30" height="14" font="7">0.076</text>
<text top="421" left="488" width="30" height="14" font="7">35.51</text>
<text top="421" left="581" width="30" height="14" font="7">62.93</text>
<text top="438" left="99" width="36" height="14" font="7">rlctest</text>
<text top="438" left="174" width="20" height="14" font="7">572</text>
<text top="438" left="233" width="23" height="14" font="7">0.01</text>
<text top="438" left="302" width="30" height="14" font="7">0.001</text>
<text top="438" left="395" width="30" height="14" font="7">0.002</text>
<text top="438" left="491" width="23" height="14" font="7">8.82</text>
<text top="438" left="584" width="23" height="14" font="7">4.40</text>
<text top="451" left="98" width="39" height="17" font="11"><i>μ</i>A741</text>
<text top="454" left="164" width="40" height="14" font="7">363914</text>
<text top="454" left="233" width="23" height="14" font="7">0.84</text>
<text top="454" left="302" width="30" height="14" font="7">0.029</text>
<text top="454" left="395" width="30" height="14" font="7">0.029</text>
<text top="454" left="488" width="30" height="14" font="7">29.14</text>
<text top="454" left="581" width="30" height="14" font="7">29.27</text>
<text top="471" left="100" width="34" height="14" font="7">vcstst</text>
<text top="471" left="174" width="20" height="14" font="7">536</text>
<text top="471" left="233" width="23" height="14" font="7">0.28</text>
<text top="471" left="302" width="30" height="14" font="7">0.013</text>
<text top="471" left="395" width="30" height="14" font="7">0.029</text>
<text top="471" left="488" width="30" height="14" font="7">20.74</text>
<text top="471" left="584" width="23" height="14" font="7">9.62</text>
<text top="497" left="85" width="479" height="14" font="7">Table 2. Performance comparison for two implementations of <i>vself </i>data structure</text>
<text top="533" left="85" width="80" height="13" font="6"><b>6. Summary</b></text>
<text top="558" left="85" width="553" height="14" font="7">In this chapter, a GPU-based graph-based parallel analysis method for large analog circuits</text>
<text top="575" left="85" width="553" height="14" font="7">has been presented. Two data structures have been designed to cater the favor of GPU</text>
<text top="591" left="85" width="553" height="14" font="7">computation and device memory access pattern. Both the CPU version and the GPU version’s</text>
<text top="608" left="85" width="553" height="14" font="7">performance has been studied and compared for circuits with different number of product</text>
<text top="624" left="85" width="553" height="14" font="7">terms in MNA matrix. The GPU-based DDD evaluation performs much better than its</text>
<text top="641" left="85" width="553" height="14" font="7">CPU-based serial counterpart, especially for larger circuits. Experimental results from tests on</text>
<text top="657" left="85" width="553" height="14" font="7">a variety of industrial benchmark circuits show that the new evaluation algorithm can achieve</text>
<text top="673" left="85" width="553" height="14" font="7">about one to two order of magnitudes speedup over the serial CPU based evaluations on some</text>
<text top="690" left="85" width="553" height="14" font="7">large analog circuits. The presented parallel techniques can be also used for the parallelization</text>
<text top="706" left="85" width="553" height="14" font="7">of other decision diagrams based applications such as Binary Decision Diagrams (BDDs) for</text>
<text top="723" left="85" width="236" height="14" font="7">logic synthesis and formal veriﬁcations.</text>
<text top="759" left="85" width="91" height="13" font="6"><b>7. References</b></text>
<text top="784" left="85" width="512" height="14" font="7">Akers, S. B. (1976). Binary decision diagrams, <i>IEEE Trans. on Computers </i>27(6): 509–516.</text>
<text top="801" left="85" width="553" height="14" font="7">AMD Inc. (2006). Multi-core processors—the next evolution in computing (White Paper).</text>
<text top="819" left="138" width="194" height="11" font="7">http://multicore.amd.com</text>
<text top="817" left="331" width="3" height="14" font="7">.</text>
<text top="834" left="85" width="485" height="14" font="7">AMD Inc. (2011a). AMD developer center, http://developer.amd.com/GPU.</text>
<text top="850" left="85" width="553" height="14" font="7">AMD Inc. (2011b). AMD Steam SDK, http://developer.amd.com/gpu/ATIStreamSDK.</text>
<text top="867" left="85" width="553" height="14" font="7">Bryant, R. E. (1986). Graph-based algorithms for Boolean function manipulation, <i>IEEE Trans.</i></text>
<text top="883" left="138" width="153" height="14" font="11"><i>on Computers </i>pp. 677–691.</text>
<text top="71" left="617" width="23" height="20" font="7">127</text>
<text top="73" left="85" width="371" height="17" font="15">Parallel Symbolic Analysis of Large Analog Circuits on GPU Platforms</text>
</page>
<page number="16" position="absolute" top="0" left="0" height="1020" width="722">
<text top="81" left="85" width="8" height="7" font="10">16</text>
<text top="81" left="598" width="40" height="7" font="10">VLSI Design</text>
<text top="111" left="85" width="553" height="14" font="7">Bryant, R. E. (1995). Binary decision diagrams and beyond: enabling technologies for formal</text>
<text top="128" left="138" width="369" height="14" font="7">veriﬁcation, <i>Proc. Int. Conf. on Computer Aided Design (ICCAD)</i>.</text>
<text top="144" left="85" width="553" height="14" font="7">Gielen, G., Wambacq, P. &amp; Sansen, W. (1994). Symbolic analysis methods and applications for</text>
<text top="161" left="138" width="383" height="14" font="7">analog circuits: A tutorial overview, <i>Proc. of IEEE </i>82(2): 287–304.</text>
<text top="177" left="85" width="449" height="14" font="7">Göddeke, D. (2011). General-purpose computation using graphics harware,</text>
<text top="195" left="138" width="170" height="11" font="7">http://www.gpgpu.org/</text>
<text top="194" left="307" width="3" height="14" font="7">.</text>
<text top="210" left="85" width="233" height="14" font="7">Hachtel, G. D. &amp; Somenzi, F. (1996).</text>
<text top="210" left="334" width="304" height="14" font="11"><i>Logic Synthesis and Veriﬁcation Algorithm</i>, Kluwer</text>
<text top="226" left="138" width="129" height="14" font="7">Academic Publishers.</text>
<text top="243" left="85" width="553" height="14" font="7">Intel Corporation (2006). Intel multi-core processors, making the move to quad-core and</text>
<text top="259" left="138" width="394" height="14" font="7">beyond (White Paper). http://www.intel.com/multi-core.</text>
<text top="276" left="85" width="374" height="14" font="7">Khronos Group (2011). Open Computing Language (OpenCL),</text>
<text top="294" left="138" width="235" height="11" font="7">http://www.khronos.org/opencl</text>
<text top="292" left="372" width="3" height="14" font="7">.</text>
<text top="309" left="85" width="553" height="14" font="7">Kirk, D. B. &amp; Hwu, W.-M. (2010). <i>Programming Massively Parallel Processors: A Hands-on</i></text>
<text top="325" left="138" width="382" height="14" font="11"><i>Approach</i>, Morgan Kaufmann Publishers Inc., San Francisco, CA.</text>
<text top="341" left="85" width="553" height="14" font="7">Minato, S. (1993). Zero-suppressed BDDs for set manipulation in combinatorial problems,</text>
<text top="358" left="138" width="293" height="14" font="11"><i>Proc. Design Automation Conf. (DAC)</i>, pp. 272–277.</text>
<text top="374" left="85" width="553" height="14" font="7">Minato, S. (1996). <i>Binary Decision Diagrams and Application for VLSI CAD</i>, Kluwer Academic</text>
<text top="391" left="138" width="113" height="14" font="7">Publishers, Boston.</text>
<text top="407" left="85" width="332" height="14" font="7">NVIDIA Corporation (2011a). http://www.nvidia.com.</text>
<text top="424" left="85" width="196" height="14" font="7">NVIDIA Corporation (2011b).</text>
<text top="424" left="317" width="321" height="14" font="7">CUDA (Compute Uniﬁed Device Architecture).</text>
<text top="442" left="138" width="348" height="11" font="7">http://www.nvidia.com/object/cuda_home.html</text>
<text top="440" left="485" width="3" height="14" font="7">.</text>
<text top="457" left="85" width="553" height="14" font="7">Shi, C.-J. &amp; Tan, X.-D. (2000). Canonical symbolic analysis of large analog circuits with</text>
<text top="473" left="138" width="500" height="14" font="7">determinant decision diagrams, <i>IEEE Trans. on Computer-Aided Design of Integrated</i></text>
<text top="489" left="138" width="188" height="14" font="11"><i>Circuits and Systems </i>19(1): 1–18.</text>
<text top="506" left="85" width="553" height="14" font="7">Shi, C.-J. &amp; Tan, X.-D. (2001). Compact representation and efﬁcient generation of s-expanded</text>
<text top="522" left="138" width="500" height="14" font="7">symbolic network functions for computer-aided analog circuit design, <i>IEEE Trans. on</i></text>
<text top="539" left="138" width="418" height="14" font="11"><i>Computer-Aided Design of Integrated Circuits and Systems </i>20(7): 813–827.</text>
<text top="555" left="85" width="553" height="14" font="7">Shi, G. (2010a). Computational complexity analysis of determinant decision diagram, <i>IEEE</i></text>
<text top="572" left="138" width="497" height="14" font="11"><i>Trans. on Circuits and Systems II: Analog and Digital Signal Processing </i>57(10): 828 –832.</text>
<text top="588" left="85" width="553" height="14" font="7">Shi, G. (2010b). A simple implementation of determinant decision diagram, <i>Proc. Int. Conf. on</i></text>
<text top="604" left="138" width="257" height="14" font="11"><i>Computer Aided Design (ICCAD)</i>, pp. 70 –76.</text>
<text top="621" left="85" width="553" height="14" font="7">Tan, S. X.-D., Guo, W. &amp; Qi, Z. (2005). Hierarchical approach to exact symbolic analysis of</text>
<text top="637" left="138" width="500" height="14" font="7">large analog circuits, <i>IEEE Trans. on Computer-Aided Design of Integrated Circuits and</i></text>
<text top="654" left="138" width="151" height="14" font="11"><i>Systems </i>24(8): 1241–1250.</text>
<text top="670" left="85" width="553" height="14" font="7">Tan, X.-D. &amp; Shi, C.-J. (2000). Hierarchical symbolic analysis of large analog circuits via</text>
<text top="687" left="138" width="500" height="14" font="7">determinant decision diagrams, <i>IEEE Trans. on Computer-Aided Design of Integrated</i></text>
<text top="703" left="138" width="208" height="14" font="11"><i>Circuits and Systems </i>19(4): 401–412.</text>
<text top="71" left="85" width="23" height="20" font="7">128</text>
<text top="73" left="576" width="67" height="17" font="15">VLSI Design</text>
</page>
</pdf2xml>
