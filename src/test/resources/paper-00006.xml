<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE pdf2xml SYSTEM "pdf2xml.dtd">

<pdf2xml>
<page number="1" position="absolute" top="0" left="0" height="1188" width="918">
	<fontspec id="0" size="23" family="Times" color="#000000"/>
	<fontspec id="1" size="15" family="Times" color="#000000"/>
<text top="249" left="192" width="531" height="23" font="0">A Survey of Methods and Applications of</text>
<text top="282" left="338" width="242" height="23" font="0">Model Comparison</text>
<text top="357" left="321" width="275" height="23" font="0">Technical Report 2011-582</text>
<text top="433" left="276" width="367" height="23" font="0">Matthew Stephan, James R. Cordy</text>
<text top="502" left="378" width="161" height="16" font="1">School of Computing</text>
<text top="524" left="386" width="145" height="16" font="1">Queen’s University</text>
<text top="546" left="355" width="208" height="16" font="1">Kingston, Ontario, Canada</text>
<text top="566" left="339" width="241" height="17" font="1">{stephan,cordy}@cs.queensu.ca</text>
<text top="610" left="401" width="117" height="16" font="1">December 2011</text>
<text top="1002" left="255" width="407" height="16" font="1">Copyright c 2011 Matthew Stephan, James R. Cordy</text>
</page>
<page number="2" position="absolute" top="0" left="0" height="1188" width="918">
<text top="165" left="143" width="113" height="23" font="0">Contents</text>
<text top="219" left="143" width="10" height="16" font="1"><a href="pdfxml.html#5">1</a></text>
<text top="219" left="169" width="111" height="16" font="1"><a href="pdfxml.html#5">Introduction</a></text>
<text top="219" left="765" width="10" height="16" font="1">1</text>
<text top="267" left="143" width="10" height="16" font="1"><a href="pdfxml.html#6">2</a></text>
<text top="267" left="169" width="215" height="16" font="1"><a href="pdfxml.html#6">Background information</a></text>
<text top="267" left="765" width="10" height="16" font="1">2</text>
<text top="297" left="170" width="22" height="16" font="1"><a href="pdfxml.html#6">2.1</a></text>
<text top="297" left="210" width="524" height="16" font="1"><a href="pdfxml.html#6">High-level software models </a>. . . . . . . . . . . . . . . . . . . . . . .</text>
<text top="297" left="766" width="9" height="16" font="1">2</text>
<text top="328" left="170" width="22" height="16" font="1"><a href="pdfxml.html#7">2.2</a></text>
<text top="328" left="210" width="524" height="16" font="1"><a href="pdfxml.html#7">Model-Driven Engineering </a>. . . . . . . . . . . . . . . . . . . . . . .</text>
<text top="328" left="766" width="9" height="16" font="1">3</text>
<text top="359" left="210" width="36" height="16" font="1"><a href="pdfxml.html#8">2.2.1</a></text>
<text top="359" left="266" width="468" height="16" font="1"><a href="pdfxml.html#8">Model versioning </a>. . . . . . . . . . . . . . . . . . . . . . . .</text>
<text top="359" left="766" width="9" height="16" font="1">4</text>
<text top="389" left="210" width="36" height="16" font="1"><a href="pdfxml.html#9">2.2.2</a></text>
<text top="389" left="266" width="169" height="16" font="1"><a href="pdfxml.html#9">Model clone detection</a></text>
<text top="389" left="452" width="282" height="16" font="1">. . . . . . . . . . . . . . . . . . . . .</text>
<text top="389" left="766" width="9" height="16" font="1">5</text>
<text top="420" left="210" width="36" height="16" font="1"><a href="pdfxml.html#10">2.2.3</a></text>
<text top="420" left="266" width="141" height="16" font="1"><a href="pdfxml.html#10">Model comparison</a></text>
<text top="420" left="425" width="309" height="16" font="1">. . . . . . . . . . . . . . . . . . . . . . .</text>
<text top="420" left="766" width="9" height="16" font="1">6</text>
<text top="468" left="143" width="10" height="16" font="1"><a href="pdfxml.html#15">3</a></text>
<text top="468" left="169" width="395" height="16" font="1"><a href="pdfxml.html#15">Model comparison methods and applications</a></text>
<text top="468" left="755" width="20" height="16" font="1">11</text>
<text top="499" left="170" width="22" height="16" font="1"><a href="pdfxml.html#15">3.1</a></text>
<text top="499" left="210" width="524" height="16" font="1"><a href="pdfxml.html#15">Methods for multiple model types </a>. . . . . . . . . . . . . . . . . . .</text>
<text top="499" left="757" width="18" height="16" font="1">11</text>
<text top="530" left="210" width="36" height="16" font="1"><a href="pdfxml.html#15">3.1.1</a></text>
<text top="530" left="266" width="99" height="16" font="1"><a href="pdfxml.html#15">UML models</a></text>
<text top="530" left="383" width="351" height="16" font="1">. . . . . . . . . . . . . . . . . . . . . . . . . .</text>
<text top="530" left="757" width="18" height="16" font="1">11</text>
<text top="560" left="210" width="36" height="16" font="1"><a href="pdfxml.html#17">3.1.2</a></text>
<text top="560" left="266" width="99" height="16" font="1"><a href="pdfxml.html#17">EMF models</a></text>
<text top="560" left="383" width="351" height="16" font="1">. . . . . . . . . . . . . . . . . . . . . . . . . .</text>
<text top="560" left="757" width="18" height="16" font="1">13</text>
<text top="591" left="210" width="36" height="16" font="1"><a href="pdfxml.html#19">3.1.3</a></text>
<text top="591" left="266" width="468" height="16" font="1"><a href="pdfxml.html#19">Metamodel-agnostic approaches </a>. . . . . . . . . . . . . . . .</text>
<text top="591" left="757" width="18" height="16" font="1">15</text>
<text top="621" left="170" width="22" height="16" font="1"><a href="pdfxml.html#22">3.2</a></text>
<text top="621" left="210" width="524" height="16" font="1"><a href="pdfxml.html#22">Methods for behavior/data-ﬂow models </a>. . . . . . . . . . . . . . . .</text>
<text top="621" left="757" width="18" height="16" font="1">18</text>
<text top="652" left="210" width="36" height="16" font="1"><a href="pdfxml.html#22">3.2.1</a></text>
<text top="652" left="266" width="468" height="16" font="1"><a href="pdfxml.html#22">Simulink and Matlab models </a>. . . . . . . . . . . . . . . . . .</text>
<text top="652" left="757" width="18" height="16" font="1">18</text>
<text top="683" left="210" width="36" height="16" font="1"><a href="pdfxml.html#23">3.2.2</a></text>
<text top="683" left="266" width="468" height="16" font="1"><a href="pdfxml.html#23">Sequence diagrams </a>. . . . . . . . . . . . . . . . . . . . . . .</text>
<text top="683" left="757" width="18" height="16" font="1">19</text>
<text top="713" left="210" width="36" height="16" font="1"><a href="pdfxml.html#23">3.2.3</a></text>
<text top="713" left="266" width="155" height="16" font="1"><a href="pdfxml.html#23">Statechart diagrams</a></text>
<text top="713" left="438" width="296" height="16" font="1">. . . . . . . . . . . . . . . . . . . . . .</text>
<text top="713" left="757" width="18" height="16" font="1">19</text>
<text top="744" left="170" width="22" height="16" font="1"><a href="pdfxml.html#24">3.3</a></text>
<text top="744" left="210" width="524" height="16" font="1"><a href="pdfxml.html#24">Methods for structural models </a>. . . . . . . . . . . . . . . . . . . . .</text>
<text top="744" left="757" width="18" height="16" font="1">20</text>
<text top="775" left="210" width="36" height="16" font="1"><a href="pdfxml.html#25">3.3.1</a></text>
<text top="775" left="266" width="468" height="16" font="1"><a href="pdfxml.html#25">UML structural models </a>. . . . . . . . . . . . . . . . . . . . .</text>
<text top="775" left="757" width="18" height="16" font="1">21</text>
<text top="805" left="210" width="36" height="16" font="1"><a href="pdfxml.html#26">3.3.2</a></text>
<text top="805" left="266" width="468" height="16" font="1"><a href="pdfxml.html#26">Metamodel-agnostic approaches </a>. . . . . . . . . . . . . . . .</text>
<text top="805" left="757" width="18" height="16" font="1">22</text>
<text top="836" left="170" width="22" height="16" font="1"><a href="pdfxml.html#27">3.4</a></text>
<text top="836" left="210" width="524" height="16" font="1"><a href="pdfxml.html#27">Methods for product line architectures </a>. . . . . . . . . . . . . . . .</text>
<text top="836" left="757" width="18" height="16" font="1">23</text>
<text top="866" left="170" width="22" height="16" font="1"><a href="pdfxml.html#28">3.5</a></text>
<text top="866" left="210" width="524" height="16" font="1"><a href="pdfxml.html#28">Methods for process models </a>. . . . . . . . . . . . . . . . . . . . . .</text>
<text top="866" left="757" width="18" height="16" font="1">24</text>
<text top="897" left="170" width="22" height="16" font="1"><a href="pdfxml.html#28">3.6</a></text>
<text top="897" left="210" width="74" height="16" font="1"><a href="pdfxml.html#28">Summary</a></text>
<text top="897" left="300" width="434" height="16" font="1">. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .</text>
<text top="897" left="757" width="18" height="16" font="1">24</text>
<text top="945" left="143" width="10" height="16" font="1"><a href="pdfxml.html#31">4</a></text>
<text top="945" left="169" width="258" height="16" font="1"><a href="pdfxml.html#31">Potential for pattern analysis</a></text>
<text top="945" left="755" width="20" height="16" font="1">27</text>
<text top="976" left="170" width="22" height="16" font="1"><a href="pdfxml.html#31">4.1</a></text>
<text top="976" left="210" width="524" height="16" font="1"><a href="pdfxml.html#31">Inferring patterns </a>. . . . . . . . . . . . . . . . . . . . . . . . . . . .</text>
<text top="976" left="757" width="18" height="16" font="1">27</text>
<text top="1007" left="170" width="22" height="16" font="1"><a href="pdfxml.html#32">4.2</a></text>
<text top="1007" left="210" width="524" height="16" font="1"><a href="pdfxml.html#32">Detecting known patterns </a>. . . . . . . . . . . . . . . . . . . . . . .</text>
<text top="1007" left="757" width="18" height="16" font="1">28</text>
<text top="1112" left="457" width="5" height="16" font="1">i</text>
</page>
<page number="3" position="absolute" top="0" left="0" height="1188" width="918">
<text top="170" left="143" width="10" height="16" font="1"><a href="pdfxml.html#33">5</a></text>
<text top="170" left="169" width="118" height="16" font="1"><a href="pdfxml.html#33">Related work</a></text>
<text top="170" left="755" width="20" height="16" font="1">29</text>
<text top="201" left="170" width="22" height="16" font="1"><a href="pdfxml.html#33">5.1</a></text>
<text top="201" left="210" width="524" height="16" font="1"><a href="pdfxml.html#33">Other comparison approaches </a>. . . . . . . . . . . . . . . . . . . . .</text>
<text top="201" left="757" width="18" height="16" font="1">29</text>
<text top="232" left="210" width="36" height="16" font="1"><a href="pdfxml.html#33">5.1.1</a></text>
<text top="232" left="266" width="468" height="16" font="1"><a href="pdfxml.html#33">Code comparison techniques </a>. . . . . . . . . . . . . . . . . .</text>
<text top="232" left="757" width="18" height="16" font="1">29</text>
<text top="262" left="210" width="36" height="16" font="1"><a href="pdfxml.html#33">5.1.2</a></text>
<text top="262" left="266" width="468" height="16" font="1"><a href="pdfxml.html#33">Textual model comparison </a>. . . . . . . . . . . . . . . . . . .</text>
<text top="262" left="757" width="18" height="16" font="1">29</text>
<text top="293" left="210" width="36" height="16" font="1"><a href="pdfxml.html#33">5.1.3</a></text>
<text top="293" left="266" width="468" height="16" font="1"><a href="pdfxml.html#33">Code clone detection </a>. . . . . . . . . . . . . . . . . . . . . .</text>
<text top="293" left="757" width="18" height="16" font="1">29</text>
<text top="323" left="210" width="36" height="16" font="1"><a href="pdfxml.html#33">5.1.4</a></text>
<text top="323" left="266" width="197" height="16" font="1"><a href="pdfxml.html#33">Translation to formalisms</a></text>
<text top="323" left="480" width="254" height="16" font="1">. . . . . . . . . . . . . . . . . . .</text>
<text top="323" left="757" width="18" height="16" font="1">29</text>
<text top="354" left="170" width="22" height="16" font="1"><a href="pdfxml.html#34">5.2</a></text>
<text top="354" left="210" width="142" height="16" font="1"><a href="pdfxml.html#34">Graph comparison</a></text>
<text top="354" left="369" width="365" height="16" font="1">. . . . . . . . . . . . . . . . . . . . . . . . . . .</text>
<text top="354" left="757" width="18" height="16" font="1">30</text>
<text top="385" left="170" width="22" height="16" font="1"><a href="pdfxml.html#34">5.3</a></text>
<text top="385" left="210" width="170" height="16" font="1"><a href="pdfxml.html#34">Related survey papers</a></text>
<text top="385" left="397" width="337" height="16" font="1">. . . . . . . . . . . . . . . . . . . . . . . . .</text>
<text top="385" left="757" width="18" height="16" font="1">30</text>
<text top="433" left="143" width="10" height="16" font="1"><a href="pdfxml.html#35">6</a></text>
<text top="433" left="169" width="97" height="16" font="1"><a href="pdfxml.html#35">Conclusion</a></text>
<text top="433" left="755" width="20" height="16" font="1">31</text>
<text top="1112" left="454" width="10" height="16" font="1">ii</text>
</page>
<page number="4" position="absolute" top="0" left="0" height="1188" width="918">
<text top="165" left="143" width="185" height="23" font="0">List of Figures</text>
<text top="219" left="170" width="9" height="16" font="1"><a href="pdfxml.html#9">1</a></text>
<text top="219" left="210" width="524" height="16" font="1"><a href="pdfxml.html#9">Example of conﬂicting changes to the same model </a>. . . . . . . . . .</text>
<text top="219" left="766" width="9" height="16" font="1">5</text>
<text top="249" left="170" width="9" height="16" font="1"><a href="pdfxml.html#10">2</a></text>
<text top="249" left="210" width="524" height="16" font="1"><a href="pdfxml.html#10">Model clone example </a>. . . . . . . . . . . . . . . . . . . . . . . . . .</text>
<text top="249" left="766" width="9" height="16" font="1">6</text>
<text top="280" left="170" width="9" height="16" font="1"><a href="pdfxml.html#11">3</a></text>
<text top="280" left="210" width="524" height="16" font="1"><a href="pdfxml.html#11">Model comparison deﬁnition </a>. . . . . . . . . . . . . . . . . . . . . .</text>
<text top="280" left="766" width="9" height="16" font="1">7</text>
<text top="311" left="170" width="9" height="16" font="1"><a href="pdfxml.html#17">4</a></text>
<text top="311" left="210" width="524" height="16" font="1"><a href="pdfxml.html#17">RSA ’Compare Model with Local History’ window </a>. . . . . . . . . .</text>
<text top="311" left="757" width="18" height="16" font="1">13</text>
<text top="341" left="170" width="9" height="16" font="1"><a href="pdfxml.html#19">5</a></text>
<text top="341" left="210" width="226" height="16" font="1"><a href="pdfxml.html#19">Meta models from Maudeling</a></text>
<text top="341" left="452" width="282" height="16" font="1">. . . . . . . . . . . . . . . . . . . . .</text>
<text top="341" left="757" width="18" height="16" font="1">15</text>
<text top="372" left="170" width="9" height="16" font="1"><a href="pdfxml.html#22">6</a></text>
<text top="372" left="210" width="524" height="16" font="1"><a href="pdfxml.html#22">Normalised model graph of model clone example </a>. . . . . . . . . . .</text>
<text top="372" left="757" width="18" height="16" font="1">18</text>
<text top="402" left="170" width="9" height="16" font="1"><a href="pdfxml.html#24">7</a></text>
<text top="402" left="210" width="524" height="16" font="1"><a href="pdfxml.html#24">Duplicate sequence fragment </a>. . . . . . . . . . . . . . . . . . . . . .</text>
<text top="402" left="757" width="18" height="16" font="1">20</text>
<text top="433" left="170" width="9" height="16" font="1"><a href="pdfxml.html#27">8</a></text>
<text top="433" left="210" width="524" height="16" font="1"><a href="pdfxml.html#27">Example of SiDiﬀ Comparison </a>. . . . . . . . . . . . . . . . . . . . .</text>
<text top="433" left="757" width="18" height="16" font="1">23</text>
<text top="497" left="143" width="172" height="23" font="0">List of Tables</text>
<text top="550" left="170" width="9" height="16" font="1"><a href="pdfxml.html#30">1</a></text>
<text top="550" left="210" width="524" height="16" font="1"><a href="pdfxml.html#30">Summary of Model Comparison Approaches </a>. . . . . . . . . . . . .</text>
<text top="550" left="757" width="18" height="16" font="1">26</text>
<text top="1112" left="452" width="15" height="16" font="1">iii</text>
</page>
<page number="5" position="absolute" top="0" left="0" height="1188" width="918">
<text top="165" left="143" width="15" height="23" font="0">1</text>
<text top="165" left="187" width="160" height="23" font="0">Introduction</text>
<text top="219" left="143" width="632" height="16" font="1">High-level software models are representations of software artifacts or processes</text>
<text top="240" left="143" width="632" height="16" font="1">that are at a higher level of abstraction than source code. This includes structural</text>
<text top="262" left="143" width="632" height="16" font="1">modeling techniques, like the use of the Uniﬁed Modeling Language’s (UML) class</text>
<text top="284" left="143" width="632" height="16" font="1">diagrams; behavioral modeling, such as done with sequence diagrams; and data-ﬂow</text>
<text top="305" left="143" width="441" height="16" font="1">modeling techniques, most notably Simulink and Matlab.</text>
<text top="336" left="170" width="605" height="16" font="1">A relatively new approach to software engineering is the use of Model-driven</text>
<text top="358" left="143" width="632" height="16" font="1">Engineering (MDE). MDE involves using high-level software models as the main</text>
<text top="379" left="143" width="632" height="16" font="1">artifacts within the development cycle. As MDE becomes more prevalent in the</text>
<text top="401" left="143" width="632" height="16" font="1">software engineering community, the need for eﬀective approaches for ﬁnding the</text>
<text top="423" left="143" width="632" height="16" font="1">similarities and diﬀerences among high-level software models, or model comparison,</text>
<text top="444" left="143" width="160" height="16" font="1">becomes imperative.</text>
<text top="444" left="323" width="452" height="16" font="1">Since MDE involves models being considered ﬁrst class</text>
<text top="466" left="143" width="632" height="16" font="1">artifacts by developers, it is clear model comparison is important as it assists model</text>
<text top="488" left="143" width="632" height="16" font="1">management and may help facilitate analysis of existing projects and research on</text>
<text top="509" left="143" width="632" height="16" font="1">MDE. It not only provides merit as a stand-alone task, but it helps engineers with</text>
<text top="531" left="143" width="632" height="16" font="1">other MDE tasks such as model composition and model transformation testing <a href="pdfxml.html#39">[39].</a></text>
<text top="562" left="170" width="605" height="16" font="1">In this technical report we will investigate the current state of model comparison</text>
<text top="583" left="143" width="632" height="16" font="1">research. The goals in doing this are to a provide an overview of the area and also to</text>
<text top="605" left="143" width="632" height="16" font="1">ascertain the capability of existing model comparison techniques to identify common</text>
<text top="627" left="143" width="632" height="16" font="1">sub-structures or patterns within models. These patterns can ideally be used by</text>
<text top="648" left="143" width="632" height="16" font="1">project engineers to facilitate analysis and assist in the development of future MDE</text>
<text top="670" left="143" width="632" height="16" font="1">projects. This technical report will describe, in brief, the phases of comparison and</text>
<text top="692" left="143" width="632" height="16" font="1">will also investigate and describe the various uses/applications of model comparison</text>
<text top="713" left="143" width="502" height="16" font="1">including model versioning, model-clone detection, and others.</text>
<text top="713" left="664" width="111" height="16" font="1">This technical</text>
<text top="735" left="143" width="632" height="16" font="1">report will also help those looking to use model comparison techniques by acting</text>
<text top="757" left="143" width="589" height="16" font="1">as a quick reference guide organized by the types of models being compared.</text>
<text top="787" left="170" width="605" height="16" font="1">This technical report begins by providing background information on MDE and</text>
<text top="809" left="143" width="632" height="16" font="1">model comparison in Section <a href="pdfxml.html#6">2 </a>in order to facilitate understanding of the material</text>
<text top="831" left="143" width="632" height="16" font="1">that follows to those not versed in these areas. Section <a href="pdfxml.html#15">3 </a>categorizes the existing</text>
<text top="852" left="143" width="632" height="16" font="1">model comparison approaches by the type and subtype of models that they are used</text>
<text top="874" left="143" width="632" height="16" font="1">to compare and provides summaries of the approaches, organized by both model</text>
<text top="896" left="143" width="632" height="16" font="1">type and application. Section <a href="pdfxml.html#31">4 </a>provides a qualitative evaluation and generalization</text>
<text top="917" left="143" width="632" height="16" font="1">of the approaches identiﬁed in the previous section in regards to their potential for</text>
<text top="939" left="143" width="632" height="16" font="1">identifying sub-model patterns. Section <a href="pdfxml.html#33">5 </a>attempts to identify other techniques</text>
<text top="961" left="143" width="632" height="16" font="1">and approaches related to the model comparison work discussed in this technical</text>
<text top="982" left="143" width="371" height="16" font="1">report. Section <a href="pdfxml.html#35">6 </a>concludes the technical report.</text>
<text top="1112" left="455" width="9" height="16" font="1">1</text>
</page>
<page number="6" position="absolute" top="0" left="0" height="1188" width="918">
	<fontspec id="2" size="19" family="Times" color="#000000"/>
	<fontspec id="3" size="9" family="Times" color="#000000"/>
	<fontspec id="4" size="8" family="Times" color="#000000"/>
	<fontspec id="5" size="12" family="Times" color="#000000"/>
<text top="165" left="143" width="15" height="23" font="0">2</text>
<text top="165" left="187" width="309" height="23" font="0">Background information</text>
<text top="219" left="143" width="632" height="16" font="1">This section is intended to provide readers that may not have much experience</text>
<text top="240" left="143" width="632" height="16" font="1">with software modeling or model-driven engineering with suﬃcient background</text>
<text top="262" left="143" width="632" height="16" font="1">information so they can understand the remainder of the technical report. It begins,</text>
<text top="284" left="143" width="632" height="16" font="1">in Section <a href="pdfxml.html#6">2.1, </a>with a description of high-level software models. It then continues</text>
<text top="305" left="143" width="632" height="16" font="1">by describing how these models are used to achieve model-driven engineering</text>
<text top="327" left="143" width="632" height="16" font="1">in Section <a href="pdfxml.html#7">2.2. </a>Within Section <a href="pdfxml.html#7">2.2, </a>we describe model versioning, model clone</text>
<text top="349" left="143" width="489" height="16" font="1">detection, and the general idea and usage of model comparison.</text>
<text top="407" left="143" width="31" height="19" font="2">2.1</text>
<text top="407" left="198" width="284" height="19" font="2">High-level software models</text>
<text top="452" left="143" width="632" height="16" font="1">As both the hardware on our computers becomes more advanced and the complexity</text>
<text top="474" left="143" width="632" height="16" font="1">of the software tasks that we ’program’ on this hardware increases, so does the</text>
<text top="495" left="143" width="632" height="16" font="1">need for abstracting away implementation details that are at a lower level. At the</text>
<text top="517" left="143" width="632" height="16" font="1">basic level, a computer is reading what we call machine language, that is, electrical</text>
<text top="539" left="143" width="632" height="16" font="1">signals that are either on or oﬀ. However, rather than programming all our tasks</text>
<text top="560" left="143" width="632" height="16" font="1">in 0 or 1s, it became necessary to hide away, or ’abstract’, this language into a</text>
<text top="582" left="143" width="632" height="16" font="1">higher level language known as assembly. As time progressed, however, assembly</text>
<text top="604" left="143" width="632" height="16" font="1">language was inadequately suited to allow for complex software development, so</text>
<text top="625" left="143" width="632" height="16" font="1">third-generation programming languages (3GL) arose. These are what we commonly</text>
<text top="647" left="143" width="632" height="16" font="1">refer to as ’Programming Languages’ today and include late-3GL languages like</text>
<text top="669" left="143" width="632" height="16" font="1">C++, Turing, Java, and many others. These languages allow developers to make</text>
<text top="690" left="143" width="632" height="16" font="1">large systems capable of very advanced tasks, however, managing and implementing</text>
<text top="712" left="143" width="614" height="16" font="1">the engineering of these systems has proven to be a very challenging endeavour.</text>
<text top="743" left="170" width="605" height="16" font="1">One relatively recent approach for designing and implementing complex software</text>
<text top="764" left="143" width="632" height="16" font="1">systems is representing the artifacts within these systems at an even higher</text>
<text top="786" left="143" width="632" height="16" font="1">level of abstraction through the use of, what we call, high-level software models.</text>
<text top="808" left="143" width="632" height="16" font="1">These models can describe the structure, behavior, and many other aspects of</text>
<text top="829" left="143" width="632" height="16" font="1">the software system that would be diﬃcult to explain through programming</text>
<text top="851" left="143" width="632" height="16" font="1">languages alone. The most popular and widely used example of this is the Uniﬁed</text>
<text top="873" left="143" width="208" height="16" font="1">Modeling <a href="pdfxml.html#6">Language(UML)</a></text>
<text top="870" left="351" width="6" height="11" font="3"><a href="pdfxml.html#6">1</a></text>
<text top="873" left="358" width="417" height="16" font="1"><a href="pdfxml.html#6">, </a>which attempts to include the entire spectrum of</text>
<text top="894" left="143" width="632" height="16" font="1">models. However, there are many others out there, many of which are suited to a</text>
<text top="916" left="143" width="632" height="16" font="1">speciﬁc domain. These high-level software models are expressed through a modeling</text>
<text top="938" left="143" width="632" height="16" font="1">language that expresses a meta model. A meta model is another model, typically</text>
<text top="959" left="143" width="632" height="16" font="1">at the same level of abstraction, that describes a set of valid models. The most</text>
<text top="981" left="143" width="515" height="16" font="1">notable meta modeling standard is the Meta-Object Facility (MOF)</text>
<text top="979" left="663" width="6" height="11" font="3"><a href="pdfxml.html#6">2</a></text>
<text top="981" left="674" width="101" height="16" font="1">model, which</text>
<text top="1003" left="143" width="632" height="16" font="1">UML happens to be deﬁned in. Most recently, however, is the advent of Domain</text>
<text top="1034" left="163" width="6" height="9" font="4">1</text>
<text top="1037" left="170" width="141" height="13" font="5">http://www.uml.org/</text>
<text top="1052" left="163" width="6" height="9" font="4">2</text>
<text top="1055" left="170" width="175" height="13" font="5">http://www.omg.org/mof/</text>
<text top="1112" left="455" width="9" height="16" font="1">2</text>
</page>
<page number="7" position="absolute" top="0" left="0" height="1188" width="918">
<text top="170" left="143" width="632" height="16" font="1">Speciﬁc Models (DSM) <a href="pdfxml.html#38">[33]. </a>Whereas UML models conform to a single meta model</text>
<text top="192" left="143" width="632" height="16" font="1">and are meant to be general-purpose, DSMs are models that conform to a meta</text>
<text top="214" left="143" width="632" height="16" font="1">model that is tailored to the domain that the models are operating within. This</text>
<text top="235" left="143" width="632" height="16" font="1">domain speciﬁc meta model is known as the Domain-Speciﬁc Modeling Language</text>
<text top="257" left="143" width="632" height="16" font="1">(DSML). Matlab and Simulink <a href="pdfxml.html#36">[8] </a>can be seen as DSMLs that are used heavily in</text>
<text top="279" left="143" width="396" height="16" font="1">the automotive domain for embedded control units.</text>
<text top="337" left="143" width="31" height="19" font="2">2.2</text>
<text top="337" left="198" width="281" height="19" font="2">Model-Driven Engineering</text>
<text top="382" left="143" width="632" height="16" font="1">In Model-Driven Engineering (MDE), or Model-Driven Development <a href="pdfxml.html#42">[74], </a>these</text>
<text top="403" left="143" width="632" height="16" font="1">High-Level Software Models, or simply models, are the main artifacts used by</text>
<text top="425" left="143" width="525" height="16" font="1">developers during the creation and evolution of software systems.</text>
<text top="425" left="684" width="91" height="16" font="1">The idea is</text>
<text top="447" left="143" width="632" height="16" font="1">that, in the same way abstracting machine language into programming languages</text>
<text top="468" left="143" width="632" height="16" font="1">allows us to eﬃciently develop and express more complex applications, representing</text>
<text top="490" left="143" width="632" height="16" font="1">our systems as models rather than programming-language code should allow us to</text>
<text top="512" left="143" width="632" height="16" font="1">develop more complex applications and express them in a better way. So, in an ideal</text>
<text top="533" left="143" width="632" height="16" font="1">MDE environment, models are ﬁrst-class artifacts. This means that in all stages of</text>
<text top="555" left="143" width="632" height="16" font="1">a system’s existence, these models are the only things that are created, updated,</text>
<text top="577" left="143" width="632" height="16" font="1">shared, analyzed, and used. In order to accomplish this, however, these models</text>
<text top="598" left="143" width="632" height="16" font="1">must be powerful enough and have a suﬃcient support structure in place so that</text>
<text top="620" left="143" width="632" height="16" font="1">they are easier to work with than the programming-language code they represent.</text>
<text top="642" left="143" width="632" height="16" font="1">This includes the ability to automate code generation from models and being able</text>
<text top="663" left="143" width="632" height="16" font="1">to verify these models are correctly representing the system <a href="pdfxml.html#42">[74]. </a>Computer-Aided</text>
<text top="685" left="143" width="163" height="16" font="1">Software Engineering</text>
<text top="683" left="312" width="6" height="11" font="3"><a href="pdfxml.html#7">3</a></text>
<text top="685" left="325" width="450" height="16" font="1">(CASE) is sometimes seen as the predecessor of MDE and</text>
<text top="707" left="143" width="506" height="16" font="1">is occasionally used as a synonym or more general term for MDE.</text>
<text top="737" left="170" width="605" height="16" font="1">While MDE aﬀords many of the beneﬁts discussed and more, these beneﬁts</text>
<text top="759" left="143" width="632" height="16" font="1">do not come easily or without challenges. Firstly, there are the problems that</text>
<text top="781" left="143" width="632" height="16" font="1">are unique to the nature of MDE including redundancy of information; the need</text>
<text top="802" left="143" width="632" height="16" font="1">for “round tripping”, or synchronization, between models and code; the possibility</text>
<text top="824" left="143" width="632" height="16" font="1">that the complexity is being moved rather than reduced; and the need for modelers</text>
<text top="846" left="143" width="632" height="16" font="1">to have an understanding of the entire system <a href="pdfxml.html#38">[34]. </a>Aside from these problems</text>
<text top="867" left="143" width="632" height="16" font="1">that stem from the essence of MDE, there are challenges that arise that are</text>
<text top="889" left="143" width="632" height="16" font="1">also present when working with programming languages. While analogous, the</text>
<text top="911" left="143" width="632" height="16" font="1">MDE equivalent of these problems are by no means identical nor trivial and</text>
<text top="932" left="143" width="490" height="16" font="1">typically require a diﬀerent approach in dealing with them.</text>
<text top="932" left="654" width="121" height="16" font="1">Some examples</text>
<text top="954" left="143" width="632" height="16" font="1">include model transformation <a href="pdfxml.html#42">[77], </a>cross-cutting concerns in models <a href="pdfxml.html#38">[23, 26], </a>model</text>
<text top="976" left="143" width="632" height="16" font="1">versioning/evolution, model clones, and problems encountered with the modeling</text>
<text top="997" left="143" width="632" height="16" font="1">languages themselves <a href="pdfxml.html#38">[28, 34, 27]</a>. For the purpose of this technical report, we</text>
<text top="1019" left="143" width="632" height="16" font="1">will elaborate on model versioning and model clones only, as these are topics that</text>
<text top="1051" left="163" width="6" height="9" font="4">3</text>
<text top="1053" left="170" width="142" height="13" font="5">http://case-tools.org/</text>
<text top="1112" left="455" width="9" height="16" font="1">3</text>
</page>
<page number="8" position="absolute" top="0" left="0" height="1188" width="918">
<text top="170" left="143" width="632" height="16" font="1">involve model comparison. This will be done in Section <a href="pdfxml.html#8">2.2.1 </a>and Section <a href="pdfxml.html#9">2.2.2,</a></text>
<text top="192" left="143" width="93" height="16" font="1">respectively.</text>
<text top="248" left="143" width="41" height="16" font="1">2.2.1</text>
<text top="248" left="205" width="152" height="16" font="1">Model versioning</text>
<text top="290" left="143" width="632" height="16" font="1">The need for collaboration amongst teams in MDE projects is just as signiﬁcant</text>
<text top="312" left="143" width="632" height="16" font="1">as it is in traditional software projects. Traditional software projects achieve this</text>
<text top="333" left="143" width="411" height="16" font="1">through Version Control Systems (VCS) such as <a href="pdfxml.html#8">CVS</a></text>
<text top="331" left="554" width="6" height="11" font="3"><a href="pdfxml.html#8">4</a></text>
<text top="333" left="566" width="116" height="16" font="1">and Subv<a href="pdfxml.html#8">ersion</a></text>
<text top="331" left="683" width="6" height="11" font="3"><a href="pdfxml.html#8">5</a></text>
<text top="333" left="690" width="85" height="16" font="1"><a href="pdfxml.html#8">. </a>Similarly,</text>
<text top="355" left="143" width="632" height="16" font="1">for MDE, it is imperative that modelers are able to work on system models</text>
<text top="377" left="143" width="632" height="16" font="1">independently but then be able to reintegrate their updated versions back into</text>
<text top="398" left="143" width="632" height="16" font="1">the main project repository. However, while team member Alice is working on</text>
<text top="420" left="143" width="632" height="16" font="1">their model(s), team member Bob may be making and submitting changes at the</text>
<text top="442" left="143" width="632" height="16" font="1">same time to those models that need to be integrated into the latest version and</text>
<text top="463" left="143" width="632" height="16" font="1">may even conﬂict with the updates being made by Alice. Consider the example in</text>
<text top="485" left="143" width="632" height="16" font="1">Figure <a href="pdfxml.html#9">1. </a>Firstly, it shows an example of a model, V, being changed simultaneously</text>
<text top="507" left="143" width="632" height="16" font="1">by one team member to model V’, which involves a reference from Person to</text>
<text top="528" left="143" width="632" height="16" font="1">Passport, and by another team member to V”, which is a model that has combined</text>
<text top="550" left="143" width="632" height="16" font="1">Person and Passport. More importantly, however, it shows an example of a conﬂict</text>
<text top="572" left="143" width="422" height="16" font="1">that a traditional VCS would not be able to detect.</text>
<text top="572" left="581" width="194" height="16" font="1">V* contains the changes</text>
<text top="593" left="143" width="632" height="16" font="1">made by both modelers, which, in this case, leaves us with a “dangling reference”</text>
<text top="615" left="143" width="632" height="16" font="1">problem <a href="pdfxml.html#36">[6]. </a>Section <a href="pdfxml.html#33">5.1.2 </a>discusses more shortcomings of traditional text-based</text>
<text top="637" left="143" width="632" height="16" font="1">VCS approaches, however, the important thing to take away from the example is</text>
<text top="658" left="143" width="431" height="16" font="1">that model versioning is a non-trivial area within MDE.</text>
<text top="689" left="170" width="605" height="16" font="1">Model versioning is broken into diﬀerent sets of phases by diﬀerent people <a href="pdfxml.html#36">[2, 5,</a></text>
<text top="711" left="143" width="632" height="16" font="1"><a href="pdfxml.html#39">36]. </a>However, generally, it is seen to require a form of model comparison or model</text>
<text top="732" left="143" width="632" height="16" font="1">matching, that is, the identiﬁcation of what model elements correspond to what</text>
<text top="754" left="143" width="632" height="16" font="1">other model elements; detection and representation of diﬀerences and conﬂicts;</text>
<text top="776" left="143" width="632" height="16" font="1">and model merging, that is, combining the changes made to corresponding model</text>
<text top="797" left="143" width="632" height="16" font="1">elements while taking conﬂicts into account. So, for example, we could break down</text>
<text top="819" left="143" width="632" height="16" font="1">the phases of model versioning with respect to our example in Figure <a href="pdfxml.html#9">1: </a>model</text>
<text top="841" left="143" width="632" height="16" font="1">comparison would identify that the model V’ and V” refer to the same root model</text>
<text top="862" left="143" width="632" height="16" font="1">or concept; the conﬂict detection phase would identify the conﬂicting changes in V’</text>
<text top="884" left="143" width="632" height="16" font="1">and V” and, ideally, how to resolve them; a merge of V’ and V” would be done by</text>
<text top="906" left="143" width="632" height="16" font="1">the VCS yielding a correct version of V*. For the purpose of this technical report,</text>
<text top="927" left="143" width="632" height="16" font="1">we focus mainly on the ﬁrst phase, model comparison. While the other phases are</text>
<text top="949" left="143" width="632" height="16" font="1">equally as important, we are mostly interested in the way in which various model</text>
<text top="971" left="143" width="378" height="16" font="1">versioning approaches achieve model comparison.</text>
<text top="1003" left="163" width="6" height="9" font="4">4</text>
<text top="1005" left="170" width="191" height="13" font="5">http://www.nongnu.org/cvs/</text>
<text top="1020" left="163" width="6" height="9" font="4">5</text>
<text top="1023" left="170" width="177" height="13" font="5">http://subversion.tigris.org</text>
<text top="1112" left="455" width="9" height="16" font="1">4</text>
</page>
<page number="9" position="absolute" top="0" left="0" height="1188" width="918">
<text top="572" left="216" width="486" height="16" font="1">Figure 1: Example of conﬂicting changes to the same model <a href="pdfxml.html#36">[6]</a></text>
<text top="622" left="143" width="41" height="16" font="1">2.2.2</text>
<text top="622" left="205" width="195" height="16" font="1">Model clone detection</text>
<text top="662" left="143" width="632" height="16" font="1">Another example of model comparison being used in a diﬀerent and speciﬁc context</text>
<text top="684" left="143" width="632" height="16" font="1">is model clone detection. We quickly provide background information in this section</text>
<text top="706" left="143" width="628" height="16" font="1">about model clone detection as it is discussed in many of the sections that follow.</text>
<text top="735" left="170" width="605" height="16" font="1">In 3GL software projects, a code clone refers to collections of code that are</text>
<text top="757" left="143" width="582" height="16" font="1">deemed similar to one another through some measure of similarity <a href="pdfxml.html#39">[42].</a></text>
<text top="757" left="744" width="31" height="16" font="1">One</text>
<text top="778" left="143" width="632" height="16" font="1">common reason that code clones exist in these projects include the implementation</text>
<text top="800" left="143" width="632" height="16" font="1">of a similar concept throughout the same system. The problem with code clones</text>
<text top="822" left="143" width="632" height="16" font="1">is that a change in this one concept means that the system must be updated in</text>
<text top="843" left="143" width="632" height="16" font="1">multiple places, which, sometimes, is forgotten or diﬃcult to do. Despite the fact</text>
<text top="865" left="143" width="632" height="16" font="1">that clones are generally seen as a negative, they are still introduced because of</text>
<text top="887" left="143" width="632" height="16" font="1">factors like poor reuse practices, time constraints, lack of knowledge about cloning,</text>
<text top="908" left="143" width="632" height="16" font="1">and others <a href="pdfxml.html#39">[42]. </a>The research area devoted to the study, identiﬁcation, evolution,</text>
<text top="930" left="143" width="632" height="16" font="1">and refactoring of code clones is very mature and there are many techniques and</text>
<text top="952" left="143" width="381" height="16" font="1">tools that are in existence to deal with them <a href="pdfxml.html#42">[69].</a></text>
<text top="981" left="170" width="605" height="16" font="1">The analogous problem of model clones is having various sets of models or</text>
<text top="1003" left="143" width="632" height="16" font="1">model elements that are shown to be similar in some deﬁned fashion. While the</text>
<text top="1024" left="143" width="632" height="16" font="1">cause of and the problems that arise from code cloning do not come as a result</text>
<text top="1046" left="143" width="632" height="16" font="1">of the programming languages themselves, techniques intended to deal with code</text>
<text top="1068" left="143" width="632" height="16" font="1">clones <a href="pdfxml.html#42">[69] </a>are textual in nature and not well suited for model clones. In comparison</text>
<text top="1112" left="455" width="9" height="16" font="1">5</text>
</page>
<page number="10" position="absolute" top="0" left="0" height="1188" width="918">
<text top="170" left="143" width="632" height="16" font="1">to code clone detection, the research related to model clone detection is quite</text>
<text top="192" left="143" width="92" height="16" font="1">limited <a href="pdfxml.html#37">[20].</a></text>
<text top="222" left="170" width="605" height="16" font="1">An important consideration about model clone detection is that it is an NP-</text>
<text top="244" left="143" width="632" height="16" font="1">complete problem because it is a special case of the largest common sub graph</text>
<text top="266" left="143" width="632" height="16" font="1">problem <a href="pdfxml.html#38">[30]. </a>This problem entails looking for common sub graphs within a single</text>
<text top="287" left="143" width="632" height="16" font="1">graph. There are two main approaches that have evolved in the area of model</text>
<text top="309" left="143" width="632" height="16" font="1">clone detection: Deissenboeck et al. <a href="pdfxml.html#37">[21] </a>employ a heuristic approach that uses</text>
<text top="331" left="143" width="632" height="16" font="1">Depth First Search (DFS) to choose the single path that appears the most likely</text>
<text top="352" left="143" width="632" height="16" font="1">to be a clone match, while Pham et al. <a href="pdfxml.html#41">[63] </a>propose an algorithm, entitled eScan,</text>
<text top="374" left="143" width="632" height="16" font="1">that uses graph mining algorithms and some domain-(Simulink-) speciﬁc knowledge</text>
<text top="396" left="143" width="632" height="16" font="1">to identify model clones. Both of these approaches are geared towards data-ﬂow</text>
<text top="417" left="143" width="632" height="16" font="1">modeling, speciﬁcally Simulink and Matlab. An example of a clone in data-ﬂow</text>
<text top="439" left="143" width="632" height="16" font="1">modeling is displayed in Figure <a href="pdfxml.html#10">2. </a>The clone set in the two models shown come</text>
<text top="461" left="143" width="632" height="16" font="1">as a result of the same sub graph being present in both after being normalized, or</text>
<text top="482" left="143" width="632" height="16" font="1">abstracted, in some fashion. In this case, the normalization has been done such</text>
<text top="504" left="143" width="632" height="16" font="1">that the speciﬁc values within the nodes are ignored / not deemed necessary for</text>
<text top="526" left="143" width="110" height="16" font="1">similarity <a href="pdfxml.html#37">[20].</a></text>
<text top="712" left="323" width="271" height="16" font="1">Figure 2: Model clone example <a href="pdfxml.html#37">[20]</a></text>
<text top="787" left="143" width="41" height="16" font="1">2.2.3</text>
<text top="787" left="205" width="162" height="16" font="1">Model comparison</text>
<text top="829" left="143" width="632" height="16" font="1">This section discusses model comparison as an individual task in MDE and refers</text>
<text top="851" left="143" width="632" height="16" font="1">speciﬁcally to the act of identifying any similarities or diﬀerences between model</text>
<text top="873" left="143" width="632" height="16" font="1">elements, either automatically or through some user input. Looking at what we</text>
<text top="894" left="143" width="632" height="16" font="1">discussed already, it is clear that model clone detection employs some notion of</text>
<text top="916" left="143" width="147" height="16" font="1">model comparison.</text>
<text top="916" left="307" width="468" height="16" font="1">Speciﬁcally, models, or sub models in this case, are being</text>
<text top="938" left="143" width="632" height="16" font="1">compared and deemed similar or equivalent to one another based on some deﬁnition</text>
<text top="959" left="143" width="632" height="16" font="1">of similarity. The diﬀerence between the comparisons done in model clone detection</text>
<text top="981" left="143" width="632" height="16" font="1">and model versioning is that in model versioning the comparison is typically</text>
<text top="1003" left="143" width="632" height="16" font="1">executed by developers on models that have evolved from, or are a ’version of’, the</text>
<text top="1024" left="143" width="632" height="16" font="1">same root model whereas, in model clone detection, the comparisons are executed</text>
<text top="1046" left="143" width="632" height="16" font="1">by analysts on models that are contained within some larger model or group of</text>
<text top="1068" left="143" width="632" height="16" font="1">models. As noted by Kolovos et al. <a href="pdfxml.html#39">[39] </a>and Lin et al. <a href="pdfxml.html#40">[49], </a>model comparison has</text>
<text top="1112" left="455" width="9" height="16" font="1">6</text>
</page>
<page number="11" position="absolute" top="0" left="0" height="1188" width="918">
<text top="170" left="143" width="632" height="16" font="1">merit in other areas of MDE including being the foundation for model composition</text>
<text top="192" left="143" width="632" height="16" font="1">and model transformation testing. Speciﬁcally, for model transformation testing,</text>
<text top="214" left="143" width="632" height="16" font="1">it can be used for comparing the model transformations themselves, when they</text>
<text top="235" left="143" width="632" height="16" font="1">are represented as models, and for verifying the correctness of the transformation</text>
<text top="257" left="143" width="632" height="16" font="1">by comparing the input and output models the transformation is working with.</text>
<text top="279" left="143" width="632" height="16" font="1">Beyond this, model comparison may be useful in performing speciﬁc analytical</text>
<text top="300" left="143" width="555" height="16" font="1">tasks, such as looking for sub-model patterns as we discuss in Section <a href="pdfxml.html#31">4.</a></text>
<text top="331" left="170" width="605" height="16" font="1">Kolovos et al. attempt to provide a precise deﬁnition of model comparison by</text>
<text top="353" left="143" width="632" height="16" font="1">saying it is an operation that classiﬁes elements into four <a href="pdfxml.html#39">categories[39]. </a>Figure <a href="pdfxml.html#11">3</a></text>
<text top="374" left="143" width="632" height="16" font="1">illustrates this idea and we use it in order to help explain what we consider to be</text>
<text top="396" left="143" width="546" height="16" font="1">similar/matching and what is considered to be diﬀerent/non-matching.</text>
<text top="634" left="295" width="329" height="16" font="1">Figure 3: Model comparison deﬁnition <a href="pdfxml.html#39">[39]</a></text>
<text top="711" left="143" width="289" height="16" font="1">Notion of similarity or matching</text>
<text top="711" left="449" width="325" height="16" font="1">For two elements to be similar, they must</text>
<text top="732" left="143" width="632" height="16" font="1">match one another based on some criteria or represent the same conceptual idea or</text>
<text top="754" left="143" width="632" height="16" font="1">artifact. Kolovos et al. further reﬁne similarity to include a notion of conformance.</text>
<text top="776" left="143" width="632" height="16" font="1">With conformance, elements from one model that have a match in another model</text>
<text top="797" left="143" width="632" height="16" font="1">can be classiﬁed as being either elements that conform to their matching element or</text>
<text top="819" left="143" width="632" height="16" font="1">elements that do not conform to their counterpart in the other model. In Figure <a href="pdfxml.html#11">3,</a></text>
<text top="841" left="143" width="632" height="16" font="1">white nodes are elements that conform, while grey elements are ones that do not</text>
<text top="862" left="143" width="632" height="16" font="1">conform. An example of non conformance in a UML class diagram could be when</text>
<text top="884" left="143" width="632" height="16" font="1">a class in both models has the same name but one is abstract. So while the grey</text>
<text top="906" left="143" width="632" height="16" font="1">elements still match, that is, likely represent the same artifact, they do ’match</text>
<text top="927" left="143" width="632" height="16" font="1">enough’ or conform to one another <a href="pdfxml.html#39">[39]. </a>The speciﬁc deﬁnition of conformance is</text>
<text top="949" left="143" width="632" height="16" font="1">dependent on the current comparison context and goal. We can attempt to extend</text>
<text top="971" left="143" width="632" height="16" font="1">this notion of similarity to what we have already discussed. Matching elements in</text>
<text top="992" left="143" width="632" height="16" font="1">model versioning can be seen as those that are present within the same version tree,</text>
<text top="1014" left="143" width="632" height="16" font="1">that is, are all derived from a common ancestor. Conformance in this context is</text>
<text top="1036" left="143" width="632" height="16" font="1">the case where versions are considered identical or have changes that are consider</text>
<text top="1057" left="143" width="632" height="16" font="1">trivial. For model clone detection, matching elements can be described as those</text>
<text top="1112" left="455" width="9" height="16" font="1">7</text>
</page>
<page number="12" position="absolute" top="0" left="0" height="1188" width="918">
<text top="170" left="143" width="632" height="16" font="1">that represent the same conceptual idea, or node in data-ﬂow modeling, such as the</text>
<text top="192" left="143" width="632" height="16" font="1">I-Delay block in Figure <a href="pdfxml.html#10">2, </a>and conformance can be seen as the diﬀerence between</text>
<text top="214" left="143" width="580" height="16" font="1">elements that match after the normalization process and those that do not.</text>
<text top="269" left="143" width="173" height="16" font="1">Notion of diﬀerence</text>
<text top="269" left="334" width="441" height="16" font="1">The idea of elements being diﬀerent to one another means</text>
<text top="291" left="143" width="632" height="16" font="1">that they do not match based on some criteria nor represent the same conceptual</text>
<text top="313" left="143" width="632" height="16" font="1">idea or artifact. Figure <a href="pdfxml.html#11">3 </a>represents these diﬀerent elements as black nodes. Kolovos</text>
<text top="334" left="143" width="632" height="16" font="1">et al. further classiﬁes non-matching elements into those that are within the domain</text>
<text top="356" left="143" width="632" height="16" font="1">of the comparison operation, or what we called matching criteria, and those that are</text>
<text top="378" left="143" width="632" height="16" font="1">not within the domain. Non-matching elements that are not within the domain of</text>
<text top="399" left="143" width="632" height="16" font="1">comparison can exist due to a case where the matching criteria is either incomplete</text>
<text top="421" left="143" width="632" height="16" font="1">or intentionally ignoring them. The grey box in Figure <a href="pdfxml.html#11">3 </a>represents the domain</text>
<text top="443" left="143" width="632" height="16" font="1">and black nodes outside of it are those that are not within the domain. We must</text>
<text top="464" left="143" width="632" height="16" font="1">also attempt to extend our notion of diﬀerences to include elements that match</text>
<text top="486" left="143" width="632" height="16" font="1">but do not conform, that is, the grey elements in Figure <a href="pdfxml.html#11">3. </a>The diﬀerences in</text>
<text top="508" left="143" width="632" height="16" font="1">this case can be broken into two categories, as was initially done in work on</text>
<text top="529" left="143" width="632" height="16" font="1">model versioning <a href="pdfxml.html#38">[25]: </a>symmetric deltas and directed deltas. A symmetric delta</text>
<text top="551" left="143" width="632" height="16" font="1">between two models contains all the elements that are in one model but not the</text>
<text top="573" left="143" width="632" height="16" font="1">other and vice versa. A directed delta is operational in that it contains all the</text>
<text top="594" left="143" width="632" height="16" font="1">steps necessary to get from one model to another. Konemann investigates ways</text>
<text top="616" left="143" width="632" height="16" font="1">of describing diﬀerences that are independent of the models they came from <a href="pdfxml.html#39">[40],</a></text>
<text top="638" left="143" width="632" height="16" font="1">which can be useful for patches, and later extends this idea to discuss grouping</text>
<text top="659" left="143" width="632" height="16" font="1">these diﬀerences together semantically in order to generalize them so they can be</text>
<text top="681" left="143" width="632" height="16" font="1">used in other instances <a href="pdfxml.html#39">[41]. </a>Kehrer et al. <a href="pdfxml.html#39">[35] </a>do something similar by trying to</text>
<text top="703" left="143" width="632" height="16" font="1">derive semantics that come from diﬀerences among various versions of a model. It</text>
<text top="724" left="143" width="632" height="16" font="1">diﬀers from Konemann’s work in that Konemann’s relies on a lot of user-interaction</text>
<text top="746" left="143" width="632" height="16" font="1">while the work done by Kehrer et al. is a more automatic approach that can be</text>
<text top="768" left="143" width="184" height="16" font="1">run before Konemann’s.</text>
<text top="823" left="143" width="265" height="16" font="1">Phases of model comparison</text>
<text top="823" left="426" width="349" height="16" font="1">In the context of model versioning, model</text>
<text top="845" left="143" width="632" height="16" font="1">comparison has been decomposed into three phases <a href="pdfxml.html#36">[11]: </a>calculation, representation,</text>
<text top="867" left="143" width="138" height="16" font="1">and visualization.</text>
<text top="867" left="299" width="476" height="16" font="1">However, we believe these phases can be applied to model</text>
<text top="888" left="143" width="632" height="16" font="1">comparison in general as there is nothing about this decomposition that is speciﬁc</text>
<text top="910" left="143" width="632" height="16" font="1">to model versioning. In the following paragraphs, we elaborate on the phases and</text>
<text top="932" left="143" width="247" height="16" font="1">provide examples of approaches.</text>
<text top="988" left="170" width="100" height="16" font="1">Calculation</text>
<text top="988" left="287" width="487" height="16" font="1">Calculation is the initial step of model comparison and is the act</text>
<text top="1009" left="143" width="632" height="16" font="1">of identifying the similarities and diﬀerences between two diﬀerent models. Using</text>
<text top="1031" left="143" width="632" height="16" font="1">the deﬁnition we described earlier, it can seen as the classiﬁcation of elements into</text>
<text top="1053" left="143" width="632" height="16" font="1">the four categories. Calculation techniques can work with speciﬁc types of models,</text>
<text top="1112" left="455" width="9" height="16" font="1">8</text>
</page>
<page number="13" position="absolute" top="0" left="0" height="1188" width="918">
<text top="170" left="143" width="632" height="16" font="1">such as done with UML-model comparison methods <a href="pdfxml.html#36">[2, </a><a href="pdfxml.html#38">32, </a><a href="pdfxml.html#39">36, </a><a href="pdfxml.html#41">60, </a><a href="pdfxml.html#43">87]. </a>However, it</text>
<text top="192" left="143" width="632" height="16" font="1">is also possible for techniques to do comparisons that are not meta model dependent</text>
<text top="214" left="143" width="632" height="16" font="1">as demonstrated in an approach that works with Domain Speciﬁc Models <a href="pdfxml.html#40">[48]</a></text>
<text top="235" left="143" width="275" height="16" font="1">and other approaches <a href="pdfxml.html#41">[68, </a><a href="pdfxml.html#42">76, </a><a href="pdfxml.html#43">83].</a></text>
<text top="235" left="435" width="340" height="16" font="1">Kolovos et al. <a href="pdfxml.html#39">[38] </a>break down calculation</text>
<text top="257" left="143" width="632" height="16" font="1">methods into four diﬀerent categories based on how they match corresponding</text>
<text top="279" left="143" width="632" height="16" font="1">model elements. They are static identity-based matching, which uses persistent</text>
<text top="300" left="143" width="632" height="16" font="1">and unique identiﬁers; signature-based matching, which calculates its comparison</text>
<text top="322" left="143" width="632" height="16" font="1">approach dynamically based on an element’s uniquely-identifying signature that</text>
<text top="344" left="143" width="632" height="16" font="1">is calculated from a user-deﬁned function; similarity-based matching, which uses</text>
<text top="365" left="143" width="632" height="16" font="1">the composition of the similarity of an element’s features; and custom language-</text>
<text top="387" left="143" width="632" height="16" font="1">speciﬁc matching algorithms, which is a calculation approach that uses matching</text>
<text top="409" left="143" width="632" height="16" font="1">algorithms designed to work with a particular modeling language. In the remainder</text>
<text top="430" left="143" width="632" height="16" font="1">of this technical report we focus mainly on the calculation phase, particularly the</text>
<text top="452" left="143" width="632" height="16" font="1">model element matching aspect, as this is the phase that will most impact our</text>
<text top="474" left="143" width="632" height="16" font="1">ability to discover common sub-patterns among models. Also, calculation is the</text>
<text top="495" left="143" width="278" height="16" font="1">most researched of the three phases.</text>
<text top="551" left="170" width="133" height="16" font="1">Representation</text>
<text top="551" left="320" width="455" height="16" font="1">This phase deals with the underlying form that the dif-</text>
<text top="573" left="143" width="537" height="16" font="1">ferences and similarities detected during the calculation will take.</text>
<text top="573" left="700" width="75" height="16" font="1">One such</text>
<text top="594" left="143" width="632" height="16" font="1">approach to representation is the notion of edit scripts <a href="pdfxml.html#36">[2, </a><a href="pdfxml.html#40">55]. </a>Edit scripts are an</text>
<text top="616" left="143" width="632" height="16" font="1">operational representation of the changes necessary to make one model equivalent</text>
<text top="638" left="143" width="632" height="16" font="1">to another and can be comprised of primitive operations such as add, edit, and</text>
<text top="659" left="143" width="50" height="16" font="1">delete.</text>
<text top="659" left="210" width="565" height="16" font="1">They tend to be associated with calculation methods that use model-</text>
<text top="681" left="143" width="632" height="16" font="1">element identiﬁers and may not be user-friendly due to their imperative nature.</text>
<text top="703" left="143" width="632" height="16" font="1">In contrast, model-based representation <a href="pdfxml.html#41">[60] </a>is an another approach that is more</text>
<text top="724" left="143" width="88" height="16" font="1">declarative.</text>
<text top="724" left="247" width="528" height="16" font="1">It represents the diﬀerences by recognizing the elements and sub-</text>
<text top="746" left="143" width="632" height="16" font="1">elements that are the same and the ones that diﬀer. Most recently, an abstract-</text>
<text top="768" left="143" width="632" height="16" font="1">syntax-like representation <a href="pdfxml.html#36">[11] </a>has been proposed that represents the diﬀerences</text>
<text top="789" left="143" width="632" height="16" font="1">declaratively and also allows further analysis. Cicchetti et al. <a href="pdfxml.html#37">[15] </a>and, later, Van</text>
<text top="811" left="143" width="632" height="16" font="1">den Brand et al. <a href="pdfxml.html#43">[83], </a>propose properties that representation techniques should</text>
<text top="833" left="143" width="632" height="16" font="1">strive for in order to be separable from calculation approaches and for them to</text>
<text top="854" left="143" width="632" height="16" font="1">be ideal for MDE environments. Cicchetti et al. <a href="pdfxml.html#37">[16] </a>then extend this work to</text>
<text top="876" left="143" width="632" height="16" font="1">demonstrate that their representation is ideal for managing conﬂicts in distributed</text>
<text top="898" left="143" width="107" height="16" font="1">environments.</text>
<text top="953" left="170" width="115" height="16" font="1">Visualization</text>
<text top="953" left="302" width="473" height="16" font="1">Lastly, visualization involves displaying the diﬀerences in a</text>
<text top="975" left="143" width="632" height="16" font="1">form that is desirable to the end user. Visualization is considered somewhat sec-</text>
<text top="997" left="143" width="632" height="16" font="1">ondary to calculation and representation and may be tied closely to representation.</text>
<text top="1018" left="143" width="632" height="16" font="1">For example, model-based representation can be visualized through colouring <a href="pdfxml.html#41">[60].</a></text>
<text top="1040" left="143" width="632" height="16" font="1">Newer visualization approaches try to make visualization more separable from</text>
<text top="1062" left="143" width="632" height="16" font="1">representation <a href="pdfxml.html#43">[84, 85, 86]. </a>There is also an approach <a href="pdfxml.html#42">[70] </a>that attempts to extend</text>
<text top="1112" left="455" width="9" height="16" font="1">9</text>
</page>
<page number="14" position="absolute" top="0" left="0" height="1188" width="918">
<text top="170" left="143" width="632" height="16" font="1">visualization techniques for comparing text ﬁles to work with models by including</text>
<text top="192" left="143" width="632" height="16" font="1">additional features unique to higher level representations, such as folding, automatic</text>
<text top="214" left="143" width="177" height="16" font="1">layout, and navigation.</text>
<text top="1112" left="450" width="18" height="16" font="1">10</text>
</page>
<page number="15" position="absolute" top="0" left="0" height="1188" width="918">
<text top="165" left="143" width="15" height="23" font="0">3</text>
<text top="165" left="187" width="568" height="23" font="0">Model comparison methods and applications</text>
<text top="216" left="143" width="632" height="16" font="1">This section categorizes existing model comparison methods by the speciﬁc types</text>
<text top="238" left="143" width="632" height="16" font="1">of models they compare and discusses the applications of the comparisons. We</text>
<text top="260" left="143" width="632" height="16" font="1">decided on organizing the approaches in this manner in order to allow this technical</text>
<text top="281" left="143" width="632" height="16" font="1">report to act as reference for those working with speciﬁc model types and looking</text>
<text top="303" left="143" width="258" height="16" font="1">to engage in model comparison.</text>
<text top="303" left="420" width="355" height="16" font="1">We ﬁrst present model comparison methods</text>
<text top="325" left="143" width="490" height="16" font="1">that work with more than one type of model in Section <a href="pdfxml.html#15">3.1.</a></text>
<text top="325" left="649" width="125" height="16" font="1">This is followed</text>
<text top="346" left="143" width="632" height="16" font="1">by comparison techniques that compare behavioral, structural, product line, and</text>
<text top="368" left="143" width="632" height="16" font="1">software development process models in Sections <a href="pdfxml.html#22">3.2, </a><a href="pdfxml.html#24">3.3, </a><a href="pdfxml.html#27">3.4, </a>and <a href="pdfxml.html#28">3.5, </a>respectively.</text>
<text top="390" left="143" width="632" height="16" font="1">Within each section, we further classify the approaches by the sub type of model</text>
<text top="411" left="143" width="632" height="16" font="1">they are intended for and also discuss the intended application of each. While some</text>
<text top="433" left="143" width="632" height="16" font="1">of the methods claim that they can be extended to work with other types of models,</text>
<text top="455" left="143" width="632" height="16" font="1">we still place each one only in the category they have demonstrated they work with</text>
<text top="476" left="143" width="337" height="16" font="1">and make note of the claimed extendability.</text>
<text top="531" left="143" width="31" height="19" font="2">3.1</text>
<text top="531" left="198" width="362" height="19" font="2">Methods for multiple model types</text>
<text top="574" left="143" width="632" height="16" font="1">This section looks at approaches that are able to deal with more than one type of</text>
<text top="595" left="143" width="632" height="16" font="1">model. Approaches like this have the beneﬁt of being more general but are not able</text>
<text top="617" left="143" width="420" height="16" font="1">to use speciﬁc model-type information to their beneﬁt.</text>
<text top="669" left="143" width="41" height="16" font="1">3.1.1</text>
<text top="669" left="205" width="115" height="16" font="1">UML models</text>
<text top="709" left="143" width="632" height="16" font="1">The UML is a meta model deﬁned by the MOF and is the most prominent and</text>
<text top="731" left="143" width="632" height="16" font="1">well known example of a MOF instance. This section looks at model comparison</text>
<text top="752" left="143" width="528" height="16" font="1">approaches intended to compare more than one type of UML model.</text>
<text top="780" left="170" width="605" height="16" font="1">Alanen and Porres <a href="pdfxml.html#36">[2, 3] </a>perform model comparison as a precursor to model</text>
<text top="802" left="143" width="82" height="16" font="1">versioning.</text>
<text top="802" left="249" width="525" height="16" font="1">Their model matching is achieved through static identity-based</text>
<text top="824" left="143" width="632" height="16" font="1">matching, that is, it relies on the UML’s universally unique identiﬁers(UUID)</text>
<text top="846" left="143" width="632" height="16" font="1">contained within each model element. Their work is more focused on identifying the</text>
<text top="867" left="143" width="632" height="16" font="1">diﬀerences between matched models. They calculate and represent diﬀerences as</text>
<text top="889" left="143" width="632" height="16" font="1">directed deltas, that is, operations that will turn one model into the other and that</text>
<text top="911" left="143" width="632" height="16" font="1">can be reversed through a dual operation. Their diﬀerence calculation is achieved</text>
<text top="932" left="143" width="516" height="16" font="1">through the following steps that results in a sequence of operations</text>
<text top="968" left="165" width="610" height="16" font="1">1. Given a model V and V’, this algorithm creates a mapping between the</text>
<text top="990" left="187" width="560" height="16" font="1">matched model elements, which they achieve through UUID comparison.</text>
<text top="1024" left="165" width="610" height="16" font="1">2. The next two steps involve the algorithm adding operations to create the</text>
<text top="1046" left="187" width="588" height="16" font="1">elements within V’ that do not exist in V and then adding operations to</text>
<text top="1068" left="187" width="401" height="16" font="1">delete the elements that are in V that are not in V’.</text>
<text top="1112" left="450" width="18" height="16" font="1">11</text>
</page>
<page number="16" position="absolute" top="0" left="0" height="1188" width="918">
<text top="170" left="165" width="610" height="16" font="1">3. Lastly, for all the elements that are in both V and V’, any changes that have</text>
<text top="192" left="187" width="588" height="16" font="1">occurred to the features within these elements from V to V’ are converted to</text>
<text top="214" left="187" width="439" height="16" font="1">operations that ensure that feature ordering is preserved.</text>
<text top="255" left="170" width="268" height="16" font="1">Rational Software Architect (RSA)</text>
<text top="252" left="444" width="6" height="11" font="3"><a href="pdfxml.html#16">6</a></text>
<text top="255" left="457" width="318" height="16" font="1">is an IBM product that is intended to be</text>
<text top="276" left="143" width="632" height="16" font="1">a versatile and complete development environment for those working with software</text>
<text top="298" left="143" width="632" height="16" font="1">models and MDE. It works primarily with UML models. Early versions of RSA (6</text>
<text top="320" left="143" width="632" height="16" font="1">and earlier) allow for two ways of performing model comparison on UML models,</text>
<text top="341" left="143" width="632" height="16" font="1">both of which are a form of model versioning: Comparing a model from its local</text>
<text top="363" left="143" width="632" height="16" font="1">history and comparing a model with another model that belongs to the same</text>
<text top="385" left="143" width="632" height="16" font="1">ancestor <a href="pdfxml.html#39">[45]. </a>In both of these cases, model matching is done using UUIDs in</text>
<text top="406" left="143" width="632" height="16" font="1">that matched elements must have the same identity. The calculation for ﬁnding</text>
<text top="428" left="143" width="511" height="16" font="1">diﬀerences between matched elements is not shared/is proprietary.</text>
<text top="457" left="170" width="605" height="16" font="1">Figure <a href="pdfxml.html#17">4 </a>shows an example of the ’compare model with local history’ RSA</text>
<text top="479" left="143" width="632" height="16" font="1">window. The bottom pane is split between the two versions while the top right</text>
<text top="501" left="143" width="632" height="16" font="1">pane describes the diﬀerences found between the two. The window and process for</text>
<text top="522" left="143" width="632" height="16" font="1">comparing a model with another model within the same ancestry is very similar. In</text>
<text top="544" left="143" width="632" height="16" font="1">RSA version 7 and later a facility is provided by the tool for comparing and merging</text>
<text top="566" left="143" width="632" height="16" font="1">two software models that are not necessarily from the same ancestor <a href="pdfxml.html#39">[46]. </a>This is</text>
<text top="587" left="143" width="632" height="16" font="1">accomplished manually through user interaction, that is, there is no calculation</text>
<text top="609" left="143" width="632" height="16" font="1">really taking place other than the option to do a relatively simple structural and</text>
<text top="631" left="143" width="632" height="16" font="1">UUID comparison. The user selects elements from the source that should be added</text>
<text top="652" left="143" width="632" height="16" font="1">to the target, maps matching elements from the source and target, and chooses the</text>
<text top="674" left="143" width="306" height="16" font="1">ﬁnal names for these matched elements.</text>
<text top="704" left="170" width="605" height="16" font="1">Similarly, another example of a technique that compares UML models and</text>
<text top="725" left="143" width="632" height="16" font="1">utilizes their UUIDs is the one proposed by Ohst et al. <a href="pdfxml.html#41">[60]. </a>This technique entails</text>
<text top="747" left="143" width="632" height="16" font="1">transforming the UML models to graphs and then traversing each tree level with the</text>
<text top="769" left="143" width="632" height="16" font="1">purpose of searching for identical UUIDs. The technique then takes into account the</text>
<text top="790" left="143" width="632" height="16" font="1">diﬀerences among the matched model elements, such as features and relationships,</text>
<text top="812" left="143" width="207" height="16" font="1">and continues its traversal.</text>
<text top="841" left="170" width="605" height="16" font="1">Selonen and Kettunen <a href="pdfxml.html#42">[76] </a>present a technique that attempts to accomplish</text>
<text top="863" left="143" width="632" height="16" font="1">the model matching aspect of model comparison for a variety of UML models by</text>
<text top="885" left="143" width="632" height="16" font="1">deriving the signature-match rules based on the abstract syntax of the meta model</text>
<text top="907" left="143" width="632" height="16" font="1">describing the modeling language. Speciﬁcally, they say that two models match</text>
<text top="928" left="143" width="632" height="16" font="1">if they have the same meta class, the same name, and same primary context,</text>
<text top="950" left="143" width="632" height="16" font="1">which includes the surrounding structure of the model comprised of neighbours</text>
<text top="972" left="143" width="632" height="16" font="1">and descendants. This matching criteria can be relaxed depending on the scenario.</text>
<text top="993" left="143" width="632" height="16" font="1">They state that this technique should be extendable to work with any MOF-based</text>
<text top="1015" left="143" width="632" height="16" font="1">modeling languages. Also, additional rules can be added by extending the meta</text>
<text top="1037" left="143" width="528" height="16" font="1">model with appropriate stereotypes that he technique that interpret.</text>
<text top="1067" left="163" width="6" height="9" font="4">6</text>
<text top="1070" left="170" width="418" height="13" font="5">http://www.ibm.com/software/awdtools/architect/swarchitect/</text>
<text top="1112" left="450" width="18" height="16" font="1">12</text>
</page>
<page number="17" position="absolute" top="0" left="0" height="1188" width="918">
<text top="580" left="149" width="621" height="16" font="1">Figure 4: RSA ’Compare Model with Local History’ window (adapted from <a href="pdfxml.html#39">[45])</a></text>
<text top="630" left="170" width="605" height="16" font="1">Odyssey VCS (Version Control System) <a href="pdfxml.html#41">[61] </a>is a model versioning tool that</text>
<text top="652" left="143" width="632" height="16" font="1">is intended to work with all types of UML models in CASE environments. It</text>
<text top="673" left="143" width="632" height="16" font="1">does not perform model matching as all elements are linked to a previous version,</text>
<text top="695" left="143" width="632" height="16" font="1">starting with a baseline version. Diﬀerences or conﬂicts are detected by processing</text>
<text top="717" left="143" width="632" height="16" font="1">XMI ﬁles and using UML-speciﬁc knowledge to calculate what elements have been</text>
<text top="738" left="143" width="632" height="16" font="1">added, modiﬁed, or deleted. A class can be deﬁned as a unit of comparison (UC)</text>
<text top="760" left="143" width="632" height="16" font="1">for one given project, while attributes and operations may be deﬁned as the UCs</text>
<text top="782" left="143" width="632" height="16" font="1">in another project. This ﬂexibility provided by Odyssey-VCS allows for a more</text>
<text top="803" left="143" width="346" height="16" font="1">precise deﬁnition of conﬁguration elements.</text>
<text top="803" left="506" width="269" height="16" font="1">Speciﬁcally, users can conﬁgure a</text>
<text top="825" left="143" width="632" height="16" font="1">behavior descriptor that determines which elements are UC and which are UV</text>
<text top="847" left="143" width="153" height="16" font="1">(unit of versioning).</text>
<text top="901" left="143" width="41" height="16" font="1">3.1.2</text>
<text top="901" left="205" width="113" height="16" font="1">EMF models</text>
<text top="942" left="143" width="347" height="16" font="1">Eclipse Modeling Framework (EMF) models</text>
<text top="940" left="498" width="6" height="11" font="3"><a href="pdfxml.html#17">7</a></text>
<text top="942" left="512" width="262" height="16" font="1">are MOF meta-meta models that</text>
<text top="964" left="143" width="632" height="16" font="1">can be used to deﬁne meta models, such as UML. They are intended for use within</text>
<text top="985" left="143" width="292" height="16" font="1">the Eclipse development environment.</text>
<text top="1015" left="170" width="605" height="16" font="1">EMFCompare <a href="pdfxml.html#36">[11] </a>is an Eclipse project that performs model comparison on</text>
<text top="1036" left="143" width="632" height="16" font="1">EMF models. Rather than relying on EMF models’ UUIDs, they choose to use</text>
<text top="1067" left="163" width="6" height="9" font="4">7</text>
<text top="1070" left="170" width="189" height="13" font="5">http://www.eclipse.org/emf/</text>
<text top="1112" left="450" width="18" height="16" font="1">13</text>
</page>
<page number="18" position="absolute" top="0" left="0" height="1188" width="918">
<text top="170" left="143" width="632" height="16" font="1">similarity based-matching to allow the tool to be more generic and useful in a variety</text>
<text top="192" left="143" width="632" height="16" font="1">of situations. The calculation for matching is based on various statistics and metrics</text>
<text top="214" left="143" width="632" height="16" font="1">that are combined to generate a match score. This includes analyzing the name,</text>
<text top="235" left="143" width="632" height="16" font="1">content, type, and relations of the elements and returning a value from 0 to 1, which</text>
<text top="257" left="143" width="632" height="16" font="1">is later combined with “additional factors”. They also ﬁlter out element data that</text>
<text top="279" left="143" width="632" height="16" font="1">comes from default values. It should be noted that while EMFCompare is speciﬁc to</text>
<text top="300" left="143" width="632" height="16" font="1">EMF models, the underlying calculation engine is meta model independent, similar</text>
<text top="322" left="143" width="336" height="16" font="1">to the approaches discussed in Section <a href="pdfxml.html#19">3.1.3</a></text>
<text top="351" left="170" width="605" height="16" font="1">TopCased <a href="pdfxml.html#38">[24] </a>is a project providing an MDE environment that uses EMF</text>
<text top="373" left="143" width="632" height="16" font="1">models and is intended speciﬁcally for safety critical applications and systems. It</text>
<text top="394" left="143" width="632" height="16" font="1">performs its matching and diﬀerencing in a similar fashion to Alanen et al., using</text>
<text top="416" left="143" width="237" height="16" font="1">static identity-based matching.</text>
<text top="445" left="170" width="605" height="16" font="1">SmoVer <a href="pdfxml.html#41">[65] </a>is another model versioning tool that can work with any EMF-</text>
<text top="466" left="143" width="103" height="16" font="1">based model.</text>
<text top="466" left="264" width="510" height="16" font="1">In this approach they do both version-speciﬁc comparisons like</text>
<text top="488" left="143" width="496" height="16" font="1">Odyssey VCS, termed syntactical, and semantic comparisons.</text>
<text top="488" left="658" width="116" height="16" font="1">Semantic com-</text>
<text top="510" left="143" width="484" height="16" font="1">parisons are those that are carried out on semantic views.</text>
<text top="510" left="648" width="126" height="16" font="1">Semantic views,</text>
<text top="531" left="143" width="632" height="16" font="1">in this context, are the resulting models that come from a user-deﬁned model</text>
<text top="553" left="143" width="632" height="16" font="1">transformation that SmoVer executes on the original models being compared in</text>
<text top="575" left="143" width="567" height="16" font="1">order to give the models meaning from a particular view of interest.</text>
<text top="575" left="730" width="45" height="16" font="1">These</text>
<text top="596" left="143" width="567" height="16" font="1">transformations are speciﬁed in the Atlas Transformation Language (ATL)</text>
<text top="594" left="715" width="6" height="11" font="3"><a href="pdfxml.html#18">8</a></text>
<text top="596" left="722" width="53" height="16" font="1"><a href="pdfxml.html#18">. </a>Thus,</text>
<text top="618" left="143" width="632" height="16" font="1">the models are ﬁrst compared syntactically, then transformed, then compared</text>
<text top="640" left="143" width="89" height="16" font="1">once again.</text>
<text top="640" left="251" width="524" height="16" font="1">Matching is accomplished through static-identity based matching</text>
<text top="661" left="143" width="632" height="16" font="1">and diﬀerences are calculated by comparing structural changes, such as attribute,</text>
<text top="683" left="143" width="632" height="16" font="1">reference, role, and its referenced elements’ updates. The authors note that the</text>
<text top="705" left="143" width="632" height="16" font="1">amount of work required for creating the ATL transformations is not too large and</text>
<text top="726" left="143" width="632" height="16" font="1">that “the return on investment gained in better conﬂict detection clearly outweighs</text>
<text top="748" left="143" width="463" height="16" font="1">the initial eﬀort spent on specifying the semantic views.”</text>
<text top="748" left="623" width="152" height="16" font="1">The examples they</text>
<text top="770" left="143" width="620" height="16" font="1">discussed required roughly 50 to 200 lines of ATL transformation language code.</text>
<text top="799" left="170" width="605" height="16" font="1">Riveria and Vallecillo <a href="pdfxml.html#41">[68] </a>employ similarity-based matching in addition to</text>
<text top="820" left="143" width="632" height="16" font="1">checking persistent identiﬁers for their tool, Maudeling. They use Maude <a href="pdfxml.html#37">[17],</a></text>
<text top="842" left="143" width="632" height="16" font="1">a high-level language that supports rewriting-logic speciﬁcation and programming,</text>
<text top="864" left="143" width="632" height="16" font="1">to facilitate the comparison of models from varying meta models speciﬁed in EMF.</text>
<text top="885" left="143" width="632" height="16" font="1">They provide this in the form of an Eclipse plugin called Maudeling. Using Maude,</text>
<text top="907" left="143" width="632" height="16" font="1">they specify a diﬀerence meta model, shown in Figure <a href="pdfxml.html#19">5, </a>that represents diﬀerences</text>
<text top="929" left="143" width="632" height="16" font="1">as added, modiﬁed, or deleted elements that inherit from DiﬀElement. Matching</text>
<text top="950" left="143" width="632" height="16" font="1">is accomplished through the Match meta model, shown in Figure <a href="pdfxml.html#19">5. </a>Each match</text>
<text top="972" left="143" width="632" height="16" font="1">element represents the link between two elements, or objects, that represent the</text>
<text top="994" left="143" width="632" height="16" font="1">same thing. Rate is a ratio between 0 and 1 that represents their similarity. The</text>
<text top="1015" left="143" width="632" height="16" font="1">process for discovering this ratio ﬁrst begins by using UUIDs. If there is no UUID</text>
<text top="1037" left="143" width="632" height="16" font="1">match, they then rely on a variant of similarity-based matching that calculates</text>
<text top="1067" left="163" width="6" height="9" font="4">8</text>
<text top="1070" left="170" width="147" height="13" font="5">http://eclipse.org/atl/</text>
<text top="1112" left="450" width="18" height="16" font="1">14</text>
</page>
<page number="19" position="absolute" top="0" left="0" height="1188" width="918">
<text top="170" left="143" width="510" height="16" font="1">the similarity ratio by checking a variety of structural features.</text>
<text top="170" left="669" width="105" height="16" font="1">Such features</text>
<text top="192" left="143" width="632" height="16" font="1">include shared inheritance relationships; weighted structural features, as done in</text>
<text top="214" left="143" width="632" height="16" font="1">SiDiﬀ ; numerical attributes; and references. Then, to calculate diﬀerences, they go</text>
<text top="235" left="143" width="632" height="16" font="1">through each element and categorize it based on one of four scenarios: it appears</text>
<text top="257" left="143" width="632" height="16" font="1">in both models A and B and has not been modiﬁed, it appears in both models</text>
<text top="279" left="143" width="632" height="16" font="1">A and B and has been modiﬁed, it appears in model A but not model B, or it</text>
<text top="300" left="143" width="632" height="16" font="1">appears in model B but not model A. It then creates a diﬀerence model based on</text>
<text top="322" left="143" width="632" height="16" font="1">this information that conforms to its diﬀerence meta model. There is no user work</text>
<text top="344" left="143" width="632" height="16" font="1">required as Maudeling has the ATL transformations within it that transform the</text>
<text top="365" left="143" width="632" height="16" font="1">EMF models into their corresponding Maude representations. Operations are then</text>
<text top="387" left="143" width="632" height="16" font="1">executed in the Maude environment automatically, meaning that there is no reason</text>
<text top="409" left="143" width="632" height="16" font="1">why the user will have to work with the Maude representation of models or meta</text>
<text top="430" left="143" width="58" height="16" font="1">models.</text>
<text top="660" left="230" width="458" height="16" font="1">Figure 5: Meta models from Maudeling. Modiﬁed from <a href="pdfxml.html#41">[68]</a></text>
<text top="732" left="143" width="41" height="16" font="1">3.1.3</text>
<text top="732" left="205" width="282" height="16" font="1">Metamodel-agnostic approaches</text>
<text top="775" left="143" width="632" height="16" font="1">This section discusses approaches that deal with models that can conform to an</text>
<text top="796" left="143" width="436" height="16" font="1">arbitrary meta model that adheres to speciﬁc properties.</text>
<text top="827" left="170" width="605" height="16" font="1">Examples of Metamodel-independent approaches that use similarity-based</text>
<text top="849" left="143" width="632" height="16" font="1">matching stratigies include the Epsilon Comparison Language <a href="pdfxml.html#39">[37] </a>and DSMD-</text>
<text top="870" left="143" width="632" height="16" font="1">iﬀ <a href="pdfxml.html#40">[48]. </a>DSMDiﬀ is an extension of the work done on UML model comparison</text>
<text top="892" left="143" width="323" height="16" font="1">techniques except it works with DSMs.</text>
<text top="892" left="487" width="287" height="16" font="1">DSMDiﬀ uses both similarity- and</text>
<text top="914" left="143" width="584" height="16" font="1">signature- based matching in order to discover matched model elements.</text>
<text top="914" left="745" width="30" height="16" font="1">The</text>
<text top="935" left="143" width="632" height="16" font="1">similarity-based matching focuses on the similarity of edges among diﬀerent model</text>
<text top="957" left="143" width="632" height="16" font="1">nodes. DSMDiﬀ evaluates diﬀerences between matched elements and considers</text>
<text top="979" left="143" width="447" height="16" font="1">them directed deltas, namely new, delete, and change.</text>
<text top="979" left="610" width="165" height="16" font="1">While DSMDiﬀ was</text>
<text top="1000" left="143" width="632" height="16" font="1">developed using DSMLs speciﬁed in the Generic Modeling Environment (GME),</text>
<text top="1022" left="143" width="632" height="16" font="1">the techniques within it can be extended to work with any DSML creation tool.</text>
<text top="1044" left="143" width="632" height="16" font="1">The creators of DSMDiﬀ also discuss allowing user-interaction that will allow one</text>
<text top="1065" left="143" width="542" height="16" font="1">to choose the mappings (matches) from a list of applicable candidates.</text>
<text top="1112" left="450" width="18" height="16" font="1">15</text>
</page>
<page number="20" position="absolute" top="0" left="0" height="1188" width="918">
<text top="170" left="170" width="605" height="16" font="1">ECL was developed after DSMDiﬀ and SiDiﬀ, which is discussed later, and</text>
<text top="192" left="143" width="632" height="16" font="1">attempts to address the fact that its predecessors do not allow for modellers to</text>
<text top="214" left="143" width="632" height="16" font="1">conﬁgure language-speciﬁc information that will assist in matching model elements</text>
<text top="235" left="143" width="632" height="16" font="1">from diﬀerent meta models <a href="pdfxml.html#39">[37]. </a>It attempts to accomplish this in a imperative yet</text>
<text top="257" left="143" width="632" height="16" font="1">high-level manner. ECL allows modelers to specify model comparison rule-based</text>
<text top="279" left="143" width="632" height="16" font="1">algorithms and then execute them to identify matched elements within diﬀerent</text>
<text top="300" left="143" width="632" height="16" font="1">models. The trade oﬀ in doing this however is that, while complex matching criteria</text>
<text top="322" left="143" width="632" height="16" font="1">can be expressed using ECL, it requires more time and a knowledge of ECL. Kolovos</text>
<text top="344" left="143" width="632" height="16" font="1">acknowledges that metamodel-independent approaches that use similarity-based</text>
<text top="365" left="143" width="632" height="16" font="1">matching typically perform fairly well, but there often are “corner cases” that ECL</text>
<text top="387" left="143" width="188" height="16" font="1">is well suited to identify.</text>
<text top="416" left="170" width="605" height="16" font="1">Mehra et al. <a href="pdfxml.html#40">[53] </a>developed a plug-in for meta-Case applications that can</text>
<text top="438" left="143" width="632" height="16" font="1">perform model comparison for any set of models that can be deﬁned by a meta-Case</text>
<text top="460" left="143" width="632" height="16" font="1">tool. Meta-Case applications are those that operate similarly to CASE applications,</text>
<text top="481" left="143" width="632" height="16" font="1">except they are not constrained by a particular schema or meta model. This plugin</text>
<text top="503" left="143" width="632" height="16" font="1">ﬁrst matches all the elements by their unique identiﬁers and then calculates the</text>
<text top="525" left="143" width="632" height="16" font="1">diﬀerences by representing them as directed deltas. It is intended to be used for</text>
<text top="546" left="143" width="632" height="16" font="1">model versioning. Oda and Saeki <a href="pdfxml.html#41">[59] </a>describe a graph-based VCS that is quite</text>
<text top="568" left="143" width="632" height="16" font="1">similar in that it works with meta-Case models and matches them using baselines</text>
<text top="590" left="143" width="632" height="16" font="1">and unique identiﬁers. Diﬀerences are calculated as directed deltas with respect to</text>
<text top="611" left="143" width="119" height="16" font="1">earlier versions.</text>
<text top="641" left="170" width="605" height="16" font="1">Nguyen <a href="pdfxml.html#41">[58] </a>proposes a VCS that can be used for model versioning that can</text>
<text top="662" left="143" width="632" height="16" font="1">detect both structural and textual diﬀerences between versions of a wide array of</text>
<text top="684" left="143" width="632" height="16" font="1">software artifacts. This approach utilizes similarity-based matching by assigning</text>
<text top="706" left="143" width="632" height="16" font="1">all artifacts an identiﬁer that encapsulates the element and represents the artifacts</text>
<text top="727" left="143" width="632" height="16" font="1">as nodes within a directed attributed graph, similar to model clone detection</text>
<text top="749" left="143" width="89" height="16" font="1">approaches.</text>
<text top="778" left="170" width="605" height="16" font="1">Van den Brand et al. <a href="pdfxml.html#43">[83] </a>argues that current meta-modeling techniques, such as</text>
<text top="800" left="143" width="632" height="16" font="1">MOF, are not able to satisfy a reasonable set of requirements, deﬁned by them, that</text>
<text top="822" left="143" width="632" height="16" font="1">a diﬀerence representation should satisfy. As such, they present their own meta-</text>
<text top="843" left="143" width="632" height="16" font="1">modeling technique and deﬁne diﬀerences with respect to it. They then provide</text>
<text top="865" left="143" width="632" height="16" font="1">a model comparison approach and prototype that allows the user to conﬁgure</text>
<text top="887" left="143" width="632" height="16" font="1">which or what combination of the four model matching strategies they want to</text>
<text top="908" left="143" width="632" height="16" font="1">employ. The authors provide examples where they extend the work done by Kelter</text>
<text top="930" left="143" width="632" height="16" font="1">et al. <a href="pdfxml.html#39">[36] </a>but then combine it with other matching techniques, like using a UUID.</text>
<text top="952" left="143" width="632" height="16" font="1">This generality comes at a cost of a large amount of conﬁguration, work, and user-</text>
<text top="973" left="143" width="87" height="16" font="1">interaction.</text>
<text top="1003" left="170" width="605" height="16" font="1">There are methods that translate models into another language or notation</text>
<text top="1024" left="143" width="632" height="16" font="1">that both maintain the semantics, or meaning, of the models and are then able to</text>
<text top="1046" left="143" width="632" height="16" font="1">facilitate model comparison. One example is the work done by Gheyi et al. <a href="pdfxml.html#38">[31]</a></text>
<text top="1068" left="143" width="632" height="16" font="1">in which they propose an abstract equivalence notion for object models, in other</text>
<text top="1112" left="450" width="18" height="16" font="1">16</text>
</page>
<page number="21" position="absolute" top="0" left="0" height="1188" width="918">
<text top="170" left="143" width="632" height="16" font="1">words, a way of representing objects that allows them to be compared. The key</text>
<text top="192" left="143" width="632" height="16" font="1">in achieving this and preserving the semantics is their use of an alphabet, which is</text>
<text top="214" left="143" width="632" height="16" font="1">the set of relevant elements that will be compared, and views, which are mappings</text>
<text top="235" left="143" width="632" height="16" font="1">that express the diﬀerent ways that one element in one model can be interpreted</text>
<text top="257" left="143" width="632" height="16" font="1">by elements of a diﬀerent model. They then deﬁne equivalence between two models</text>
<text top="279" left="143" width="632" height="16" font="1">being the case when, for every interpretation or valid instance that satisﬁes one</text>
<text top="300" left="143" width="632" height="16" font="1">model, there exists an equivalent interpretation that satisﬁes one in the other model.</text>
<text top="322" left="143" width="392" height="16" font="1">They illustrate their approach using Alloy models</text>
<text top="320" left="543" width="6" height="11" font="3"><a href="pdfxml.html#21">9</a></text>
<text top="322" left="550" width="225" height="16" font="1"><a href="pdfxml.html#21">, </a>which are models based on</text>
<text top="344" left="143" width="632" height="16" font="1">ﬁrst-order logic including facts and predicates, and demonstrate that it is abstract</text>
<text top="365" left="143" width="632" height="16" font="1">enough to work with other modeling languages. Similarly, Maoz et al. <a href="pdfxml.html#40">[52] </a>present</text>
<text top="387" left="143" width="632" height="16" font="1">the notion of semantic diﬀ operators, which represent the relevant semantics of each</text>
<text top="409" left="143" width="632" height="16" font="1">model, and diﬀ witnesses, which are the semantic diﬀerences between two models.</text>
<text top="430" left="143" width="632" height="16" font="1">Semantic diﬀ operators are composed by leveraging existing work on representing</text>
<text top="452" left="143" width="632" height="16" font="1">the semantics of both class (structure) and activity (behavioral) diagrams through</text>
<text top="474" left="143" width="632" height="16" font="1">the use of mathematical formalisations. Diﬀ witnesses are generated that represent</text>
<text top="495" left="143" width="632" height="16" font="1">the semantic object model that is in one model and not the other, for class diagrams,</text>
<text top="517" left="143" width="632" height="16" font="1">and represent the path that is possible in one model but not the other, for activity</text>
<text top="539" left="143" width="632" height="16" font="1">diagrams. From these ideas, Maoz et al. provide the tools cddiﬀ and addiﬀ to</text>
<text top="560" left="143" width="628" height="16" font="1">do class diagram diﬀerencing and activity class diagram diﬀerencing, respectively.</text>
<text top="591" left="170" width="605" height="16" font="1">Lastly, the Query/View/Transform(QVT) standard provides the outline for</text>
<text top="613" left="143" width="307" height="16" font="1">three model transformation languages.</text>
<text top="613" left="469" width="305" height="16" font="1">These languages act on any arbitrary</text>
<text top="634" left="143" width="632" height="16" font="1">model or metamodel as long as they conform to the MOF speciﬁcation. One of</text>
<text top="656" left="143" width="632" height="16" font="1">these languages, QVT-Relations(QVT-R) allows for a declarative speciﬁcation of</text>
<text top="678" left="143" width="632" height="16" font="1">two-way (bi-directional) transformations and, according to Stevens <a href="pdfxml.html#42">[81], </a>is more</text>
<text top="699" left="143" width="632" height="16" font="1">expressive than the other QVT languages. Speciﬁcally, Stevens discusses how using</text>
<text top="721" left="143" width="632" height="16" font="1">game-theoretic semantics for QVT-R facilitates a better semantic deﬁnition. This</text>
<text top="743" left="143" width="632" height="16" font="1">improvement allows for a form of model comparison through its checkonly mode,</text>
<text top="764" left="143" width="632" height="16" font="1">which is the mode when models are being checked for consistency rather than</text>
<text top="786" left="143" width="632" height="16" font="1">making changes. In brief, game theory is applied to QVT-R by using a veriﬁer</text>
<text top="808" left="143" width="632" height="16" font="1">and refuter. The veriﬁer attempts to conﬁrm that the check will succeed and the</text>
<text top="829" left="143" width="632" height="16" font="1">refuter’s objective is to disprove it. The semantics of QVT are then expressed</text>
<text top="851" left="143" width="632" height="16" font="1">in such a way that implies “the check returns true if and only if the veriﬁer</text>
<text top="873" left="143" width="309" height="16" font="1">has a winning strategy for the game”.</text>
<text top="873" left="470" width="305" height="16" font="1">This improvement would allow one to</text>
<text top="894" left="143" width="632" height="16" font="1">compare models assuming we expressed a transformation in this language that</text>
<text top="916" left="143" width="632" height="16" font="1">represented the diﬀerences or similarities we were looking for. In this case, the</text>
<text top="938" left="143" width="632" height="16" font="1">transformation would yield true if the pair/set of models are consistent according</text>
<text top="959" left="143" width="170" height="16" font="1">to the transformation.</text>
<text top="988" left="163" width="6" height="9" font="4">9</text>
<text top="990" left="170" width="130" height="13" font="5">http://alloy.mit.edu</text>
<text top="1112" left="450" width="18" height="16" font="1">17</text>
</page>
<page number="22" position="absolute" top="0" left="0" height="1188" width="918">
<text top="168" left="143" width="31" height="19" font="2">3.2</text>
<text top="168" left="198" width="420" height="19" font="2">Methods for behavior/data-ﬂow models</text>
<text top="211" left="143" width="41" height="16" font="1">3.2.1</text>
<text top="211" left="205" width="255" height="16" font="1">Simulink and Matlab models</text>
<text top="253" left="143" width="632" height="16" font="1">This section looks at model comparison techniques that work with Simulink and</text>
<text top="274" left="143" width="119" height="16" font="1">Matlab models.</text>
<text top="304" left="170" width="605" height="16" font="1">CloneDetective <a href="pdfxml.html#37">[21] </a>is an approach used to perform clone detection in models.</text>
<text top="326" left="143" width="632" height="16" font="1">It uses ideas from graph theory and is applicable to any model that is represented</text>
<text top="347" left="143" width="170" height="16" font="1">as a data-ﬂow graph.</text>
<text top="347" left="330" width="242" height="16" font="1">It is comprised of three steps.</text>
<text top="347" left="588" width="187" height="16" font="1">The ﬁrst step taken by</text>
<text top="369" left="143" width="632" height="16" font="1">CloneDetective includes pre processing and normalisation. Pre processing involves</text>
<text top="391" left="143" width="632" height="16" font="1">ﬂattening, or inlining, all of the models and removing any unconnected lines.</text>
<text top="412" left="143" width="632" height="16" font="1">Normalisation takes all of the blocks and lines found within the models and assigns</text>
<text top="434" left="143" width="632" height="16" font="1">them a label that consists of information that is considered important for comparing</text>
<text top="456" left="143" width="632" height="16" font="1">them. The information described in the label changes according to the type of clones</text>
<text top="477" left="143" width="632" height="16" font="1">being searched for by the tool. Figure <a href="pdfxml.html#22">6 </a>displays the result of this step on the models</text>
<text top="499" left="143" width="632" height="16" font="1">presented earlier in Figure <a href="pdfxml.html#10">2, </a>including the labels that come from normalisation,</text>
<text top="521" left="143" width="632" height="16" font="1">such as UnitDelay and RelOp: . The grey portions within the graph represent</text>
<text top="542" left="143" width="632" height="16" font="1">a clone. This is accomplished by CloneDetective in its second phase: clone pair</text>
<text top="564" left="143" width="632" height="16" font="1">extraction. This phase is the most similar to the model matching discussed thus</text>
<text top="586" left="143" width="632" height="16" font="1">far, however, rather than matching single elements it is attempting to match the</text>
<text top="607" left="143" width="632" height="16" font="1">largest common set of elements. It likely falls in the category of similarity-based</text>
<text top="629" left="143" width="632" height="16" font="1">matching because the features of each element are extracted, represented as a label</text>
<text top="651" left="143" width="284" height="16" font="1">during normalisation, and compared.</text>
<text top="866" left="217" width="484" height="16" font="1">Figure 6: Normalised model graph of model clone example <a href="pdfxml.html#37">[21]</a></text>
<text top="916" left="170" width="605" height="16" font="1">Similarly, eScan and aScan algorithms attempt to detect exact-matched and</text>
<text top="938" left="143" width="632" height="16" font="1">approximate clones, respectively <a href="pdfxml.html#41">[63]. </a>Exact-matched clones are groups of model</text>
<text top="959" left="143" width="632" height="16" font="1">elements having the same size and aggregated labels, which contain topology</text>
<text top="981" left="143" width="632" height="16" font="1">information and edge and node label information. Approximate clones are those</text>
<text top="1003" left="143" width="632" height="16" font="1">that are not exactly matching but ﬁt some similarity criteria. aScan uses vector-</text>
<text top="1024" left="143" width="632" height="16" font="1">based representations of graphs that account for a subset of structural features</text>
<text top="1046" left="143" width="632" height="16" font="1">within the graph. The main diﬀerence between these algorithms and CloneDetective</text>
<text top="1068" left="143" width="632" height="16" font="1">is that these algorithms group their clones ﬁrst and from smallest to largest. They</text>
<text top="1112" left="450" width="18" height="16" font="1">18</text>
</page>
<page number="23" position="absolute" top="0" left="0" height="1188" width="918">
<text top="170" left="143" width="632" height="16" font="1">claim that this will help detect clones that CloneDetective can not. This is later</text>
<text top="192" left="143" width="632" height="16" font="1">refuted, however, by the authors of CloneDetective <a href="pdfxml.html#37">[20]. </a>aScan is able to detect</text>
<text top="214" left="143" width="632" height="16" font="1">approximate clones while CloneDetective is not. Much like CloneDetective, these</text>
<text top="235" left="143" width="342" height="16" font="1">algorithms utilize similarity-based matching.</text>
<text top="266" left="170" width="605" height="16" font="1">Al-Batran et al. <a href="pdfxml.html#36">[1] </a>notes that the previous two approaches discussed deal with</text>
<text top="287" left="143" width="632" height="16" font="1">syntactic clones only, that is they can detect syntactically/structural similar copies</text>
<text top="309" left="143" width="36" height="16" font="1">only.</text>
<text top="309" left="198" width="577" height="16" font="1">Using normalization techniques that utilize graph transformations, they</text>
<text top="331" left="143" width="632" height="16" font="1">extend these approaches to cover semantic clones that may have similar behavior</text>
<text top="352" left="143" width="632" height="16" font="1">but diﬀerent structure. So, a clone in this context is now deﬁned as two (sub)sets of</text>
<text top="374" left="143" width="632" height="16" font="1">models that have “equivalent unique normal forms” of models. These unique normal</text>
<text top="396" left="143" width="632" height="16" font="1">forms are acquired by having any of the existing tools, such as CloneDetective,</text>
<text top="417" left="143" width="632" height="16" font="1">perform forty semantic-preserving transformations, some of which are presented in</text>
<text top="439" left="143" width="632" height="16" font="1">their paper and are structural modiﬁcations on Simulink models. It was found that</text>
<text top="461" left="143" width="632" height="16" font="1">extending the clone detection strategy in this way yields more clones than simple</text>
<text top="482" left="143" width="166" height="16" font="1">syntactic comparison.</text>
<text top="538" left="143" width="41" height="16" font="1">3.2.2</text>
<text top="538" left="205" width="167" height="16" font="1">Sequence diagrams</text>
<text top="580" left="143" width="632" height="16" font="1">Ren et al. <a href="pdfxml.html#41">[66] </a>devised a technique to refactor sequence diagrams to remove</text>
<text top="602" left="143" width="91" height="16" font="1">duplication.</text>
<text top="602" left="252" width="328" height="16" font="1">They do not actually detect duplication.</text>
<text top="602" left="599" width="176" height="16" font="1">Instead, they describe</text>
<text top="623" left="143" width="632" height="16" font="1">various refactorings that can be done once duplication is discovered: namely</text>
<text top="645" left="143" width="565" height="16" font="1">creating, deleting, changing, and moving a sequence diagram element.</text>
<text top="645" left="726" width="49" height="16" font="1">Liu et</text>
<text top="667" left="143" width="632" height="16" font="1">al. <a href="pdfxml.html#40">[50] </a>attempt to complete this work by actually detecting duplication in sequence</text>
<text top="688" left="143" width="632" height="16" font="1">diagrams. They convert sequence diagrams into an array and represent that array</text>
<text top="710" left="143" width="632" height="16" font="1">as a suﬃx tree. A suﬃx tree is a compressed tree that contains all the ending</text>
<text top="732" left="143" width="632" height="16" font="1">elements of a string organized in an optimal way for performing search operations.</text>
<text top="753" left="143" width="632" height="16" font="1">The suﬃx tree is then traversed and duplicates are extracted by looking for the</text>
<text top="775" left="143" width="632" height="16" font="1">longest common preﬁx, or elements that lead to the leaf node, of two suﬃxes.</text>
<text top="797" left="143" width="632" height="16" font="1">Duplicates are deﬁned as a set of sequence diagram fragments that contain the</text>
<text top="818" left="143" width="632" height="16" font="1">same elements and have the same sequence-diagram speciﬁc relationships. Figure <a href="pdfxml.html#24">7</a></text>
<text top="840" left="143" width="632" height="16" font="1">demonstrates an example of a duplicate. In this case, the largest common preﬁx</text>
<text top="862" left="143" width="632" height="16" font="1">included the 4 elements highlighted within each diagram: login requirement,</text>
<text top="883" left="143" width="632" height="16" font="1">login page, id and password, and success. The image is taken from their tool</text>
<text top="905" left="143" width="632" height="16" font="1">DuplicationDetector. Much like the model clone detection approaches discussed,</text>
<text top="927" left="143" width="632" height="16" font="1">this technique employs a variation of similarity-based matching as it is comparing</text>
<text top="948" left="143" width="439" height="16" font="1">a graph representation of a fragment‘s features/elements.</text>
<text top="1004" left="143" width="41" height="16" font="1">3.2.3</text>
<text top="1004" left="205" width="178" height="16" font="1">Statechart diagrams</text>
<text top="1046" left="143" width="632" height="16" font="1">Nejati et al. <a href="pdfxml.html#40">[56] </a>matches state chart diagrams for the purpose of model merging.</text>
<text top="1068" left="143" width="632" height="16" font="1">They accomplish this by using heuristics that include looking at terminological,</text>
<text top="1112" left="450" width="18" height="16" font="1">19</text>
</page>
<page number="24" position="absolute" top="0" left="0" height="1188" width="918">
<text top="510" left="294" width="331" height="16" font="1">Figure 7: Duplicate sequence fragment <a href="pdfxml.html#40">[50]</a></text>
<text top="563" left="143" width="632" height="16" font="1">structural, and semantic similarities between models. The heuristics are split into</text>
<text top="584" left="143" width="632" height="16" font="1">2 categories: static heuristics that use attributes that have no semantics, such as</text>
<text top="606" left="143" width="632" height="16" font="1">the names or features of elements; and behavioural heuristics, which ﬁnd pairs</text>
<text top="628" left="143" width="632" height="16" font="1">that have similar dynamic behavior. Due to the use of heuristics, this approach</text>
<text top="649" left="143" width="632" height="16" font="1">requires a domain expert look over the relations and add or remove relations,</text>
<text top="671" left="143" width="632" height="16" font="1">accordingly, to acquire the desired matching relation. A desireable relation is one</text>
<text top="693" left="143" width="632" height="16" font="1">that does not yield too many false positives or false negatives. This approach</text>
<text top="714" left="143" width="632" height="16" font="1">employs both similarity-based matching through static heuristics and custom-</text>
<text top="736" left="143" width="632" height="16" font="1">language speciﬁc matching through dynamic heuristics. The results are combined</text>
<text top="758" left="143" width="632" height="16" font="1">and weighted equally by the approach when calculating overall similarity. After</text>
<text top="779" left="143" width="632" height="16" font="1">similarity is established between two state charts, the merging operation calculates</text>
<text top="801" left="143" width="632" height="16" font="1">and represents diﬀerences as variabilities, or guarded transitions, from one model</text>
<text top="823" left="143" width="97" height="16" font="1">to the other.</text>
<text top="881" left="143" width="31" height="19" font="2">3.3</text>
<text top="881" left="198" width="324" height="19" font="2">Methods for structural models</text>
<text top="926" left="143" width="632" height="16" font="1">This section discusses approaches that are designed explicitly to work with models</text>
<text top="948" left="143" width="632" height="16" font="1">that represent the structure of a system. They beneﬁt from the domain knowledge</text>
<text top="969" left="143" width="363" height="16" font="1">gained by working with structural models only.</text>
<text top="1000" left="170" width="605" height="16" font="1">Early work on comparing and diﬀerencing software structural diagrams was</text>
<text top="1022" left="143" width="632" height="16" font="1">done by Rho and Wu <a href="pdfxml.html#41">[67]. </a>They focused on comparing a current version of an</text>
<text top="1043" left="143" width="632" height="16" font="1">artifact to its preceding ancestor. They attempt to deﬁne the characteristics of</text>
<text top="1065" left="143" width="632" height="16" font="1">such diagrams and outline and describe the potential directed deltas within this</text>
<text top="1112" left="450" width="18" height="16" font="1">20</text>
</page>
<page number="25" position="absolute" top="0" left="0" height="1188" width="918">
<text top="170" left="143" width="61" height="16" font="1">domain.</text>
<text top="226" left="143" width="41" height="16" font="1">3.3.1</text>
<text top="226" left="205" width="209" height="16" font="1">UML structural models</text>
<text top="268" left="143" width="632" height="16" font="1">UMLDiﬀ <a href="pdfxml.html#43">[87], </a>by Xing and Stroulia, uses custom language-speciﬁc matching in that</text>
<text top="290" left="143" width="632" height="16" font="1">it uses name-similarity and UML structure-similarity to identify matching elements.</text>
<text top="312" left="143" width="632" height="16" font="1">These metrics are combined and compared against a user-deﬁned threshold. It</text>
<text top="333" left="143" width="632" height="16" font="1">is intended to be used as a model versioning reasoner in that it is supposed to</text>
<text top="355" left="143" width="632" height="16" font="1">discover changes made from one version of a model to another and assumes that</text>
<text top="377" left="143" width="227" height="16" font="1">when making its calculations.</text>
<text top="407" left="170" width="69" height="16" font="1">UMLDiﬀ</text>
<text top="414" left="242" width="16" height="11" font="3">cld</text>
<text top="407" left="267" width="508" height="16" font="1"><a href="pdfxml.html#38">[32], </a>by Girschick, is a tool that focuses on UML class diagram</text>
<text top="429" left="143" width="632" height="16" font="1">diﬀerencing. It uses a combination of static identity-based and similarity-based</text>
<text top="451" left="143" width="632" height="16" font="1">matching within its evaluation function, which measures the quality of a match.</text>
<text top="472" left="143" width="632" height="16" font="1">Similarly, Mirador <a href="pdfxml.html#36">[7] </a>is a plugin created for the Fujaba (From Uml to Java</text>
<text top="494" left="143" width="133" height="16" font="1">and Back Ag<a href="pdfxml.html#25">ain)</a></text>
<text top="492" left="276" width="13" height="11" font="3"><a href="pdfxml.html#25">10</a></text>
<text top="494" left="296" width="478" height="16" font="1">tool suite that allows for user directed matching of elements.</text>
<text top="516" left="143" width="632" height="16" font="1">Speciﬁcally, it allows users to select match candidates that are ranked according to</text>
<text top="537" left="143" width="632" height="16" font="1">a similarity measure that is a combination of static identity-based and similarity-</text>
<text top="559" left="143" width="232" height="16" font="1">based matching, like UMLDiﬀ</text>
<text top="566" left="379" width="16" height="11" font="3">cld</text>
<text top="559" left="395" width="5" height="16" font="1">.</text>
<text top="590" left="170" width="605" height="16" font="1">Reddy et al. <a href="pdfxml.html#41">[64] </a>uses signature-based matching in order to compare and</text>
<text top="611" left="143" width="632" height="16" font="1">compose two UML class models in order to assist with Aspect-oriented modeling <a href="pdfxml.html#38">[23,</a></text>
<text top="633" left="143" width="27" height="16" font="1"><a href="pdfxml.html#38">26].</a></text>
<text top="633" left="189" width="586" height="16" font="1">Aspect-oriented modeling is a modeling technique that allows separating</text>
<text top="655" left="143" width="632" height="16" font="1">crosscutting concerns from other features. In this comparison approach, models</text>
<text top="676" left="143" width="632" height="16" font="1">are matched based on their signatures, or property values associated with the class.</text>
<text top="698" left="143" width="632" height="16" font="1">Each signature has a signature type, which is the set of properties that a signature</text>
<text top="720" left="143" width="202" height="16" font="1">can take. Using <a href="pdfxml.html#25">KerMeta</a></text>
<text top="717" left="345" width="13" height="11" font="3"><a href="pdfxml.html#25">11</a></text>
<text top="720" left="359" width="416" height="16" font="1"><a href="pdfxml.html#25">, </a>a model querying language, the signatures used for</text>
<text top="741" left="143" width="632" height="16" font="1">comparison are derived by the tool based on the features it has within the meta</text>
<text top="763" left="143" width="51" height="16" font="1">model.</text>
<text top="794" left="170" width="605" height="16" font="1">Beradi et al. <a href="pdfxml.html#36">[9] </a>translate UML class diagrams into ALCQI, a “simple”</text>
<text top="815" left="143" width="632" height="16" font="1">description logic representation. They show that it is possible for one to reason</text>
<text top="837" left="143" width="632" height="16" font="1">about UML class diagrams as ALCQI description logic representations, or DLs,</text>
<text top="859" left="143" width="632" height="16" font="1">and they provide an encoding from UML class diagrams to ALCQI. While the</text>
<text top="880" left="143" width="632" height="16" font="1">translation does not maintain the entire semantics of the UML classes, it preserves</text>
<text top="902" left="143" width="439" height="16" font="1">enough of it to be able to check for class equivalence.</text>
<text top="902" left="600" width="175" height="16" font="1">Equivalence is deﬁned</text>
<text top="924" left="143" width="632" height="16" font="1">as the case where two classes represent “the same set of instances whenever the</text>
<text top="945" left="143" width="632" height="16" font="1">requirements imposed by the class diagram are satisﬁed”. Because they use UML</text>
<text top="967" left="143" width="632" height="16" font="1">speciﬁc semantics, we can argue that they are using custom-language speciﬁc</text>
<text top="989" left="143" width="76" height="16" font="1">matching.</text>
<text top="1020" left="157" width="12" height="9" font="4">10</text>
<text top="1023" left="170" width="151" height="13" font="5">http://www.fujaba.de/</text>
<text top="1038" left="157" width="12" height="9" font="4">11</text>
<text top="1041" left="170" width="161" height="13" font="5">http://www.kermeta.org</text>
<text top="1112" left="450" width="18" height="16" font="1">21</text>
</page>
<page number="26" position="absolute" top="0" left="0" height="1188" width="918">
<text top="170" left="170" width="605" height="16" font="1">Maoz et al. <a href="pdfxml.html#40">[51] </a>later extend their work on semantic diﬀerencing discussed</text>
<text top="192" left="143" width="632" height="16" font="1">previously and provide a translation prototype, called CD2Alloy, that converts</text>
<text top="214" left="143" width="192" height="16" font="1">UML classes into Alloy.</text>
<text top="214" left="353" width="422" height="16" font="1">This Alloy code speciﬁcally contains constructs that</text>
<text top="235" left="143" width="632" height="16" font="1">determines the matching elements of two UML class diagrams and also perform</text>
<text top="257" left="143" width="632" height="16" font="1">semantic comparisons such as if one model is a reﬁnement of another. It can also</text>
<text top="279" left="143" width="632" height="16" font="1">be considered to be an instance of a custom-language speciﬁc comparison matching</text>
<text top="300" left="143" width="360" height="16" font="1">approach because of its use of UML semantics.</text>
<text top="356" left="143" width="41" height="16" font="1">3.3.2</text>
<text top="356" left="205" width="282" height="16" font="1">Metamodel-agnostic approaches</text>
<text top="398" left="143" width="632" height="16" font="1">Preliminary work on model comparison was done by Chawathe et al. <a href="pdfxml.html#37">[12] </a>in which</text>
<text top="420" left="143" width="632" height="16" font="1">they devised a comparison approach intended for any structured document. They</text>
<text top="442" left="143" width="632" height="16" font="1">convert the data representing the document structure into a graph consisting of</text>
<text top="463" left="143" width="632" height="16" font="1">nodes that have identiﬁers that are based on the corresponding elements they</text>
<text top="485" left="143" width="75" height="16" font="1">represent.</text>
<text top="485" left="241" width="534" height="16" font="1">This approach, which is analogous to the model clone detection</text>
<text top="507" left="143" width="632" height="16" font="1">techniques, uses similarity-based matching and describes diﬀerences in terms of</text>
<text top="528" left="143" width="117" height="16" font="1">directed deltas.</text>
<text top="559" left="170" width="605" height="16" font="1">SiDiﬀ <a href="pdfxml.html#39">[36] </a>is very similar to UMLDiﬀ except SiDiﬀ uses a simpliﬁed underlying</text>
<text top="581" left="143" width="632" height="16" font="1">comparison model in order to be able to handle any models stored in XML Metadata</text>
<text top="602" left="143" width="632" height="16" font="1">Interchange (XMI) format. Therefore, SiDiﬀ can work with any models deﬁned</text>
<text top="624" left="143" width="632" height="16" font="1">by a meta model that uses XMI. This approach is described by the authors in</text>
<text top="646" left="143" width="632" height="16" font="1">relation to UML class diagrams, however, they state that it can be extended</text>
<text top="667" left="143" width="632" height="16" font="1">to state charts as well. Similarly to UMLDiﬀ, it uses similarity-based metrics.</text>
<text top="689" left="143" width="632" height="16" font="1">In contrast to UMLDiﬀ, as shown by the up arrow in Figure <a href="pdfxml.html#27">8, </a>its calculation</text>
<text top="711" left="143" width="632" height="16" font="1">begins bottom-up by comparing the sub elements of a pair of model elements</text>
<text top="732" left="143" width="265" height="16" font="1">starting with their leaf elements.</text>
<text top="732" left="427" width="348" height="16" font="1">This is done with respect to the elements’</text>
<text top="754" left="143" width="632" height="16" font="1">similarity metrics. An example of a weighted similarity is having a class element</text>
<text top="776" left="143" width="632" height="16" font="1">consider the similarity of its class name weighted the highest followed by operations,</text>
<text top="797" left="143" width="632" height="16" font="1">attributes, and generalizations/interfaces. So, in the case of the two Class elements</text>
<text top="819" left="143" width="632" height="16" font="1">being compared in Figure <a href="pdfxml.html#27">8, </a>all of the Classiﬁer elements are compared ﬁrst.</text>
<text top="841" left="143" width="632" height="16" font="1">If a uniquely identifying element is matched, such as a class name, they are</text>
<text top="862" left="143" width="632" height="16" font="1">immediately identiﬁed as a match. This is followed by a top-down propagation</text>
<text top="884" left="143" width="632" height="16" font="1">of this matching pair. Figure <a href="pdfxml.html#27">8 </a>shows the algorithm ﬁnding a match and stopping</text>
<text top="906" left="143" width="632" height="16" font="1">the bottom-up comparison at Class and, subsequently, beginning its top-down</text>
<text top="927" left="143" width="632" height="16" font="1">propagation at this point. This top-down approach allows for the algorithm to</text>
<text top="949" left="143" width="632" height="16" font="1">deduce diﬀerences by evaluating the correspondence table that is the output of the</text>
<text top="971" left="143" width="632" height="16" font="1">matching phase. Schmidt <a href="pdfxml.html#42">[72] </a>demonstrates that SiDiﬀ can be used to construct a</text>
<text top="992" left="143" width="632" height="16" font="1">standard framework for detecting model diﬀerences for version management tools.</text>
<text top="1014" left="143" width="632" height="16" font="1">Treude <a href="pdfxml.html#43">[82] </a>improves the data structure used within SiDiﬀ in order to increase the</text>
<text top="1036" left="143" width="632" height="16" font="1">SiDiﬀ algorithm’s speed. Because the elements in this algorithm are compared in</text>
<text top="1057" left="143" width="632" height="16" font="1">a type wise manner, it requires the users to deﬁne a function that compares two</text>
<text top="1112" left="450" width="18" height="16" font="1">22</text>
</page>
<page number="27" position="absolute" top="0" left="0" height="1188" width="918">
<text top="170" left="143" width="632" height="16" font="1">elements of the same type. This function should return between 0 and 1, where</text>
<text top="192" left="143" width="632" height="16" font="1">0 means no similarity and 1 means extremely similar. This is accomplished by</text>
<text top="214" left="143" width="632" height="16" font="1">having users setting up this function/similarity criteria for each element type in a</text>
<text top="235" left="143" width="134" height="16" font="1">conﬁguration ﬁle.</text>
<text top="585" left="287" width="344" height="16" font="1">Figure 8: Example of SiDiﬀ Comparison <a href="pdfxml.html#39">[36]</a></text>
<text top="638" left="170" width="605" height="16" font="1">Similarly to the translation of UML class diagrams into ALCQI, d’Amato et</text>
<text top="660" left="143" width="632" height="16" font="1">al. <a href="pdfxml.html#37">[19] </a>propose a comparison measure for description logics, such as those used in</text>
<text top="681" left="143" width="141" height="16" font="1">the Semantic Web</text>
<text top="679" left="291" width="13" height="11" font="3"><a href="pdfxml.html#27">12</a></text>
<text top="681" left="305" width="470" height="16" font="1"><a href="pdfxml.html#27">, </a>using existing ontology, or concept and relation, semantics.</text>
<text top="703" left="143" width="632" height="16" font="1">They describe a semantic similarity measure that is able use the semantics of the</text>
<text top="725" left="143" width="272" height="16" font="1">ontology that the concepts refer to.</text>
<text top="783" left="143" width="31" height="19" font="2">3.4</text>
<text top="783" left="198" width="412" height="19" font="2">Methods for product line architectures</text>
<text top="828" left="143" width="632" height="16" font="1">Chen <a href="pdfxml.html#37">[14] </a>presents work intended to do comparisons of product line models for</text>
<text top="849" left="143" width="632" height="16" font="1">the purpose of merging. The assumption in this work is that the comparison is</text>
<text top="871" left="143" width="632" height="16" font="1">being done on one version of an artifact with respect to another version of the same</text>
<text top="893" left="143" width="632" height="16" font="1">artifact. Comparison is done recursively and is more ﬁne grained as the algorithm</text>
<text top="914" left="143" width="632" height="16" font="1">gets deeper into the product line hierarchy. This approach employs similarity-based</text>
<text top="936" left="143" width="632" height="16" font="1">matching: lower elements in the hierarchy compare interfaces, optionality, and type;</text>
<text top="958" left="143" width="632" height="16" font="1">and higher level elements compare the elements contained by them. Diﬀerences are</text>
<text top="979" left="143" width="232" height="16" font="1">represented as directed deltas.</text>
<text top="1011" left="157" width="12" height="9" font="4">12</text>
<text top="1014" left="170" width="162" height="13" font="5">http://semanticweb.org/</text>
<text top="1112" left="450" width="18" height="16" font="1">23</text>
</page>
<page number="28" position="absolute" top="0" left="0" height="1188" width="918">
<text top="168" left="143" width="31" height="19" font="2">3.5</text>
<text top="168" left="198" width="297" height="19" font="2">Methods for process models</text>
<text top="212" left="143" width="632" height="16" font="1">Soto <a href="pdfxml.html#42">[79] </a>discusses the need for ascertaining diﬀerences among software development</text>
<text top="234" left="143" width="632" height="16" font="1">process models and outlines what such a diﬀerence system would require. They</text>
<text top="256" left="143" width="632" height="16" font="1">devise an approach called Delta-P <a href="pdfxml.html#42">[78], </a>which they also argue can work with</text>
<text top="277" left="143" width="632" height="16" font="1">various UML models. Delta-P converts process models into Resource Description</text>
<text top="299" left="143" width="142" height="16" font="1">Framework (RDF)</text>
<text top="297" left="297" width="13" height="11" font="3"><a href="pdfxml.html#28">13</a></text>
<text top="299" left="316" width="459" height="16" font="1">notation, in order to have them represented in a normalized</text>
<text top="321" left="143" width="632" height="16" font="1">triplebased notation, and performs an identity-based comparison and calculates</text>
<text top="343" left="143" width="84" height="16" font="1">diﬀerences.</text>
<text top="343" left="250" width="525" height="16" font="1">They employ static-identity based matching as they use unique</text>
<text top="364" left="143" width="632" height="16" font="1">identiﬁers. RDF is chosen because it is inexpensive and easy to convert to from</text>
<text top="386" left="143" width="632" height="16" font="1">models, the models are easily understandable to humans, and they already have</text>
<text top="408" left="143" width="632" height="16" font="1">a notation for expressing patterns in RDF graphs known as SPARQL. Diﬀerences</text>
<text top="429" left="143" width="632" height="16" font="1">are represented as directed deltas, however, they provide examples of where they</text>
<text top="451" left="143" width="531" height="16" font="1">are able to group directed deltas together to form higher level deltas.</text>
<text top="481" left="170" width="605" height="16" font="1">Similarly, Dijkman et <a href="pdfxml.html#37">al.[22] </a>discuss three similarity metrics that will help</text>
<text top="503" left="143" width="632" height="16" font="1">compare stored process models: node matching similarity, which compares the</text>
<text top="525" left="143" width="632" height="16" font="1">labels and attributes attached to process model elements; structural similarity,</text>
<text top="546" left="143" width="632" height="16" font="1">which evaluates labels and topology; and, behavioral similarity, which looks at</text>
<text top="568" left="143" width="632" height="16" font="1">labels in conjunction with causal relations from the process models. According to</text>
<text top="590" left="143" width="632" height="16" font="1">the authors, “structural similarity slightly outperformed the other two metrics.”</text>
<text top="611" left="143" width="256" height="16" font="1">They have no tool developed yet.</text>
<text top="670" left="143" width="31" height="19" font="2">3.6</text>
<text top="670" left="198" width="102" height="19" font="2">Summary</text>
<text top="715" left="143" width="632" height="16" font="1">Table <a href="pdfxml.html#30">1 </a>on the next page summarizes the approaches discussed in this section</text>
<text top="736" left="143" width="632" height="16" font="1">organized by the type and sub type of model they are able to compare. It is</text>
<text top="758" left="143" width="632" height="16" font="1">clear from Table <a href="pdfxml.html#30">1 </a>that similarity-based matching is the most commonly employed</text>
<text top="780" left="143" width="632" height="16" font="1">strategy by the techniques investigated in this technical report. Most approaches,</text>
<text top="801" left="143" width="632" height="16" font="1">especially those that are more recent, are able to work with any model that conforms</text>
<text top="823" left="143" width="632" height="16" font="1">to an arbitrary meta model. This is assuming the meta model conforms to approach-</text>
<text top="845" left="143" width="632" height="16" font="1">speciﬁc requirements, such as the existence of unique identiﬁers or subscription to a</text>
<text top="866" left="143" width="632" height="16" font="1">particular meta-meta modeling language. This result is consistent with the recent</text>
<text top="888" left="143" width="265" height="16" font="1">trend in domain-speciﬁc modeling.</text>
<text top="919" left="170" width="605" height="16" font="1">Lastly, the majority of work in model comparison thus far appears to be geared</text>
<text top="940" left="143" width="632" height="16" font="1">towards model versioning, however a number of these comparison methods can be</text>
<text top="962" left="143" width="632" height="16" font="1">extended for other purposes. The last column attempts to showcase the relative</text>
<text top="984" left="143" width="632" height="16" font="1">amount of user work required to accomplish model comparison. This is based on</text>
<text top="1005" left="143" width="632" height="16" font="1">the research performed for this technical report. The justiﬁcation for each tool that</text>
<text top="1027" left="143" width="632" height="16" font="1">has 1 * or more can be found in the textual descriptions provided previously. ECL</text>
<text top="1059" left="157" width="12" height="9" font="4">13</text>
<text top="1061" left="170" width="174" height="13" font="5">http://www.w3.org/RDF/</text>
<text top="1112" left="450" width="18" height="16" font="1">24</text>
</page>
<page number="29" position="absolute" top="0" left="0" height="1188" width="918">
<text top="170" left="143" width="632" height="16" font="1">and the approach presented by Van den Brand et al. require the most amount</text>
<text top="192" left="143" width="632" height="16" font="1">of user work, however this is intentional to allow for more power and generality.</text>
<text top="214" left="143" width="632" height="16" font="1">Many approaches require no user work or interaction as they operate under speciﬁc</text>
<text top="235" left="143" width="632" height="16" font="1">conditions or are dynamic enough to understand the context or meta models they</text>
<text top="257" left="143" width="135" height="16" font="1">are working with.</text>
<text top="1112" left="450" width="18" height="16" font="1">25</text>
</page>
<page number="30" position="absolute" top="0" left="0" height="1188" width="918">
<text top="180" left="254" width="409" height="16" font="1">Table 1: Summary of Model Comparison Approaches</text>
<text top="1112" left="450" width="18" height="16" font="1">26</text>
</page>
<page number="31" position="absolute" top="0" left="0" height="1188" width="918">
<text top="165" left="143" width="15" height="23" font="0">4</text>
<text top="165" left="187" width="372" height="23" font="0">Potential for pattern analysis</text>
<text top="217" left="143" width="632" height="16" font="1">An interesting idea in MDE is providing software engineers or researchers the ability</text>
<text top="239" left="143" width="632" height="16" font="1">to extract common sub-structures or patterns from a set of models. This kind of</text>
<text top="260" left="143" width="632" height="16" font="1">analysis can improve existing projects by providing refactoring suggestions, helping</text>
<text top="282" left="143" width="632" height="16" font="1">with discovering best practices and antipatterns within MDE, and advancing the</text>
<text top="304" left="143" width="632" height="16" font="1">ﬁeld of MDE in general. To accomplish this, one would need to be able to perform</text>
<text top="325" left="143" width="493" height="16" font="1">a type of model comparison that is tailored to this speciﬁc task.</text>
<text top="354" left="170" width="605" height="16" font="1">There are two diﬀerent types of pattern analysis within MDE projects. The ﬁrst</text>
<text top="376" left="143" width="632" height="16" font="1">is inferring patterns or antipatterns by looking at existing projects and the second</text>
<text top="398" left="143" width="632" height="16" font="1">is detecting existing patterns or antipatterns within projects. The output of the</text>
<text top="419" left="143" width="632" height="16" font="1">ﬁrst pattern analysis type can be the input to the second. We brieﬂy look at both</text>
<text top="441" left="143" width="189" height="16" font="1">in the following sections.</text>
<text top="497" left="143" width="31" height="19" font="2">4.1</text>
<text top="497" left="198" width="189" height="19" font="2">Inferring patterns</text>
<text top="540" left="143" width="632" height="16" font="1">Looking at the approaches we discussed in the previous section, there are a number</text>
<text top="562" left="143" width="632" height="16" font="1">of observations that we can make. Firstly, approaches using static-identity based</text>
<text top="584" left="143" width="632" height="16" font="1">matching will not be of use. This is because we are not looking for elements that</text>
<text top="605" left="143" width="632" height="16" font="1">represent the same concept, but rather had a similar intention in being constructed</text>
<text top="627" left="143" width="632" height="16" font="1">in a particular way. Model clone detection techniques could yield some interesting</text>
<text top="649" left="143" width="632" height="16" font="1">results as they are already designed to match the largest common sub sequence of</text>
<text top="670" left="143" width="632" height="16" font="1">elements. If we look at the semantics of the clones extracted, likely through the</text>
<text top="692" left="143" width="632" height="16" font="1">assistance of a domain-expert and the techniques discussed by Al-Batran et al. <a href="pdfxml.html#36">[1],</a></text>
<text top="714" left="143" width="632" height="16" font="1">we may be able to deduce pattern- or antipattern-like subgraphs. It would be</text>
<text top="735" left="143" width="632" height="16" font="1">interesting to compare the exact clones found through CloneDetective or eScan to</text>
<text top="757" left="143" width="632" height="16" font="1">approximate clones found through aScan. We may not want exact clones because</text>
<text top="779" left="143" width="632" height="16" font="1">they may indicate a true “copy and paste scenario”, while approximate clones may</text>
<text top="800" left="143" width="632" height="16" font="1">represent a non-trivial pattern or antipattern. It should be noted that, currently,</text>
<text top="822" left="143" width="632" height="16" font="1">model clone detection tools work only with behaviour models <a href="pdfxml.html#37">[20] </a>because it is</text>
<text top="844" left="143" width="632" height="16" font="1">diﬃcult to strictly deﬁne the notion of a clone for structural models, according</text>
<text top="865" left="143" width="632" height="16" font="1">to the authors. However, we have discussed in the previous section approaches</text>
<text top="887" left="143" width="632" height="16" font="1">that detect similar elements within structural and other types of models. Of these,</text>
<text top="909" left="143" width="632" height="16" font="1">similarity-based matching looks the most promising. We could tailor similarity</text>
<text top="930" left="143" width="632" height="16" font="1">metrics to ﬁt the types of patterns or sub-structures that we are looking for and</text>
<text top="952" left="143" width="632" height="16" font="1">maybe even extend these techniques to consider some kind of semantic information</text>
<text top="974" left="143" width="632" height="16" font="1">or deﬁnition. Lastly, we could investigate the possibility of extending some of the</text>
<text top="995" left="143" width="632" height="16" font="1">behavioral similarity heuristics used for state charts <a href="pdfxml.html#40">[56], </a>depending on the types</text>
<text top="1017" left="143" width="216" height="16" font="1">of models we are looking at.</text>
<text top="1046" left="170" width="605" height="16" font="1">It may be hard to deﬁne what we are looking for in terms of patterns or</text>
<text top="1068" left="143" width="98" height="16" font="1">antipatterns.</text>
<text top="1068" left="261" width="514" height="16" font="1">A good starting point could be to think of model patterns or</text>
<text top="1112" left="450" width="18" height="16" font="1">27</text>
</page>
<page number="32" position="absolute" top="0" left="0" height="1188" width="918">
<text top="170" left="143" width="632" height="16" font="1">antipatterns that are analogous to those associated with software code <a href="pdfxml.html#36">[10, </a><a href="pdfxml.html#38">29, </a><a href="pdfxml.html#42">71].</a></text>
<text top="192" left="143" width="632" height="16" font="1">It is important to note, that if we do not know what patterns or antipatterns we</text>
<text top="214" left="143" width="632" height="16" font="1">are looking for, then graph based approaches may be ineﬃcient and we may have</text>
<text top="235" left="143" width="632" height="16" font="1">to look at inference techniques from other domains, such as grammar inference <a href="pdfxml.html#41">[62].</a></text>
<text top="294" left="143" width="31" height="19" font="2">4.2</text>
<text top="294" left="198" width="275" height="19" font="2">Detecting known patterns</text>
<text top="338" left="143" width="588" height="16" font="1">This type of pattern analysis may be easier to facilitate than inference.</text>
<text top="338" left="750" width="24" height="16" font="1">We</text>
<text top="360" left="143" width="632" height="16" font="1">could likely leverage some of the work done in model versioning by expressing</text>
<text top="382" left="143" width="632" height="16" font="1">the patterns or antipatterns as a model that can be compared to other models</text>
<text top="403" left="143" width="632" height="16" font="1">within projects. Given a threshold, models that correspond suﬃciently will be seen</text>
<text top="425" left="143" width="632" height="16" font="1">as being instances of the pattern or antipattern we are searching for. A variation</text>
<text top="447" left="143" width="632" height="16" font="1">of this was accomplished by us previously <a href="pdfxml.html#42">[80] </a>when we were able to express Java</text>
<text top="468" left="143" width="632" height="16" font="1">Enterprise Edition (J2EE) antipatterns as a framework speciﬁc model and check</text>
<text top="490" left="143" width="544" height="16" font="1">for antipattern instances among speciﬁc J2EE framework instances.</text>
<text top="490" left="705" width="70" height="16" font="1">However,</text>
<text top="512" left="143" width="632" height="16" font="1">this approach works only with software frameworks. Extending the approaches</text>
<text top="533" left="143" width="632" height="16" font="1">discussed in the previous section would require a non-trivial amount of work as the</text>
<text top="555" left="143" width="632" height="16" font="1">majority of them deal with a single element at a time. Early model clone detection</text>
<text top="577" left="143" width="632" height="16" font="1">approaches would not be very useful in their current form. However, as shown in</text>
<text top="598" left="143" width="632" height="16" font="1">the extension done by Al-Batran et al. <a href="pdfxml.html#36">[1], </a>we may be able to use the semantic-based</text>
<text top="620" left="143" width="632" height="16" font="1">techniques they discuss to establish a correspondence between known patterns and</text>
<text top="642" left="143" width="632" height="16" font="1">a normalized representation of our models. For example, if we wanted to detect the</text>
<text top="663" left="143" width="632" height="16" font="1">Composite Pattern<a href="pdfxml.html#38">[29] </a>or other design patterns, we could represent the pattern in</text>
<text top="685" left="143" width="624" height="16" font="1">a normalized form and look for both syntactic or semantic matches in our models.</text>
<text top="1112" left="450" width="18" height="16" font="1">28</text>
</page>
<page number="33" position="absolute" top="0" left="0" height="1188" width="918">
<text top="165" left="143" width="15" height="23" font="0">5</text>
<text top="165" left="187" width="169" height="23" font="0">Related work</text>
<text top="221" left="143" width="31" height="19" font="2">5.1</text>
<text top="221" left="198" width="315" height="19" font="2">Other comparison approaches</text>
<text top="266" left="143" width="632" height="16" font="1">This section brieﬂy discusses other comparison techniques and why they are not</text>
<text top="287" left="143" width="285" height="16" font="1">transferable to the modeling domain.</text>
<text top="343" left="143" width="41" height="16" font="1">5.1.1</text>
<text top="343" left="205" width="252" height="16" font="1">Code comparison techniques</text>
<text top="385" left="143" width="632" height="16" font="1">There is an abundance of work done in comparing software artifacts at the level</text>
<text top="407" left="143" width="632" height="16" font="1">of programming code. In Section <a href="pdfxml.html#8">2.2.1 </a>we illustrated just one example of why</text>
<text top="428" left="143" width="632" height="16" font="1">traditional versioning comparison approaches are insuﬃcient. Altmanninger <a href="pdfxml.html#36">[6]</a></text>
<text top="450" left="143" width="632" height="16" font="1">presents many more including incorrect conﬂict detection, conﬂict resolution, and</text>
<text top="472" left="143" width="179" height="16" font="1">merged model versions.</text>
<text top="527" left="143" width="41" height="16" font="1">5.1.2</text>
<text top="527" left="205" width="234" height="16" font="1">Textual model comparison</text>
<text top="569" left="143" width="632" height="16" font="1">There are approaches that serialize models to text. Cobena et al. <a href="pdfxml.html#37">[18] </a>attempt to</text>
<text top="591" left="143" width="632" height="16" font="1">check diﬀerences in versions of XML documents while Xlinkit <a href="pdfxml.html#40">[57] </a>compares XMI</text>
<text top="612" left="143" width="632" height="16" font="1">representations of models. Both of these approaches suﬀer from working on too</text>
<text top="634" left="143" width="632" height="16" font="1">low a level of abstraction in that they can not account for model-speciﬁc features</text>
<text top="656" left="143" width="632" height="16" font="1">such as inheritance and cross referencing <a href="pdfxml.html#39">[39]. </a>Xlinkit results are also quite large</text>
<text top="677" left="143" width="632" height="16" font="1">and diﬃcult to work with compared to the techniques discussed in this technical</text>
<text top="699" left="143" width="52" height="16" font="1">report.</text>
<text top="755" left="143" width="41" height="16" font="1">5.1.3</text>
<text top="755" left="205" width="185" height="16" font="1">Code clone detection</text>
<text top="797" left="143" width="632" height="16" font="1">As discussed earlier, code clone detection techniques <a href="pdfxml.html#42">[69] </a>have diﬃculty or are</text>
<text top="818" left="143" width="632" height="16" font="1">unable to account for model-speciﬁc relations since they are strictly textual. Also,</text>
<text top="840" left="143" width="606" height="16" font="1">the notion of a code clone and model clone can be seen as two diﬀerent things.</text>
<text top="895" left="143" width="41" height="16" font="1">5.1.4</text>
<text top="895" left="205" width="226" height="16" font="1">Translation to formalisms</text>
<text top="938" left="143" width="632" height="16" font="1">A number of examples where models were translated into formalisms capable of</text>
<text top="959" left="143" width="632" height="16" font="1">performing comparison were discussed in this technical report including the work</text>
<text top="981" left="143" width="632" height="16" font="1">by Gheyi et al. <a href="pdfxml.html#38">[31] </a>and Berardi et al. <a href="pdfxml.html#36">[9]. </a>However, there are other examples</text>
<text top="1003" left="143" width="632" height="16" font="1">of models being translated into such formalisms including UML state machines</text>
<text top="1024" left="143" width="632" height="16" font="1">into Promela/SPIN models <a href="pdfxml.html#37">[13, </a><a href="pdfxml.html#39">44, </a><a href="pdfxml.html#40">47] </a>and, likely, others. While this material is</text>
<text top="1046" left="143" width="632" height="16" font="1">related, we focused mostly on approaches that were intended to performing model</text>
<text top="1068" left="143" width="295" height="16" font="1">comparison and diﬀerencing explicitly.</text>
<text top="1112" left="450" width="18" height="16" font="1">29</text>
</page>
<page number="34" position="absolute" top="0" left="0" height="1188" width="918">
<text top="168" left="143" width="31" height="19" font="2">5.2</text>
<text top="168" left="198" width="196" height="19" font="2">Graph comparison</text>
<text top="212" left="143" width="567" height="16" font="1">Similarity Flooding <a href="pdfxml.html#40">[54] </a>is an example of a graph matching algorithm.</text>
<text top="212" left="727" width="48" height="16" font="1">It can</text>
<text top="234" left="143" width="632" height="16" font="1">be seen as a similarity-based matching approach in that it uses the similarity of</text>
<text top="256" left="143" width="511" height="16" font="1">an element’s neighbouring nodes to discover matching elements.</text>
<text top="256" left="670" width="105" height="16" font="1">If two node’s</text>
<text top="277" left="143" width="632" height="16" font="1">neighbours are similar then their similarity measure increases. The initial similarity</text>
<text top="299" left="143" width="632" height="16" font="1">is calculated using nodes’ names. The problem with this approach is that it works</text>
<text top="321" left="143" width="632" height="16" font="1">on too high of a conceptual level and is not able to use diagram- or context- speciﬁc</text>
<text top="343" left="143" width="632" height="16" font="1">information <a href="pdfxml.html#38">[25]. </a>This is unacceptable for our purposes because it is unlikely that</text>
<text top="364" left="143" width="632" height="16" font="1">meaningful matches or patterns will be discovered with very little or no context.</text>
<text top="386" left="143" width="632" height="16" font="1">A similar problem is experienced by the method presented by Krinke <a href="pdfxml.html#39">[43] </a>in which</text>
<text top="408" left="143" width="547" height="16" font="1">similar code is discovered through program dependency graph analysis.</text>
<text top="466" left="143" width="31" height="19" font="2">5.3</text>
<text top="466" left="198" width="236" height="19" font="2">Related survey papers</text>
<text top="511" left="143" width="632" height="16" font="1">This section discusses and contrasts other reviews that overlap the model compar-</text>
<text top="532" left="143" width="314" height="16" font="1">ison review done in this technical report.</text>
<text top="563" left="170" width="605" height="16" font="1">Altmanninger et al. <a href="pdfxml.html#36">[6] </a>perform a survey on model versioning approaches. This</text>
<text top="585" left="143" width="632" height="16" font="1">survey diﬀers from the work done in this technical report in that they focus very</text>
<text top="606" left="143" width="632" height="16" font="1">little on matching, investigate versioning systems only, and discuss only a subset of</text>
<text top="628" left="143" width="632" height="16" font="1">the model comparison approaches discussed in this technical report. Furthermore,</text>
<text top="650" left="143" width="482" height="16" font="1">they are much more concerned with merging than comparison.</text>
<text top="680" left="170" width="605" height="16" font="1">Sebastiani and Supiratana <a href="pdfxml.html#42">[73] </a>provide a summary of various diﬀerencing</text>
<text top="702" left="143" width="632" height="16" font="1">approaches, however, they look only at 3 speciﬁc approaches at a high level and</text>
<text top="724" left="143" width="632" height="16" font="1">compare them: SiDiﬀ, UMLDiﬀ, DSMDiﬀ. This is done with a focus on how these</text>
<text top="745" left="143" width="330" height="16" font="1">3 techniques can trace a model’s evolution.</text>
<text top="776" left="170" width="605" height="16" font="1">Lastly, Selonen <a href="pdfxml.html#42">[75] </a>performs a brief review of UML model comparison</text>
<text top="798" left="143" width="89" height="16" font="1">approaches.</text>
<text top="798" left="249" width="526" height="16" font="1">It looks at 5 speciﬁc approaches, all of which are covered in this</text>
<text top="819" left="143" width="632" height="16" font="1">technical report. It compares them by looking at their various properties including</text>
<text top="841" left="143" width="632" height="16" font="1">the evaluation provided with each tool, if they are dependent on identiﬁers, how</text>
<text top="863" left="143" width="632" height="16" font="1">customizable they are, and others. Similar to this technical report, they also note</text>
<text top="884" left="143" width="632" height="16" font="1">the various usage scenarios or applications of the approaches. In contrast, this</text>
<text top="906" left="143" width="632" height="16" font="1">technical report looked at techniques that deal with various types of models and</text>
<text top="928" left="143" width="632" height="16" font="1">included additional UML diagram approaches not identiﬁed by Selonen. Also, this</text>
<text top="949" left="143" width="632" height="16" font="1">technical report looked at model matching and diﬀerencing in a lot more detail</text>
<text top="971" left="143" width="170" height="16" font="1">than Selonen’s survey.</text>
<text top="1112" left="450" width="18" height="16" font="1">30</text>
</page>
<page number="35" position="absolute" top="0" left="0" height="1188" width="918">
<text top="165" left="143" width="15" height="23" font="0">6</text>
<text top="165" left="187" width="139" height="23" font="0">Conclusion</text>
<text top="219" left="143" width="632" height="16" font="1">Model comparison is a relatively young research area that is very important</text>
<text top="240" left="143" width="632" height="16" font="1">to MDE. It has been implemented in various forms and for various purposes,</text>
<text top="262" left="143" width="483" height="16" font="1">predominantly model versioning, merging, and clone detection.</text>
<text top="293" left="170" width="605" height="16" font="1">We provided an overview of the work done in model comparison, focusing on the</text>
<text top="314" left="143" width="632" height="16" font="1">type and sub types of models that the approaches work for, the intended application</text>
<text top="336" left="143" width="632" height="16" font="1">of the approaches, and the way in which they accomplish the model matching aspect</text>
<text top="358" left="143" width="632" height="16" font="1">of model comparison. We observed that the majority of recent approaches attempt</text>
<text top="379" left="143" width="632" height="16" font="1">to work with models from an arbitrary meta model. Also, similarity-based matching</text>
<text top="401" left="143" width="632" height="16" font="1">is the approach taken by most of the model matching methods discussed in this</text>
<text top="423" left="143" width="632" height="16" font="1">technical report. Lastly, model versioning appears to be the most common goal in</text>
<text top="444" left="143" width="632" height="16" font="1">performing model comparison up to this point. However, much of the comparison</text>
<text top="466" left="143" width="632" height="16" font="1">work done can be modiﬁed for other purposes. Some approaches require more user</text>
<text top="488" left="143" width="632" height="16" font="1">eﬀort to perform model comparison, however this is to facilitate more power and</text>
<text top="509" left="143" width="632" height="16" font="1">generality. Many of the approaches require no user interaction because they operate</text>
<text top="531" left="143" width="629" height="16" font="1">under speciﬁc constraints or are dynamic enough to deal with multiple situations.</text>
<text top="562" left="170" width="605" height="16" font="1">Based on our qualitative evaluation of the approaches, we believe that methods</text>
<text top="583" left="143" width="632" height="16" font="1">that use similarity-based matching, such as model clone detection, would be the</text>
<text top="605" left="143" width="632" height="16" font="1">most adept in inferring useful sub-structures or patterns within one or more models.</text>
<text top="627" left="143" width="632" height="16" font="1">It might also prove fruitful if we were to utilize the notion of approximate clones</text>
<text top="648" left="143" width="632" height="16" font="1">and to incorporate behavioral comparison heuristics, if applicable. For detecting</text>
<text top="670" left="143" width="632" height="16" font="1">existing patterns or antipatterns, it may be possible to build on techniques intended</text>
<text top="692" left="143" width="632" height="16" font="1">for model versioning by expressing the patterns or antipatterns as a model that is</text>
<text top="713" left="143" width="632" height="16" font="1">a potential match. Graph techniques may also prove useful in achieving this goal</text>
<text top="735" left="143" width="632" height="16" font="1">if we compare our patterns expressed in graph form against normalized versions of</text>
<text top="757" left="143" width="89" height="16" font="1">our models.</text>
<text top="787" left="170" width="605" height="16" font="1">In the future, we plan on either extending existing model comparison approaches</text>
<text top="809" left="143" width="632" height="16" font="1">or developing our own to analyze models provided to us from industrial partners to</text>
<text top="831" left="143" width="632" height="16" font="1">ﬁnd patterns or common structures within them. This may yield model comparison</text>
<text top="852" left="143" width="492" height="16" font="1">techniques that are speciﬁcally tailored for this kind of analysis.</text>
<text top="1112" left="450" width="18" height="16" font="1">31</text>
</page>
<page number="36" position="absolute" top="0" left="0" height="1188" width="918">
<text top="165" left="143" width="136" height="23" font="0">References</text>
<text top="217" left="152" width="195" height="16" font="1">[1] B. Al-Batran, B. Sch¨</text>
<text top="217" left="338" width="437" height="16" font="1">atz, and B. Hummel. Semantic clone detection for model-</text>
<text top="239" left="179" width="596" height="16" font="1">based development of embedded systems. Model Driven Engineering Languages</text>
<text top="261" left="179" width="348" height="16" font="1">and Systems, pages 258–272, 2011. <a href="pdfxml.html#23">19, </a><a href="pdfxml.html#31">27, </a><a href="pdfxml.html#32">28</a></text>
<text top="297" left="152" width="623" height="16" font="1">[2] M. Alanen and I. Porres. Diﬀerence and union of models. In 6th International</text>
<text top="319" left="179" width="384" height="16" font="1">Conference on The Uniﬁed Modeling Language:</text>
<text top="319" left="579" width="196" height="16" font="1">Modeling Languages and</text>
<text top="340" left="179" width="438" height="16" font="1">Applications., pages 2–17. Springer Verlag, 2003. <a href="pdfxml.html#8">4, </a><a href="pdfxml.html#13">9, </a><a href="pdfxml.html#15">11</a></text>
<text top="377" left="152" width="623" height="16" font="1">[3] M. Alanen and I. Porres. Version control of software models. Advances in</text>
<text top="399" left="179" width="500" height="16" font="1">UML and XML-Based Software Evolution, pages 47–70, 2005. <a href="pdfxml.html#15">11</a></text>
<text top="435" left="152" width="623" height="16" font="1">[4] K. Altmanninger, P. Brosch, G. Kappel, P. Langer, M. Seidl, K. Wieland, and</text>
<text top="457" left="179" width="596" height="16" font="1">M. Wimmer. Why Model Versioning Research is Needed!? An Experience</text>
<text top="479" left="179" width="536" height="16" font="1">Report. In MoDSE-MCCM Workshop in MoDELS, pages 1–12, 2009.</text>
<text top="515" left="152" width="623" height="16" font="1">[5] K. Altmanninger, G. Kappel, A. Kusel, W. Retschitzegger, M. Seidl,</text>
<text top="537" left="179" width="596" height="16" font="1">W. Schwinger, and M. Wimmer. AMOR-towards adaptable model versioning.</text>
<text top="559" left="179" width="596" height="16" font="1">In 1st Proceedings of the International Workshop on Model Co-Evolution and</text>
<text top="580" left="179" width="437" height="16" font="1">Consistency Management, volume 8, pages 4–50, 2008. <a href="pdfxml.html#8">4</a></text>
<text top="617" left="152" width="623" height="16" font="1">[6] K. Altmanninger, M. Seidl, and M. Wimmer. A survey on model versioning</text>
<text top="639" left="179" width="596" height="16" font="1">approaches. International Journal of Web Information Systems, 5(3):271–304,</text>
<text top="660" left="179" width="133" height="16" font="1">2009. <a href="pdfxml.html#8">4, </a><a href="pdfxml.html#9">5, </a><a href="pdfxml.html#33">29, </a><a href="pdfxml.html#34">30</a></text>
<text top="697" left="152" width="353" height="16" font="1">[7] S.C. Barrett, G. Butler, and P. Chalin.</text>
<text top="697" left="525" width="250" height="16" font="1">Mirador: a synthesis of model</text>
<text top="719" left="179" width="596" height="16" font="1">matching strategies. In Proceedings of the 1st International Workshop on Model</text>
<text top="740" left="179" width="403" height="16" font="1">Comparison in Practice, pages 2–10. ACM, 2010. <a href="pdfxml.html#25">21</a></text>
<text top="777" left="152" width="623" height="16" font="1">[8] M. Beine, R. Otterbach, and M. Jungmann. Development of safety-critical</text>
<text top="798" left="179" width="596" height="16" font="1">software using automatic code generation. Society of Automotive Engineers</text>
<text top="820" left="179" width="237" height="16" font="1">(SAE), pages 01–0708, 2004. <a href="pdfxml.html#7">3</a></text>
<text top="857" left="152" width="409" height="16" font="1">[9] D. Berardi, D. Calvanese, and G. De Giacomo.</text>
<text top="857" left="577" width="198" height="16" font="1">Reasoning on UML class</text>
<text top="878" left="179" width="479" height="16" font="1">diagrams. Artiﬁcial Intelligence, 168(1-2):70–118, 2005. <a href="pdfxml.html#25">21, </a><a href="pdfxml.html#33">29</a></text>
<text top="915" left="143" width="632" height="16" font="1">[10] W.J. Brown. AntiPatterns: refactoring software, architectures, and projects in</text>
<text top="937" left="179" width="261" height="16" font="1">crisis, volume 20. Wiley, 1998. <a href="pdfxml.html#32">28</a></text>
<text top="973" left="143" width="270" height="16" font="1">[11] C. Brun and A. Pierantonio.</text>
<text top="973" left="432" width="343" height="16" font="1">Model diﬀerences in the Eclipse modelling</text>
<text top="995" left="179" width="85" height="16" font="1">framework.</text>
<text top="995" left="281" width="494" height="16" font="1">The European Journal for the Informatics Professional, pages</text>
<text top="1017" left="179" width="159" height="16" font="1">29–34, 2008. <a href="pdfxml.html#12">8, </a><a href="pdfxml.html#13">9, </a><a href="pdfxml.html#17">13</a></text>
<text top="1112" left="450" width="18" height="16" font="1">32</text>
</page>
<page number="37" position="absolute" top="0" left="0" height="1188" width="918">
<text top="170" left="143" width="632" height="16" font="1">[12] S.S. Chawathe, A. Rajaraman, H. Garcia-Molina, and J. Widom. Change</text>
<text top="192" left="179" width="596" height="16" font="1">detection in hierarchically structured information. In Proceedings of the 1996</text>
<text top="214" left="179" width="596" height="16" font="1">ACM SIGMOD International Conference on Management of Data, pages 493–</text>
<text top="235" left="179" width="155" height="16" font="1">504. ACM, 1996. <a href="pdfxml.html#26">22</a></text>
<text top="272" left="143" width="632" height="16" font="1">[13] J. Chen and H. Cui. Translation from adapted UML to promela for corba-based</text>
<text top="294" left="179" width="492" height="16" font="1">applications. Model Checking Software, pages 234–251, 2004. <a href="pdfxml.html#33">29</a></text>
<text top="330" left="143" width="632" height="16" font="1">[14] P. Chen, M. Critchlow, A. Garg, C. Van der Westhuizen, and A. van der</text>
<text top="352" left="179" width="44" height="16" font="1">Hoek.</text>
<text top="352" left="262" width="92" height="16" font="1">Diﬀerencing</text>
<text top="352" left="370" width="28" height="16" font="1">and</text>
<text top="352" left="415" width="61" height="16" font="1">merging</text>
<text top="352" left="493" width="49" height="16" font="1">within</text>
<text top="352" left="557" width="19" height="16" font="1">an</text>
<text top="352" left="592" width="63" height="16" font="1">evolving</text>
<text top="352" left="671" width="60" height="16" font="1">product</text>
<text top="352" left="748" width="27" height="16" font="1">line</text>
<text top="374" left="179" width="96" height="16" font="1">architecture.</text>
<text top="374" left="291" width="483" height="16" font="1">Proceedings of the Fifth International Workshop on Product-</text>
<text top="395" left="179" width="345" height="16" font="1">Family Engineering, pages 269–281, 2004. <a href="pdfxml.html#27">23</a></text>
<text top="432" left="143" width="632" height="16" font="1">[15] A. Cicchetti, D. Di Ruscio, and A. Pierantonio. A metamodel independent</text>
<text top="453" left="179" width="556" height="16" font="1">approach to diﬀerence representation. Technology, 6(9):165–185, 2007. <a href="pdfxml.html#13">9</a></text>
<text top="490" left="143" width="632" height="16" font="1">[16] A. Cicchetti, D. Di Ruscio, and A. Pierantonio. Managing model conﬂicts in</text>
<text top="512" left="179" width="596" height="16" font="1">distributed development. In 11th International Conference on MoDELS 2008,</text>
<text top="533" left="179" width="418" height="16" font="1">pages 311–325. Springer-Verlag New York Inc, 2008. <a href="pdfxml.html#13">9</a></text>
<text top="570" left="143" width="187" height="16" font="1">[17] M. Clavel, F. Dur´</text>
<text top="570" left="321" width="453" height="16" font="1">an, S. Eker, P. Lincoln, N. Mart´ı-Oliet, J. Meseguer, and</text>
<text top="592" left="179" width="110" height="16" font="1">J.F. Quesada.</text>
<text top="592" left="307" width="467" height="16" font="1">Maude: speciﬁcation and programming in rewriting logic.</text>
<text top="613" left="179" width="431" height="16" font="1">Theoretical Computer Science, 285(2):187–243, 2002. <a href="pdfxml.html#18">14</a></text>
<text top="650" left="143" width="388" height="16" font="1">[18] G. Cobena, S. Abiteboul, and A. Marian.</text>
<text top="650" left="554" width="221" height="16" font="1">Detecting changes in XML</text>
<text top="672" left="179" width="596" height="16" font="1">documents. In International Conference on Data Engineering, pages 41–52,</text>
<text top="693" left="179" width="65" height="16" font="1">2002. <a href="pdfxml.html#33">29</a></text>
<text top="730" left="143" width="632" height="16" font="1">[19] C. d’Amato, S. Staab, and N. Fanizzi. On the inﬂuence of description logics</text>
<text top="752" left="179" width="279" height="16" font="1">ontologies on conceptual similarity.</text>
<text top="752" left="475" width="300" height="16" font="1">Knowledge Engineering: Practice and</text>
<text top="773" left="179" width="244" height="16" font="1">Patterns, pages 48–63, 2008. <a href="pdfxml.html#27">23</a></text>
<text top="810" left="143" width="632" height="16" font="1">[20] F. Deissenboeck, B. Hummel, E. Juergens, M. Pfaehler, and B. Schaetz. Model</text>
<text top="832" left="179" width="596" height="16" font="1">clone detection in practice. In Proceedings of the 4th International Workshop</text>
<text top="853" left="179" width="426" height="16" font="1">on Software Clones, pages 57–64. ACM, 2010. <a href="pdfxml.html#10">6, </a><a href="pdfxml.html#23">19, </a><a href="pdfxml.html#31">27</a></text>
<text top="890" left="143" width="632" height="16" font="1">[21] F. Deissenboeck, B. Hummel, E. Jurgens, B. Schatz, S. Wagner, J.F. Girard,</text>
<text top="911" left="179" width="596" height="16" font="1">and S. Teuchert. Clone detection in automotive model-based development.</text>
<text top="933" left="179" width="596" height="16" font="1">In ACM/IEEE 30th International Conference on Software Engineering, pages</text>
<text top="955" left="179" width="210" height="16" font="1">603–612. IEEE, 2009. <a href="pdfxml.html#10">6, </a><a href="pdfxml.html#22">18</a></text>
<text top="991" left="143" width="445" height="16" font="1">[22] R. Dijkman, M. Dumas, B. Van Dongen, R. K¨</text>
<text top="991" left="579" width="18" height="16" font="1">a¨</text>
<text top="991" left="588" width="187" height="16" font="1">arik, and J. Mendling.</text>
<text top="1013" left="179" width="596" height="16" font="1">Similarity of business process models: Metrics and evaluation. Information</text>
<text top="1035" left="179" width="254" height="16" font="1">Systems, 36(2):498–516, 2011. <a href="pdfxml.html#28">24</a></text>
<text top="1112" left="450" width="18" height="16" font="1">33</text>
</page>
<page number="38" position="absolute" top="0" left="0" height="1188" width="918">
<text top="170" left="143" width="632" height="16" font="1">[23] T. Elrad, O. Aldawud, and A. Bader. Aspect-oriented modeling: Bridging</text>
<text top="192" left="179" width="596" height="16" font="1">the gap between implementation and design. In Generative Programming and</text>
<text top="214" left="179" width="475" height="16" font="1">Component Engineering, pages 189–201. Springer, 2002. <a href="pdfxml.html#7">3, </a><a href="pdfxml.html#25">21</a></text>
<text top="250" left="143" width="632" height="16" font="1">[24] P. Farail, P. Gauﬁllet, A. Canals, C. Le Camus, D. Sciamma, P. Michel,</text>
<text top="272" left="179" width="54" height="16" font="1">X. Cr´</text>
<text top="272" left="224" width="550" height="16" font="1">egut, and M. Pantel. The topcased project: a toolkit in open source</text>
<text top="294" left="179" width="596" height="16" font="1">for critical aeronautic systems design. Embedded Real Time Software (ERTS),</text>
<text top="315" left="179" width="234" height="16" font="1">pages 1–8, electronic, 2006. <a href="pdfxml.html#18">14</a></text>
<text top="352" left="143" width="632" height="16" font="1">[25] S. Fortsch and B. Westfechtel. Diﬀerencing and merging of software diagrams</text>
<text top="374" left="179" width="596" height="16" font="1">state of the art and challenges. Second International Conference on Software</text>
<text top="395" left="179" width="362" height="16" font="1">and Data Technologies, pages 1–66, 2007. <a href="pdfxml.html#12">8, </a><a href="pdfxml.html#34">30</a></text>
<text top="432" left="143" width="632" height="16" font="1">[26] R. France, I. Ray, G. Georg, and S. Ghosh. Aspect-oriented approach to early</text>
<text top="453" left="179" width="565" height="16" font="1">design modeling. IEEE Proceedings-Software, 151(4):173–185, 2004. <a href="pdfxml.html#7">3, </a><a href="pdfxml.html#25">21</a></text>
<text top="490" left="143" width="632" height="16" font="1">[27] R. France and B. Rumpe. Model-driven development of complex software: A</text>
<text top="512" left="179" width="596" height="16" font="1">research roadmap. In 2007 Future of Software Engineering, pages 37–54. IEEE</text>
<text top="533" left="179" width="204" height="16" font="1">Computer Society, 2007. <a href="pdfxml.html#7">3</a></text>
<text top="570" left="143" width="507" height="16" font="1">[28] R.B. France, S. Ghosh, T. Dinh-Trong, and A. Solberg.</text>
<text top="570" left="673" width="101" height="16" font="1">Model-driven</text>
<text top="592" left="179" width="596" height="16" font="1">development using uml 2.0: promises and pitfalls. Computer, 39(2):59–66,</text>
<text top="613" left="179" width="57" height="16" font="1">2006. <a href="pdfxml.html#7">3</a></text>
<text top="650" left="143" width="632" height="16" font="1">[29] E. Gamma, R. Helm, R. Johnson, and J. Vlissides. Design patterns: elements</text>
<text top="672" left="179" width="596" height="16" font="1">of reusable object-oriented software, volume 206. Addison-wesley Reading, MA,</text>
<text top="693" left="179" width="65" height="16" font="1">1995. <a href="pdfxml.html#32">28</a></text>
<text top="730" left="143" width="632" height="16" font="1">[30] M.R. Garey and D.S. Johnson. Computers and intractability, volume 174.</text>
<text top="752" left="179" width="281" height="16" font="1">Freeman San Francisco, CA, 1979. <a href="pdfxml.html#10">6</a></text>
<text top="788" left="143" width="632" height="16" font="1">[31] R. Gheyi, T. Massoni, and P. Borba. An abstract equivalence notion for object</text>
<text top="810" left="179" width="596" height="16" font="1">models. Electronic Notes in Theoretical Computer Science, 130:3–21, 2005. <a href="pdfxml.html#20">16,</a></text>
<text top="832" left="179" width="18" height="16" font="1"><a href="pdfxml.html#33">29</a></text>
<text top="868" left="143" width="632" height="16" font="1">[32] M. Girschick. Diﬀerence detection and visualization in UML class diagrams.</text>
<text top="890" left="179" width="596" height="16" font="1">Technical University of Darmstadt Technical Report TUD-CS-2006-5, pages</text>
<text top="911" left="179" width="131" height="16" font="1">1–15, 2006. <a href="pdfxml.html#13">9, </a><a href="pdfxml.html#25">21</a></text>
<text top="948" left="143" width="632" height="16" font="1">[33] J. Gray, J.P. Tolvanen, S. Kelly, A. Gokhale, S. Neema, and J. Sprinkle.</text>
<text top="970" left="179" width="596" height="16" font="1">Domain-speciﬁc modeling. Handbook of Dynamic System Modeling, pages 1–</text>
<text top="991" left="179" width="178" height="16" font="1">221, electronic, 2007. <a href="pdfxml.html#7">3</a></text>
<text top="1028" left="143" width="632" height="16" font="1">[34] B. Hailpern and P. Tarr. Model-driven development: the good, the bad, and</text>
<text top="1050" left="179" width="425" height="16" font="1">the ugly. IBM Systems Journal, 45(3):451–461, 2006. <a href="pdfxml.html#7">3</a></text>
<text top="1112" left="450" width="18" height="16" font="1">34</text>
</page>
<page number="39" position="absolute" top="0" left="0" height="1188" width="918">
<text top="170" left="143" width="632" height="16" font="1">[35] T. Kehrer, U. Kelter, and G. Taentzer. A rule-based approach to the semantic</text>
<text top="192" left="179" width="596" height="16" font="1">lifting of model diﬀerences in the context of model versioning. In ASE, pages</text>
<text top="214" left="179" width="129" height="16" font="1">163–172, 2011. <a href="pdfxml.html#12">8</a></text>
<text top="250" left="143" width="632" height="16" font="1">[36] U. Kelter, J. Wehren, and J. Niere. A generic diﬀerence algorithm for UML</text>
<text top="272" left="179" width="495" height="16" font="1">models. Software Engineering, 64:105–116, 2005. <a href="pdfxml.html#8">4, </a><a href="pdfxml.html#13">9, </a><a href="pdfxml.html#20">16, </a><a href="pdfxml.html#26">22, </a><a href="pdfxml.html#27">23</a></text>
<text top="309" left="143" width="632" height="16" font="1">[37] D. Kolovos. Establishing correspondences between models with the epsilon</text>
<text top="330" left="179" width="173" height="16" font="1">comparison language.</text>
<text top="330" left="385" width="390" height="16" font="1">In Model Driven Architecture-Foundations and</text>
<text top="352" left="179" width="394" height="16" font="1">Applications, pages 146–157. Springer, 2009. <a href="pdfxml.html#19">15, </a><a href="pdfxml.html#20">16</a></text>
<text top="388" left="143" width="632" height="16" font="1">[38] D.S. Kolovos, D. Di Ruscio, A. Pierantonio, and R.F. Paige. Diﬀerent models</text>
<text top="410" left="179" width="596" height="16" font="1">for model matching: An analysis of approaches to support model diﬀerencing.</text>
<text top="432" left="179" width="596" height="16" font="1">In ICSE Workshop on Comparison and Versioning of Software Models, pages</text>
<text top="453" left="179" width="147" height="16" font="1">1–6. IEEE, 2009. <a href="pdfxml.html#13">9</a></text>
<text top="490" left="143" width="632" height="16" font="1">[39] D.S. Kolovos, R.F. Paige, and F.A.C. Polack. Model comparison: a foundation</text>
<text top="512" left="179" width="596" height="16" font="1">for model composition and model transformation testing. In Proceedings of the</text>
<text top="533" left="179" width="596" height="16" font="1">International Workshop on Global Integrated Model Management, pages 13–20.</text>
<text top="555" left="179" width="176" height="16" font="1">ACM, 2006. <a href="pdfxml.html#1">1, </a><a href="pdfxml.html#10">6, </a><a href="pdfxml.html#11">7, </a><a href="pdfxml.html#33">29</a></text>
<text top="592" left="143" width="632" height="16" font="1">[40] P. Konemann. Model-independent diﬀerences. In Proceedings of the ICSE</text>
<text top="613" left="179" width="596" height="16" font="1">Workshop on Comparison and Versioning of Software Models, pages 37–42.</text>
<text top="635" left="179" width="252" height="16" font="1">IEEE Computer Society, 2009. <a href="pdfxml.html#12">8</a></text>
<text top="672" left="143" width="632" height="16" font="1">[41] P. Konemann. Semantic grouping of model changes. In Proceedings of the 1st</text>
<text top="693" left="179" width="596" height="16" font="1">International Workshop on Model Comparison in Practice, pages 50–55. ACM,</text>
<text top="715" left="179" width="57" height="16" font="1">2010. <a href="pdfxml.html#12">8</a></text>
<text top="752" left="143" width="632" height="16" font="1">[42] R. Koschke. Survey of research on software clones. Duplication, Redundancy,</text>
<text top="773" left="179" width="442" height="16" font="1">and Similarity in Software, pages 1–24,electronic, 2006. <a href="pdfxml.html#9">5</a></text>
<text top="810" left="143" width="632" height="16" font="1">[43] J. Krinke. Identifying similar code with program dependence graphs. In Eighth</text>
<text top="832" left="179" width="593" height="16" font="1">Working Conference on Reverse Engineering, pages 301–309. IEEE, 2002. <a href="pdfxml.html#34">30</a></text>
<text top="868" left="143" width="632" height="16" font="1">[44] D. Latella, I. Majzik, and M. Massink. Automatic veriﬁcation of a behavioural</text>
<text top="890" left="179" width="596" height="16" font="1">subset of UML statechart diagrams using the SPIN model-checker. Formal</text>
<text top="911" left="179" width="360" height="16" font="1">Aspects of Computing, 11(6):637–664, 1999. <a href="pdfxml.html#33">29</a></text>
<text top="948" left="143" width="632" height="16" font="1">[45] K. Letkeman. Comparing and merging UML models in IBM Rational Software</text>
<text top="970" left="179" width="551" height="16" font="1">Architect. IBM Rational - Technical Report (Online), July 2005. <a href="pdfxml.html#16">12, </a><a href="pdfxml.html#17">13</a></text>
<text top="1006" left="143" width="632" height="16" font="1">[46] K. Letkeman. Comparing and merging UML models in IBM Rational Soft-</text>
<text top="1028" left="179" width="596" height="16" font="1">ware Architect: Part 7, <a href="http://www.ibm.com/developerworks/rational/library/07/0410_letkeman/">http://www.ibm.com/developerworks/rational/</a></text>
<text top="1051" left="179" width="309" height="15" font="1"><a href="http://www.ibm.com/developerworks/rational/library/07/0410_letkeman/">library/07/0410_letkeman/. </a>2007. <a href="pdfxml.html#16">12</a></text>
<text top="1112" left="450" width="18" height="16" font="1">35</text>
</page>
<page number="40" position="absolute" top="0" left="0" height="1188" width="918">
<text top="170" left="143" width="632" height="16" font="1">[47] J. Lilius and I. Paltor. Formalising UML state machines for model checking.</text>
<text top="192" left="179" width="439" height="16" font="1">The Uniﬁed Modeling Language, pages 430–444, 1999. <a href="pdfxml.html#33">29</a></text>
<text top="229" left="143" width="632" height="16" font="1">[48] Y. Lin, J. Gray, and F. Jouault. DSMDiﬀ: a diﬀerentiation tool for domain-</text>
<text top="250" left="179" width="122" height="16" font="1">speciﬁc models.</text>
<text top="250" left="318" width="457" height="16" font="1">European Journal of Information Systems, 16(4):349–361,</text>
<text top="272" left="179" width="85" height="16" font="1">2007. <a href="pdfxml.html#13">9, </a><a href="pdfxml.html#19">15</a></text>
<text top="309" left="143" width="306" height="16" font="1">[49] Y. Lin, J. Zhang, and J. Gray.</text>
<text top="309" left="473" width="151" height="16" font="1">Model comparison:</text>
<text top="309" left="643" width="132" height="16" font="1">A key challenge</text>
<text top="330" left="179" width="596" height="16" font="1">for transformation testing and version control in model driven software</text>
<text top="352" left="179" width="101" height="16" font="1">development.</text>
<text top="352" left="298" width="477" height="16" font="1">In OOPSLA Workshop on Best Practices for Model-Driven</text>
<text top="374" left="179" width="486" height="16" font="1">Software Development, volume 108, pages 6, electronic, 2004. <a href="pdfxml.html#10">6</a></text>
<text top="410" left="143" width="632" height="16" font="1">[50] H. Liu, Z. Ma, L. Zhang, and W. Shao. Detecting duplications in sequence</text>
<text top="432" left="179" width="596" height="16" font="1">diagrams based on suﬃx trees. In 13th Asia Paciﬁc Software Engineering</text>
<text top="453" left="179" width="362" height="16" font="1">Conference, pages 269–276. IEEE, 2007. <a href="pdfxml.html#23">19, </a><a href="pdfxml.html#24">20</a></text>
<text top="490" left="143" width="632" height="16" font="1">[51] S. Maoz, J. Ringert, and B. Rumpe. Cd2alloy: Class diagrams analysis using</text>
<text top="512" left="179" width="596" height="16" font="1">alloy revisited. Model Driven Engineering Languages and Systems, pages 592–</text>
<text top="533" left="179" width="102" height="16" font="1">607, 2011. <a href="pdfxml.html#26">22</a></text>
<text top="570" left="143" width="346" height="16" font="1">[52] S. Maoz, J. Ringert, and B. Rumpe.</text>
<text top="570" left="511" width="264" height="16" font="1">A manifesto for semantic model</text>
<text top="592" left="179" width="596" height="16" font="1">diﬀerencing. In Proceedings of the 2010 International Conference on Models</text>
<text top="613" left="179" width="489" height="16" font="1">in Software Engineering, MODELS’10, pages 194–203, 2011. <a href="pdfxml.html#21">17</a></text>
<text top="650" left="143" width="346" height="16" font="1">[53] A. Mehra, J. Grundy, and J. Hosking.</text>
<text top="650" left="506" width="269" height="16" font="1">A generic approach to supporting</text>
<text top="672" left="179" width="466" height="16" font="1">diagram diﬀerencing and merging for collaborative design.</text>
<text top="672" left="662" width="112" height="16" font="1">In Proceedings</text>
<text top="693" left="179" width="596" height="16" font="1">of the 20th IEEE/ACM International Conference on Automated Software</text>
<text top="715" left="179" width="339" height="16" font="1">Engineering, pages 204–213. ACM, 2005. <a href="pdfxml.html#20">16</a></text>
<text top="752" left="143" width="632" height="16" font="1">[54] S. Melnik, H. Garcia-Molina, and E. Rahm. Similarity ﬂooding: A versatile</text>
<text top="773" left="179" width="596" height="16" font="1">graph matching algorithm and its application to schema matching. In 18th</text>
<text top="795" left="179" width="553" height="16" font="1">International Conference on Data Engineering, pages 117–128, 2002. <a href="pdfxml.html#34">30</a></text>
<text top="832" left="143" width="632" height="16" font="1">[55] T. Mens. A state-of-the-art survey on software merging. IEEE Transactions</text>
<text top="853" left="179" width="372" height="16" font="1">on Software Engineering, 28(5):449–462, 2002. <a href="pdfxml.html#13">9</a></text>
<text top="890" left="143" width="632" height="16" font="1">[56] S. Nejati, M. Sabetzadeh, M. Chechik, S. Easterbrook, and P. Zave.</text>
<text top="911" left="179" width="596" height="16" font="1">Matching and merging of statecharts speciﬁcations. In 29th Proceedings of</text>
<text top="933" left="179" width="596" height="16" font="1">the International Conference on Software Engineering, pages 54–64. IEEE</text>
<text top="955" left="179" width="241" height="16" font="1">Computer Society, 2007. <a href="pdfxml.html#23">19, </a><a href="pdfxml.html#31">27</a></text>
<text top="991" left="143" width="632" height="16" font="1">[57] C. Nentwich, W. Emmerich, A. Finkelstein, and E. Ellmer. Flexible consistency</text>
<text top="1013" left="179" width="70" height="16" font="1">checking.</text>
<text top="1013" left="273" width="502" height="16" font="1">ACM Transactions on Software Engineering and Methodology</text>
<text top="1035" left="179" width="253" height="16" font="1">(TOSEM), 12(1):28–63, 2003. <a href="pdfxml.html#33">29</a></text>
<text top="1112" left="450" width="18" height="16" font="1">36</text>
</page>
<page number="41" position="absolute" top="0" left="0" height="1188" width="918">
<text top="170" left="143" width="144" height="16" font="1">[58] T.N. Nguyen.</text>
<text top="170" left="304" width="471" height="16" font="1">A novel structure-oriented diﬀerence approach for software</text>
<text top="192" left="179" width="596" height="16" font="1">artifacts. In 30th Annual International on Computer Software and Applications</text>
<text top="214" left="179" width="414" height="16" font="1">Conference, volume 1, pages 197–204. IEEE, 2006. <a href="pdfxml.html#20">16</a></text>
<text top="250" left="143" width="632" height="16" font="1">[59] T. Oda and M. Saeki. Generative technique of version control systems for</text>
<text top="272" left="179" width="596" height="16" font="1">software diagrams. In Proceedings of the 21st IEEE International Conference</text>
<text top="294" left="179" width="443" height="16" font="1">on Software Maintenance, pages 515–524. IEEE, 2005. <a href="pdfxml.html#20">16</a></text>
<text top="330" left="143" width="319" height="16" font="1">[60] D. Ohst, M. Welle, and U. Kelter.</text>
<text top="330" left="479" width="296" height="16" font="1">Diﬀerences between versions of UML</text>
<text top="352" left="179" width="596" height="16" font="1">diagrams. ACM SIGSOFT Software Engineering Notes, 28(5):227–236, 2003.</text>
<text top="374" left="179" width="37" height="16" font="1"><a href="pdfxml.html#13">9, </a><a href="pdfxml.html#16">12</a></text>
<text top="410" left="143" width="632" height="16" font="1">[61] H. Oliveira, L. Murta, and C. Werner. Odyssey-vcs: a ﬂexible version control</text>
<text top="432" left="179" width="596" height="16" font="1">system for UML model elements. In Proceedings of the 12th international</text>
<text top="453" left="179" width="596" height="16" font="1">workshop on Software Conﬁguration Management, pages 1–16. ACM, 2005. <a href="pdfxml.html#17">13</a></text>
<text top="490" left="143" width="632" height="16" font="1">[62] R. Parekh and V. Honavar. Grammar inference, automata induction, and</text>
<text top="512" left="179" width="596" height="16" font="1">language acquisition. In Handbook of Natural Language Processing, pages 1–</text>
<text top="533" left="179" width="94" height="16" font="1">60, 1998. <a href="pdfxml.html#32">28</a></text>
<text top="570" left="143" width="632" height="16" font="1">[63] N.H. Pham, H.A. Nguyen, T.T. Nguyen, J.M. Al-Kofahi, and T.N. Nguyen.</text>
<text top="592" left="179" width="596" height="16" font="1">Complete and accurate clone detection in graph-based models. In Proceedings</text>
<text top="613" left="179" width="596" height="16" font="1">of the 31st International Conference on Software Engineering, pages 276–286.</text>
<text top="635" left="179" width="280" height="16" font="1">IEEE Computer Society, 2009. <a href="pdfxml.html#10">6, </a><a href="pdfxml.html#22">18</a></text>
<text top="672" left="143" width="632" height="16" font="1">[64] Raghu Reddy, Robert France, Sudipto Ghosh, Franck Fleurey, and Benoit</text>
<text top="693" left="179" width="532" height="16" font="1">Baudry. Model Composition - A Signature-Based Approach. 2005. <a href="pdfxml.html#25">21</a></text>
<text top="730" left="143" width="632" height="16" font="1">[65] T. Reiter, K. Altmanninger, A. Bergmayr, W. Schwinger, and G. Kotsis.</text>
<text top="752" left="179" width="596" height="16" font="1">Models in conﬂict-detection of semantic conﬂicts in model-based development.</text>
<text top="773" left="179" width="596" height="16" font="1">In Proceedings of 3rd International Workshop on Model-Driven Enterprise</text>
<text top="795" left="179" width="338" height="16" font="1">Information Systems, pages 29–40, 2007. <a href="pdfxml.html#18">14</a></text>
<text top="832" left="143" width="632" height="16" font="1">[66] S. Ren, K. Rui, and G. Butler. Refactoring the scenario speciﬁcation: A</text>
<text top="853" left="179" width="596" height="16" font="1">message sequence chart approach. Object-Oriented Information Systems, pages</text>
<text top="875" left="179" width="138" height="16" font="1">294–298, 2003. <a href="pdfxml.html#23">19</a></text>
<text top="911" left="143" width="632" height="16" font="1">[67] J. Rho and C. Wu. An eﬃcient version model of software diagrams. In Asia</text>
<text top="933" left="179" width="508" height="16" font="1">Paciﬁc Software Engineering Conference, pages 236–243, 1998. <a href="pdfxml.html#24">20</a></text>
<text top="970" left="143" width="282" height="16" font="1">[68] J.E. Rivera and A. Vallecillo.</text>
<text top="970" left="449" width="326" height="16" font="1">Representing and operating with model</text>
<text top="991" left="179" width="596" height="16" font="1">diﬀerences. Objects, Components, Models and Patterns, pages 141–160, 2008.</text>
<text top="1013" left="179" width="65" height="16" font="1"><a href="pdfxml.html#13">9, </a><a href="pdfxml.html#18">14, </a><a href="pdfxml.html#19">15</a></text>
<text top="1112" left="450" width="18" height="16" font="1">37</text>
</page>
<page number="42" position="absolute" top="0" left="0" height="1188" width="918">
<text top="170" left="143" width="632" height="16" font="1">[69] C.K. Roy, J.R. Cordy, and R. Koschke. Comparison and evaluation of code</text>
<text top="192" left="179" width="498" height="16" font="1">clone detection techniques and tools: A qualitative approach.</text>
<text top="192" left="695" width="80" height="16" font="1">Science of</text>
<text top="214" left="179" width="396" height="16" font="1">Computer Programming, 74(7):470–495, 2009. <a href="pdfxml.html#9">5, </a><a href="pdfxml.html#33">29</a></text>
<text top="250" left="143" width="449" height="16" font="1">[70] A. Schipper, H. Fuhrmann, and R. von Hanxleden.</text>
<text top="250" left="608" width="167" height="16" font="1">Visual comparison of</text>
<text top="272" left="179" width="596" height="16" font="1">graphical models. In 14th IEEE International Conference on Engineering of</text>
<text top="294" left="179" width="455" height="16" font="1">Complex Computer Systems, pages 335–340. IEEE, 2009. <a href="pdfxml.html#13">9</a></text>
<text top="330" left="143" width="72" height="16" font="1">[71] D.C.</text>
<text top="330" left="231" width="68" height="16" font="1">Schmidt,</text>
<text top="330" left="318" width="21" height="16" font="1">M.</text>
<text top="330" left="355" width="50" height="16" font="1">Fayad,</text>
<text top="330" left="424" width="28" height="16" font="1">and</text>
<text top="330" left="468" width="35" height="16" font="1">R.E.</text>
<text top="330" left="519" width="68" height="16" font="1">Johnson.</text>
<text top="330" left="625" width="66" height="16" font="1">Software</text>
<text top="330" left="706" width="68" height="16" font="1">patterns.</text>
<text top="352" left="179" width="409" height="16" font="1">Communications of the ACM, 39(10):37–39, 1996. <a href="pdfxml.html#32">28</a></text>
<text top="388" left="143" width="632" height="16" font="1">[72] M. Schmidt and T. Gloetzner. Constructing diﬀerence tools for models using</text>
<text top="410" left="179" width="596" height="16" font="1">the SiDiﬀ framework. In Companion of the 30th International Conference on</text>
<text top="432" left="179" width="411" height="16" font="1">Software Engineering, pages 947–948. ACM, 2008. <a href="pdfxml.html#26">22</a></text>
<text top="468" left="143" width="305" height="16" font="1">[73] M. Sebastiani and P. Supiratana.</text>
<text top="468" left="466" width="309" height="16" font="1">Tracing the diﬀerences on an evolving</text>
<text top="490" left="179" width="596" height="16" font="1">software model, <a href="http://www.idt.mdh.se/kurser/ct3340/archives/ht08/papersRM08/28.pdf">http://www.idt.mdh.se/kurser/ct3340/archives/ht08/</a></text>
<text top="513" left="179" width="274" height="15" font="1"><a href="http://www.idt.mdh.se/kurser/ct3340/archives/ht08/papersRM08/28.pdf">papersRM08/28.pdf. </a>pages 1–6. <a href="pdfxml.html#34">30</a></text>
<text top="548" left="143" width="632" height="16" font="1">[74] B. Selic. The pragmatics of model-driven development. IEEE Software Journal,</text>
<text top="570" left="179" width="156" height="16" font="1">20(5):19–25, 2003. <a href="pdfxml.html#7">3</a></text>
<text top="607" left="143" width="632" height="16" font="1">[75] P. Selonen. A Review of UML Model Comparison Approaches. In 5th Nordic</text>
<text top="628" left="179" width="487" height="16" font="1">Workshop on Model Driven Engineering, pages 37–51, 2007. <a href="pdfxml.html#34">30</a></text>
<text top="665" left="143" width="277" height="16" font="1">[76] P. Selonen and M. Kettunen.</text>
<text top="665" left="440" width="335" height="16" font="1">Metamodel-based inference of inter-model</text>
<text top="687" left="179" width="596" height="16" font="1">correspondence. In 11th Proceedings of the European Conference on Software</text>
<text top="708" left="179" width="596" height="16" font="1">Maintenance and Reengineering, pages 71–80. IEEE Computer Society, 2007.</text>
<text top="730" left="179" width="37" height="16" font="1"><a href="pdfxml.html#13">9, </a><a href="pdfxml.html#16">12</a></text>
<text top="767" left="143" width="632" height="16" font="1">[77] S. Sendall and W. Kozaczynski. Model transformation: The heart and soul of</text>
<text top="788" left="179" width="570" height="16" font="1">model-driven software development. Software, IEEE, 20(5):42–45, 2003. <a href="pdfxml.html#7">3</a></text>
<text top="825" left="143" width="109" height="16" font="1">[78] M. Soto.</text>
<text top="825" left="279" width="62" height="16" font="1">Delta-p:</text>
<text top="825" left="362" width="413" height="16" font="1">Model comparison using semantic web standards.</text>
<text top="846" left="179" width="321" height="16" font="1">Softwaretechnik-Trends, 2:27–31, 2007. <a href="pdfxml.html#28">24</a></text>
<text top="883" left="143" width="632" height="16" font="1">[79] M. Soto and J. Munch. Process model diﬀerence analysis for supporting process</text>
<text top="905" left="179" width="513" height="16" font="1">evolution. Software Process Improvement, pages 123–134, 2006. <a href="pdfxml.html#28">24</a></text>
<text top="941" left="143" width="632" height="16" font="1">[80] M. Stephan. Detection of java ee ejb antipattern instances using framework-</text>
<text top="963" left="179" width="502" height="16" font="1">speciﬁc models. Master’s thesis, University of Waterloo, 2009. <a href="pdfxml.html#32">28</a></text>
<text top="1000" left="143" width="123" height="16" font="1">[81] P. Stevens.</text>
<text top="1000" left="283" width="492" height="16" font="1">A simple game-theoretic approach to checkonly qvt relations.</text>
<text top="1021" left="179" width="556" height="16" font="1">Theory and Practice of Model Transformations, pages 165–180, 2009. <a href="pdfxml.html#21">17</a></text>
<text top="1112" left="450" width="18" height="16" font="1">38</text>
</page>
<page number="43" position="absolute" top="0" left="0" height="1188" width="918">
<text top="170" left="143" width="632" height="16" font="1">[82] C. Treude, S. Berlik, S. Wenzel, and U. Kelter. Diﬀerence computation of</text>
<text top="192" left="179" width="596" height="16" font="1">large models. In Proceedings of the 6th ACM SIGSOFT Symposium on the</text>
<text top="214" left="179" width="531" height="16" font="1">Foundations of Software Engineering, pages 295–304. ACM, 2007. <a href="pdfxml.html#26">22</a></text>
<text top="250" left="143" width="247" height="16" font="1">[83] M. van den Brand, Z. Proti´</text>
<text top="250" left="382" width="393" height="16" font="1">c, and T. Verhoeﬀ. Fine-grained metamodel-assisted</text>
<text top="272" left="179" width="596" height="16" font="1">model comparison. In Proceedings of the 1st International Workshop on Model</text>
<text top="294" left="179" width="432" height="16" font="1">Comparison in Practice, pages 11–20. ACM, 2010. <a href="pdfxml.html#13">9, </a><a href="pdfxml.html#20">16</a></text>
<text top="330" left="143" width="252" height="16" font="1">[84] M. van den Brand, Z. Proti´</text>
<text top="330" left="387" width="388" height="16" font="1">c, and T. Verhoeﬀ. Generic tool for visualization of</text>
<text top="352" left="179" width="596" height="16" font="1">model diﬀerences. In Proceedings of the 1st International Workshop on Model</text>
<text top="374" left="179" width="403" height="16" font="1">Comparison in Practice, pages 66–75. ACM, 2010. <a href="pdfxml.html#13">9</a></text>
<text top="410" left="143" width="632" height="16" font="1">[85] S. Wenzel. Scalable visualization of model diﬀerences. In Proceedings of the</text>
<text top="432" left="179" width="596" height="16" font="1">International Workshop on Comparison and Versioning of Software Models,</text>
<text top="453" left="179" width="211" height="16" font="1">pages 41–46. ACM, 2008. <a href="pdfxml.html#13">9</a></text>
<text top="490" left="143" width="419" height="16" font="1">[86] S. Wenzel, J. Koch, U. Kelter, and A. Kolb.</text>
<text top="490" left="584" width="190" height="16" font="1">Evolution analysis with</text>
<text top="512" left="179" width="260" height="16" font="1">animated and 3D-visualizations.</text>
<text top="512" left="465" width="310" height="16" font="1">In IEEE International Conference on</text>
<text top="533" left="179" width="410" height="16" font="1">Software Maintenance, pages 475–478. IEEE, 2009. <a href="pdfxml.html#13">9</a></text>
<text top="570" left="143" width="632" height="16" font="1">[87] Z. Xing and E. Stroulia. UMLDiﬀ: an algorithm for object-oriented design</text>
<text top="592" left="179" width="596" height="16" font="1">diﬀerencing. In 20th Proceedings of the IEEE/ACM International Conference</text>
<text top="613" left="179" width="526" height="16" font="1">on Automated Software Engineering, pages 54–65. ACM, 2005. <a href="pdfxml.html#13">9, </a><a href="pdfxml.html#25">21</a></text>
<text top="1112" left="450" width="18" height="16" font="1">39</text>
</page>
</pdf2xml>
