<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE pdf2xml SYSTEM "pdf2xml.dtd">

<pdf2xml>
<page number="1" position="absolute" top="0" left="0" height="999" width="659">
	<fontspec id="0" size="18" family="Times" color="#131413"/>
	<fontspec id="1" size="21" family="Times" color="#131413"/>
	<fontspec id="2" size="12" family="Times" color="#131413"/>
	<fontspec id="3" size="12" family="Times" color="#131413"/>
	<fontspec id="4" size="10" family="Times" color="#131413"/>
	<fontspec id="5" size="9" family="Times" color="#131413"/>
	<fontspec id="6" size="10" family="Times" color="#0000ff"/>
	<fontspec id="7" size="10" family="Times" color="#131413"/>
<text top="93" left="81" width="90" height="19" font="0"><b>Chapter 1</b></text>
<text top="118" left="81" width="463" height="22" font="1"><b>Technologies, Collaborations and Languages:</b></text>
<text top="145" left="81" width="289" height="22" font="1"><b>20 Years of HEP Computing</b></text>
<text top="205" left="81" width="69" height="14" font="2"><b>Ren´e Brun</b></text>
<text top="348" left="81" width="498" height="14" font="3">Research in HEP cannot be done without computers. The statistical nature of the</text>
<text top="366" left="81" width="497" height="14" font="3">data analysis process, the sheer amount of data to be processed and the complexity of</text>
<text top="384" left="81" width="498" height="14" font="3">the algorithms involved, to be repeated several times over millions of single collision</text>
<text top="402" left="81" width="498" height="14" font="3">data require large amounts of computing power. However the sheer computing</text>
<text top="420" left="81" width="497" height="14" font="3">power is only one part of the story. The data treatment required to extract the</text>
<text top="438" left="81" width="498" height="14" font="3">physics results from the data is very speciﬁc to the discipline, as are data formats</text>
<text top="456" left="81" width="498" height="14" font="3">and algorithms. The consequence is that HEP physicists have to develop most of</text>
<text top="474" left="81" width="498" height="14" font="3">their code “in house”, and they can only very rarely rely on commercial products.</text>
<text top="492" left="81" width="497" height="14" font="3">This has led HEP to develop very large and complex software systems for data</text>
<text top="510" left="81" width="237" height="14" font="3">simulation, reconstruction and analysis.</text>
<text top="528" left="99" width="480" height="14" font="3">One additional complication comes from that fact that HEP experiments are one-</text>
<text top="546" left="81" width="498" height="14" font="3">off endeavours, and each one is different from the others, otherwise there would be</text>
<text top="564" left="81" width="498" height="14" font="3">little point in building and operating it. This hinders code reuse from one experiment</text>
<text top="582" left="81" width="498" height="14" font="3">to the other and also it imposes additional constraints on the framework. Another</text>
<text top="600" left="81" width="498" height="14" font="3">complication comes from the fact that HEP is a “computer resource hungry” activity,</text>
<text top="618" left="81" width="498" height="14" font="3">where science is actually limited by the amount of computing that can be bought</text>
<text top="636" left="81" width="498" height="14" font="3">by the available budget. So physicists must be able to move their code to any new</text>
<text top="654" left="81" width="497" height="14" font="3">hardware and Operating System (OS) that offers the best price-performance ratio</text>
<text top="672" left="81" width="149" height="14" font="3">appearing on the market.</text>
<text top="690" left="99" width="480" height="14" font="3">This chapter tells the history of the evolution of the programmes written by HEP</text>
<text top="708" left="81" width="299" height="14" font="3">physicists for their research over the last 20 years.</text>
<text top="858" left="81" width="48" height="12" font="4">R. Brun (</text>
<text top="858" left="141" width="4" height="12" font="4">)</text>
<text top="873" left="81" width="142" height="12" font="4">CERN Geneva, Switzerland</text>
<text top="888" left="81" width="36" height="12" font="4">e-mail:</text>
<text top="888" left="120" width="103" height="12" font="6"><a href="Rene.Brun@cern.ch">Rene.Brun@cern.ch</a></text>
<text top="924" left="81" width="433" height="12" font="4">R. Brun et al. (eds.), <i>From the Web to the Grid and Beyond</i>, The Frontiers Collection,</text>
<text top="938" left="81" width="406" height="12" font="4">DOI 10.1007/978-3-642-23157-5 1, © Springer-Verlag Berlin Heidelberg 2012</text>
<text top="924" left="572" width="6" height="12" font="4">1</text>
</page>
<page number="2" position="absolute" top="0" left="0" height="999" width="659">
	<fontspec id="8" size="16" family="Times" color="#131413"/>
	<fontspec id="9" size="12" family="Times" color="#0000ff"/>
	<fontspec id="10" size="12" family="Times" color="#131413"/>
	<fontspec id="11" size="8" family="Times" color="#131413"/>
<text top="55" left="81" width="6" height="12" font="4">2</text>
<text top="55" left="538" width="40" height="12" font="4">R. Brun</text>
<text top="93" left="81" width="23" height="16" font="8"><b>1.1</b></text>
<text top="93" left="120" width="98" height="16" font="8"><b>Introduction</b></text>
<text top="137" left="81" width="498" height="14" font="3">The major components of HEP computing are simulation, reconstruction and</text>
<text top="155" left="81" width="497" height="14" font="3">analysis. It is important to understand their relations and their respective role in</text>
<text top="173" left="81" width="498" height="14" font="3">HEP research in order to appreciate the constraints and the requirements that have</text>
<text top="191" left="81" width="135" height="14" font="3">guided their evolution.</text>
<text top="247" left="99" width="462" height="14" font="3">Simulation, the third way to scientiﬁc knowledge after theory and experiment.</text>
<text top="319" left="99" width="460" height="14" font="3">Modern HEP detectors are huge engineering endeavours. The ATLAS <a href="pdfxml.html#52">[</a></text>
<text top="319" left="558" width="15" height="14" font="9"><a href="pdfxml.html#52">28</a></text>
<text top="319" left="573" width="5" height="14" font="3">]</text>
<text top="337" left="81" width="498" height="14" font="3">detector at LHC is about 45 meters long, more than 25 meters high, and weights</text>
<text top="355" left="81" width="498" height="14" font="3">about 7,000 tons. Millions of detecting elements have to be positioned with micro-</text>
<text top="373" left="81" width="131" height="14" font="3">meter level accuracy (</text>
<text top="370" left="212" width="15" height="19" font="10">10</text>
<text top="368" left="235" width="5" height="14" font="11">5</text>
<text top="373" left="243" width="335" height="14" font="3">cm). Data is collected by millions of electronic channels</text>
<text top="391" left="81" width="497" height="14" font="3">that collectively consume electric power of the order of several tens of thousands of</text>
<text top="409" left="81" width="498" height="14" font="3">Watts. Temperature has to be rigorously controlled and several components require</text>
<text top="427" left="81" width="476" height="14" font="3">a constant gas ﬂow, superconducting temperatures, near absolute zero ( 272.9</text>
<text top="422" left="557" width="6" height="14" font="11">ı</text>
<text top="427" left="563" width="15" height="14" font="3">C)</text>
<text top="445" left="81" width="498" height="14" font="3">cooling, very high voltage and so on. But, most important of all, the detectors must</text>
<text top="463" left="81" width="497" height="14" font="3">respond to quite stringent “physics performance” criteria, i.e. they must be able</text>
<text top="481" left="81" width="498" height="14" font="3">to detect particle properties (position, speed, energy, charge) with the necessary</text>
<text top="499" left="81" width="498" height="14" font="3">precision to obtain the physics results for which they have been built. To verify</text>
<text top="517" left="81" width="497" height="14" font="3">that this is actually the case, before a detector is built, it is simulated on a</text>
<text top="535" left="81" width="498" height="14" font="3">computer, sometimes for many years. Simulation programmes are complex code</text>
<text top="553" left="81" width="498" height="14" font="3">systems that simulate the collisions between elementary particles at the foreseen</text>
<text top="571" left="81" width="497" height="14" font="3">experimental conditions, and then “transport” the particles generated during the</text>
<text top="589" left="81" width="498" height="14" font="3">reaction through the matter of the detector. The ﬁnest details of the interaction of</text>
<text top="607" left="81" width="497" height="14" font="3">nuclear radiation with the material of the detector is reproduced, with its intrinsic</text>
<text top="625" left="81" width="311" height="14" font="3">statistical ﬂuctuations via so-called Monte-Carlo <a href="pdfxml.html#53">[</a></text>
<text top="625" left="392" width="15" height="14" font="9"><a href="pdfxml.html#53">76</a></text>
<text top="625" left="407" width="172" height="14" font="3"><a href="pdfxml.html#53">] </a>methods. The response of</text>
<text top="643" left="81" width="497" height="14" font="3">the sensitive elements to the passage of the particles is reproduced, as well as</text>
<text top="661" left="81" width="497" height="14" font="3">the planned electronic treatment of the generated electric signals, and ﬁnally the</text>
<text top="679" left="81" width="498" height="14" font="3">coding of these signals in binary form to be stored in computer ﬁles. Millions of</text>
<text top="697" left="81" width="498" height="14" font="3">events are thus “simulated” to assess the design of the detector and to train the</text>
<text top="715" left="81" width="497" height="14" font="3">reconstruction and analysis programmes. Once the detector is built, simulation is</text>
<text top="733" left="81" width="498" height="14" font="3">still essential. The simulation is compared to the actual experimental results and</text>
<text top="751" left="81" width="498" height="14" font="3">“validated”, i.e. tuned to provide results similar to those actually found in reality.</text>
<text top="769" left="81" width="498" height="14" font="3">This allows to simulation to estimate the “corrections” to be applied to the observed</text>
<text top="787" left="81" width="498" height="14" font="3">rate with which a given conﬁguration is detected. By agreeing with what is seen, the</text>
<text top="805" left="81" width="498" height="14" font="3">simulation allows us to estimate how much is “lost” due to the detector geometry</text>
<text top="823" left="81" width="498" height="14" font="3">and efﬁciency. Simulation is mostly a “CPU bound” activity, where the input data</text>
<text top="841" left="81" width="498" height="14" font="3">are limited to small conﬁguration ﬁles and the output is similar to the output of the</text>
<text top="859" left="81" width="51" height="14" font="3">detector.</text>
</page>
<page number="3" position="absolute" top="0" left="0" height="999" width="659">
<text top="55" left="81" width="6" height="12" font="4">1</text>
<text top="55" left="99" width="381" height="12" font="4">Technologies, Collaborations and Languages: 20 Years of HEP Computing</text>
<text top="55" left="572" width="6" height="12" font="4">3</text>
<text top="113" left="99" width="294" height="14" font="3">Reconstruction, from electric signals to particles.</text>
<text top="167" left="99" width="480" height="14" font="3">The output of a detector is a set of electric signals generated by the passage</text>
<text top="185" left="81" width="498" height="14" font="3">of particles through matter. These are the so-called “raw data” or simply “raw”.</text>
<text top="203" left="81" width="497" height="14" font="3">The “reconstruction” process aims at processing these signals to determine the</text>
<text top="221" left="81" width="498" height="14" font="3">features of the particles generating them, i.e. their mass, charge, energy and</text>
<text top="239" left="81" width="498" height="14" font="3">direction. In some sense this process has some relations with image processing,</text>
<text top="257" left="81" width="497" height="14" font="3">in the sense that the signals are localised in space and time, and they are a sort of</text>
<text top="275" left="81" width="498" height="14" font="3">“pixels” that have to be recognised as part of a particle trajectory through space-</text>
<text top="293" left="81" width="497" height="14" font="3">time, or “track”. This process is also called “tracking” or track reconstruction. It is</text>
<text top="311" left="81" width="498" height="14" font="3">usually a very complex procedure where the information from different detectors</text>
<text top="329" left="81" width="497" height="14" font="3">is combined via sophisticated statistical methods. The results of this process are</text>
<text top="347" left="81" width="497" height="14" font="3">the tracks, i.e. a set of parameters identifying a trajectory in space together with</text>
<text top="365" left="81" width="498" height="14" font="3">their statistical uncertainties and correlations. A very important element in the</text>
<text top="383" left="81" width="498" height="14" font="3">reconstruction is the calibration and alignment of the detectors. Each sensitive</text>
<text top="401" left="81" width="498" height="14" font="3">detector element has a speciﬁc relation between the intensity of the emitted signal</text>
<text top="419" left="81" width="498" height="14" font="3">and the physics quantity that is at the origin of the signal (energy, time, velocity,</text>
<text top="437" left="81" width="498" height="14" font="3">charge). To obtain optimal precision, all detecting elements have to be “calibrated”</text>
<text top="455" left="81" width="498" height="14" font="3">in order to give the same response to the same input. Moreover the actual position</text>
<text top="473" left="81" width="498" height="14" font="3">of each detecting element can differ slightly from its ideal position. Both calibration</text>
<text top="491" left="81" width="498" height="14" font="3">and alignment of the detectors can be determined from the recorded signals, using</text>
<text top="509" left="81" width="498" height="14" font="3">recursive procedures which take into account the response to the passing particles.</text>
<text top="527" left="81" width="498" height="14" font="3">The output of reconstruction are the Event Summary Data (ESD) containing the</text>
<text top="545" left="81" width="497" height="14" font="3">description of the tracks. Usually raw data are reconstructed several times, as</text>
<text top="563" left="81" width="498" height="14" font="3">the knowledge and understanding of the detector, as well as the reconstruction</text>
<text top="581" left="81" width="498" height="14" font="3">algorithms, improve. Depending on the complexity of the algorithms deployed,</text>
<text top="599" left="81" width="498" height="14" font="3">reconstruction can be an “I/O bound” or a “CPU bound” activity, where the input</text>
<text top="617" left="81" width="270" height="14" font="3">are the raw data and the output the ESD ﬁles.</text>
<text top="669" left="99" width="253" height="14" font="3">Analysis, the ﬁnal step before publication.</text>
<text top="718" left="99" width="480" height="14" font="3">Once the tracks are identiﬁed, together with the degree of statistical uncertainty</text>
<text top="736" left="81" width="498" height="14" font="3">of the related information, analysis can start. This is the process by which the</text>
<text top="754" left="81" width="497" height="14" font="3">experimental results are compared with the theory to verify or falsify it. This is</text>
<text top="772" left="81" width="498" height="14" font="3">also when new phenomena, requiring novel theories, are discovered and described.</text>
<text top="790" left="81" width="498" height="14" font="3">During the analysis the ESD are read and they are used to produce mono- or multi-</text>
<text top="808" left="81" width="497" height="14" font="3">dimensional statistical distributions. The identiﬁcation of the interesting events is</text>
<text top="826" left="81" width="498" height="14" font="3">made via selections that are called “cuts” in the HEP jargon. Beyond the isolation</text>
<text top="844" left="81" width="498" height="14" font="3">of the interesting classes of events, the analysis activity aims at determining</text>
<text top="862" left="81" width="498" height="14" font="3">the frequency with which these events occur. This is a very delicate operation</text>
<text top="880" left="81" width="498" height="14" font="3">as the detector efﬁciency is never 100% and in particular is different for the</text>
</page>
<page number="4" position="absolute" top="0" left="0" height="999" width="659">
	<fontspec id="12" size="10" family="Times" color="#131413"/>
<text top="55" left="81" width="6" height="12" font="4">4</text>
<text top="55" left="538" width="40" height="12" font="4">R. Brun</text>
<text top="428" left="81" width="214" height="12" font="12"><b>Fig. 1.1 </b>Machines and operating systems</text>
<text top="466" left="81" width="498" height="14" font="3">different event classes. While simulation and reconstruction tend to be centrally</text>
<text top="484" left="81" width="498" height="14" font="3">organised activities, analysis is both a centrally organised activity and a personal</text>
<text top="502" left="81" width="498" height="14" font="3">one, performed by each physicist willing to test an hypothesis. Analysis is usually</text>
<text top="520" left="81" width="498" height="14" font="3">an I/O bound activity, where the input are the ESD, or a subset of them, and the</text>
<text top="538" left="81" width="302" height="14" font="3">output are various kinds of statistical distributions.</text>
<text top="556" left="99" width="428" height="14" font="3">All these activities require heavy usage of computing resources (see Fig.</text>
<text top="556" left="530" width="19" height="14" font="9"><a href="pdfxml.html#4">1.1</a></text>
<text top="556" left="549" width="30" height="14" font="3"><a href="pdfxml.html#4">) </a>and</text>
<text top="574" left="81" width="498" height="14" font="3">the development of programmes and frameworks speciﬁc to HEP. In the rest of this</text>
<text top="592" left="81" width="465" height="14" font="3">chapter we will describe the story of these programmes over the last 20 years.</text>
<text top="638" left="81" width="22" height="16" font="8"><b>1.2</b></text>
<text top="638" left="120" width="262" height="16" font="8"><b>Hardware and Operating Systems</b></text>
<text top="682" left="81" width="497" height="14" font="3">At the end of the ﬁfties, the ﬁrst computer at CERN was a man, Wim Klein. He</text>
<text top="700" left="81" width="497" height="14" font="3">was hired to help physicists in computing complex mathematical expressions. His</text>
<text top="718" left="81" width="498" height="14" font="3">operating system and clock cycle were such that he was able to evaluate in a few</text>
<text top="736" left="81" width="497" height="14" font="3">seconds any trigonometric, square root, exponential or logarithmic function. His</text>
<text top="754" left="81" width="498" height="14" font="3">memory was able to store several MegaBytes of data where he could store the</text>
<text top="772" left="81" width="498" height="14" font="3">phone directory of Amsterdam at the end of the Second World War, then later tables</text>
<text top="790" left="81" width="497" height="14" font="3">of logs, prime numbers or large matrices. He was able to compete with the ﬁrst</text>
<text top="808" left="81" width="497" height="14" font="3">CERN computer, a Ferranti Mercury in 1958, or even more elaborate machines in</text>
<text top="826" left="81" width="498" height="14" font="3">the early sixties. It was only when the ﬁrst really powerful computer, a Control</text>
<text top="844" left="81" width="498" height="14" font="3">Data CDC 6600, came to CERN in 1964 that Wim “retired” and gave TV shows</text>
<text top="862" left="81" width="498" height="14" font="3">or famous lectures for CERN summer students. For about one decade the Control</text>
<text top="880" left="81" width="498" height="14" font="3">Data CDC 6600 was the main work-horse at CERN. This was a 60 bit machine</text>
<text top="898" left="81" width="498" height="14" font="3">with 64 kilo-words of RAM and a few 32 MegaBytes disks. It took several months</text>
</page>
<page number="5" position="absolute" top="0" left="0" height="999" width="659">
<text top="55" left="81" width="6" height="12" font="4">1</text>
<text top="55" left="99" width="381" height="12" font="4">Technologies, Collaborations and Languages: 20 Years of HEP Computing</text>
<text top="55" left="572" width="6" height="12" font="4">5</text>
<text top="93" left="81" width="497" height="14" font="3">to tune the system to the CERN environment. Because of many instabilities in the</text>
<text top="111" left="81" width="498" height="14" font="3">native operating system CDC Scope, a special CERN version called CERNScope</text>
<text top="129" left="81" width="497" height="14" font="3">was developed. The system could run only one job at a time. The job scheduler was</text>
<text top="147" left="81" width="498" height="14" font="3">an operator taking the next job from one of the input queues, looking at the requests</text>
<text top="165" left="81" width="498" height="14" font="3">for mounting tapes from a rack to one of the many tape units and dumping the result</text>
<text top="183" left="81" width="168" height="14" font="3">of the job to the line printer.</text>
<text top="239" left="99" width="461" height="14" font="3">The pioneering years: punched cards and line printers. New opportunities and</text>
<text top="257" left="99" width="126" height="14" font="3">technical limitations.</text>
<text top="311" left="99" width="460" height="14" font="3">Users were writing their programmes on special FORTRAN-oriented <a href="pdfxml.html#53">[</a></text>
<text top="311" left="558" width="15" height="14" font="9"><a href="pdfxml.html#53">81</a></text>
<text top="311" left="573" width="5" height="14" font="3">]</text>
<text top="329" left="81" width="497" height="14" font="3">(FORmula TRANslation) sheets of 80 columns and up to 40 lines per sheet. Once</text>
<text top="347" left="81" width="498" height="14" font="3">the user was satisﬁed by his creation, he converted his hand written programme</text>
<text top="365" left="81" width="497" height="14" font="3">into a computer readable form using one of the many card punchers available in</text>
<text top="383" left="81" width="497" height="14" font="3">the card puncher room next to the computer centre, not far away from the CERN</text>
<text top="401" left="81" width="498" height="14" font="3">main cafeteria. The card puncher room was an interesting area, a focal point where</text>
<text top="419" left="81" width="498" height="14" font="3">people helped each other and discussed the latest news. Once the programme had</text>
<text top="437" left="81" width="498" height="14" font="3">been converted to punched cards (typically a few hundred cards), it was put in a</text>
<text top="455" left="81" width="498" height="14" font="3">special card box and the box put in one of the job rack input queues (short, medium,</text>
<text top="473" left="81" width="498" height="14" font="3">long, very long). The order and priority to process the jobs from the different queues</text>
<text top="491" left="81" width="474" height="14" font="3">was in general a strong function of the quality of the user-operator relationship.</text>
<text top="509" left="99" width="480" height="14" font="3">Starting from 1971, users could feed their jobs to the system themselves by using</text>
<text top="527" left="81" width="497" height="14" font="3">one of the new Remote Input-Output Stations (RIOS) available on the site. It was</text>
<text top="545" left="81" width="497" height="14" font="3">possible to see the status of the job (or jobs) by typing a command like “inquire job</text>
<text top="563" left="81" width="497" height="14" font="3">brun 124” on a teletype next to the card reader. Once the job had been run, the log</text>
<text top="581" left="81" width="498" height="14" font="3">ﬁle and results (typically a few numbers or a few histograms) were printed on the</text>
<text top="599" left="81" width="498" height="14" font="3">printer next to the card reader. It was a quite tedious operation to get a programme</text>
<text top="617" left="81" width="497" height="14" font="3">running. Most of the time people were ﬁxing compilation errors or the like. A task</text>
<text top="635" left="81" width="457" height="14" font="3">that would take today less than one minute on any system, was taking hours.</text>
<text top="653" left="99" width="480" height="14" font="3">Sometimes it was hard to ﬁnd an error when the programme crashed (the</text>
<text top="671" left="81" width="498" height="14" font="3">infamous “segmentation fault” error). The ultimate solution was to follow the</text>
<text top="689" left="81" width="497" height="14" font="3">execution of the programme on the main operator console and take note of the stack</text>
<text top="707" left="81" width="498" height="14" font="3">trace (a few octal numbers) and try to ﬁgure out the position of the crash in the</text>
<text top="725" left="81" width="498" height="14" font="3">executable module. In 1973 the revolutionary FOCUS system was introduced. This</text>
<text top="743" left="81" width="498" height="14" font="3">was a CDC 3100 machine used as a front-end to the CDC 6600. FOCUS controlled</text>
<text top="761" left="81" width="497" height="14" font="3">the card readers and printers on several CERN sites. But the big plus was the</text>
<text top="779" left="81" width="498" height="14" font="3">possibility to use a teletype instead of the card puncher to create programmes</text>
<text top="797" left="81" width="498" height="14" font="3">on a disk ﬁle, edit this ﬁle and submit it directly to the CDC 6600. This was a</text>
<text top="815" left="81" width="498" height="14" font="3">decisive improvement (at least for me). The teletype was replaced one year later</text>
<text top="833" left="81" width="498" height="14" font="3">by a fantastic Tektronix 4010 display giving, in addition, the possibility to display</text>
<text top="851" left="81" width="146" height="14" font="3">results in graphics form.</text>
<text top="869" left="99" width="480" height="14" font="3">Because disk space was extremely expensive and unreliable, the FOCUS session</text>
<text top="887" left="81" width="497" height="14" font="3">ﬁle(s) were dumped to a tape at log-out time. To log-in to the system, one had to</text>
<text top="905" left="81" width="497" height="14" font="3">type a magic formula like “focus login brun”. This triggered a red lamp to ﬂash in</text>
</page>
<page number="6" position="absolute" top="0" left="0" height="999" width="659">
<text top="55" left="81" width="6" height="12" font="4">6</text>
<text top="55" left="538" width="40" height="12" font="4">R. Brun</text>
<text top="93" left="81" width="498" height="14" font="3">the computer room to attract the attention of an operator to mount your previous</text>
<text top="111" left="81" width="498" height="14" font="3">session from tape to disk. And of course in a symmetric way your current session</text>
<text top="129" left="81" width="498" height="14" font="3">on disk was dumped to tape at log-out time. It was possible to mount an old session</text>
<text top="147" left="81" width="453" height="14" font="3">from yesterday, last week or even last month in case of a catastrophic event.</text>
<text top="198" left="99" width="461" height="14" font="3">The arrival of the CDC 7600, CERN’s ﬁrst supercomputer. A change of era:</text>
<text top="216" left="99" width="192" height="14" font="3">interactivity and CRT terminals.</text>
<text top="266" left="99" width="480" height="14" font="3">A new machine, a CDC 7600, was added to the computer centre in 1973 as</text>
<text top="284" left="81" width="497" height="14" font="3">well as two other front-end machines, a CDC 6400 and a CDC 6500. These were</text>
<text top="302" left="81" width="498" height="14" font="3">running an interactive subsystem called INTERCOM where small programmes</text>
<text top="320" left="81" width="498" height="14" font="3">could be developed and tested before submitting them to the CDC 7600 batch</text>
<text top="338" left="81" width="498" height="14" font="3">queues. With the advent of INTERCOM and the availability of more and more</text>
<text top="356" left="81" width="498" height="14" font="3">functional graphics displays like the Tektronix 4002, more and more buildings had</text>
<text top="374" left="81" width="498" height="14" font="3">serial line connections to the CDC system at typical speeds of 4,800 baud (bits per</text>
<text top="392" left="81" width="176" height="14" font="3">second) and later 9,600 baud.</text>
<text top="410" left="99" width="480" height="14" font="3">In 1977 a new IBM 370/168 computer was introduced. This was a 32 bit</text>
<text top="428" left="81" width="498" height="14" font="3">machine but with more RAM (a few MegaBytes). The machine was running the</text>
<text top="446" left="81" width="498" height="14" font="3">IBM MVS batch operating system, with the Wylbur interactive front-end subsystem</text>
<text top="464" left="81" width="498" height="14" font="3">developed at the Stanford Linear Accelerator Centre (SLAC). Users could edit</text>
<text top="482" left="81" width="497" height="14" font="3">their programmes, submit them to the batch queues and inspect results. It was also</text>
<text top="500" left="81" width="498" height="14" font="3">possible to share a common documentation system and exchange mails between</text>
<text top="518" left="81" width="498" height="14" font="3">CERN users. Because Wylbur had been designed as a light-weight system, the</text>
<text top="536" left="81" width="497" height="14" font="3">machine could support up to a few hundred people concurrently. It was also</text>
<text top="554" left="81" width="498" height="14" font="3">possible to run interactive programmes under the native TSO system. However, for</text>
<text top="572" left="81" width="385" height="14" font="3">economical reasons, only very few users could run concurrently.</text>
<text top="590" left="99" width="480" height="14" font="3">In 1976 smaller Norsk-Data machines (super-minis from a Norwegian company)</text>
<text top="608" left="81" width="498" height="14" font="3">appeared as a solution for data taking and analysis in the large experiments at</text>
<text top="626" left="81" width="498" height="14" font="3">the SPS (CERN Super Proton Synchrotron particle accelerator). These machines</text>
<text top="644" left="81" width="498" height="14" font="3">were used as alternatives to the conventional PDP 11 machines for data acquisition.</text>
<text top="662" left="81" width="498" height="14" font="3">In particular, the SPS accelerator control was operated by a farm of Nord10</text>
<text top="680" left="81" width="497" height="14" font="3">machines. A Nord50 machine with more memory (about 256 kiloBytes of RAM)</text>
<text top="698" left="81" width="497" height="14" font="3">was purchased by the SPS NA4 experiment where we ported the full CERNLIB,</text>
<text top="716" left="81" width="498" height="14" font="3">and where the ﬁrst versions of the GEANT simulation package, GEANT 1 and</text>
<text top="734" left="81" width="167" height="14" font="3">GEANT 2, were developed.</text>
<text top="785" left="99" width="461" height="14" font="3">The golden age of the mainframes. IBM-VM/CMS offers true interactive</text>
<text top="803" left="99" width="148" height="14" font="3">access to the mainframe.</text>
<text top="858" left="99" width="480" height="14" font="3">In 1982, the old IBM 370 was up-graded to a more powerful IBM 3081</text>
<text top="876" left="81" width="498" height="14" font="3">running the VM/CMS (Virtual Machine) operating system. VM/CMS was offering</text>
</page>
<page number="7" position="absolute" top="0" left="0" height="999" width="659">
<text top="55" left="81" width="6" height="12" font="4">1</text>
<text top="55" left="99" width="381" height="12" font="4">Technologies, Collaborations and Languages: 20 Years of HEP Computing</text>
<text top="55" left="572" width="6" height="12" font="4">7</text>
<text top="93" left="81" width="498" height="14" font="3">a page-oriented alphanumeric user interface that was appropriate for the VT100</text>
<text top="111" left="81" width="498" height="14" font="3">(or compatible) terminals installed gradually in all ofﬁces at CERN. IBM 370/168</text>
<text top="129" left="81" width="497" height="14" font="3">emulators (168E) were built by SLAC and CERN and used quite extensively for the</text>
<text top="147" left="81" width="497" height="14" font="3">data acquisition of the big UA1 experiment, and later came the 3081E, built in Israel</text>
<text top="165" left="81" width="498" height="14" font="3">in view of the upcoming Large Electron Positron (LEP) experiments (in particular</text>
<text top="183" left="81" width="46" height="14" font="3">OPAL <a href="pdfxml.html#52">[</a></text>
<text top="183" left="127" width="15" height="14" font="9"><a href="pdfxml.html#52">41</a></text>
<text top="183" left="142" width="436" height="14" font="3">]). These emulators were running with a reduced instruction set and were</text>
<text top="201" left="81" width="498" height="14" font="3">pretty inexpensive to build. However, porting general software on these machines</text>
<text top="219" left="81" width="498" height="14" font="3">proved to be more difﬁcult than originally thought. After a few years, it became</text>
<text top="237" left="81" width="498" height="14" font="3">more economical to switch to the new generation of Motorola 68000 processors.</text>
<text top="255" left="81" width="498" height="14" font="3">These processors also came with a VME board, making them extremely attractive</text>
<text top="273" left="81" width="215" height="14" font="3">for data acquisition (DAQ) systems.</text>
<text top="329" left="99" width="461" height="14" font="3">CERN enters the UNIX world thanks to the Cray-XMP supercomputer. We</text>
<text top="347" left="99" width="378" height="14" font="3">discover that HEP code cannot take advantage of vectorisation.</text>
<text top="401" left="99" width="480" height="14" font="3">In 1987 the CDC machines were replaced by a more powerful Cray-XMP</text>
<text top="419" left="81" width="498" height="14" font="3">machine. The Cray had been used successfully in other scientiﬁc organisations</text>
<text top="437" left="81" width="497" height="14" font="3">to run large codes that had been vectorised. However, as we will see later, most</text>
<text top="455" left="81" width="497" height="14" font="3">attempts to vectorise our programmes failed, but the Cray was a popular machine to</text>
<text top="473" left="81" width="498" height="14" font="3">run pure scalar code. With the growing amount of data collected on tapes, several</text>
<text top="491" left="81" width="498" height="14" font="3">generations of robotic systems were introduced in the basement of the computer</text>
<text top="509" left="81" width="40" height="14" font="3">centre.</text>
<text top="527" left="99" width="480" height="14" font="3">In the early 1980s, the VAX 780 machines from Digital Equipment Corporation</text>
<text top="545" left="81" width="498" height="14" font="3">(DEC) became available in many places. The VAX featured the very user-friendly</text>
<text top="563" left="81" width="498" height="14" font="3">operating system VMS with a very good FORTRAN compiler and debugger. Large</text>
<text top="581" left="81" width="498" height="14" font="3">VAX systems were introduced at CERN and many other laboratories. It is hard</text>
<text top="599" left="81" width="498" height="14" font="3">to understand how DEC could fail as a company after having built this golden</text>
<text top="617" left="81" width="498" height="14" font="3">machine. In 1980 a VAX 780 computer was installed in the “barn” (next to the</text>
<text top="635" left="81" width="498" height="14" font="3">CERN computer centre) for the OPAL experiment. It was on this machine that the</text>
<text top="653" left="81" width="187" height="14" font="3">ﬁrst versions of the GEANT 3 <a href="pdfxml.html#51">[</a></text>
<text top="653" left="268" width="15" height="14" font="9"><a href="pdfxml.html#51">11</a></text>
<text top="653" left="283" width="296" height="14" font="3"><a href="pdfxml.html#51">] </a>detector simulation programme were developed.</text>
<text top="709" left="99" width="461" height="14" font="3">The 1980s was the era of the workstations. The Apollo machines came to</text>
<text top="727" left="99" width="44" height="14" font="3">CERN.</text>
<text top="781" left="99" width="480" height="14" font="3">In 1982, the ﬁrst workstations appeared on the market. In 1981, a PERQ work-</text>
<text top="799" left="81" width="498" height="14" font="3">station (sold in Europe by the English company ICL) was given to the CERN com-</text>
<text top="817" left="81" width="497" height="14" font="3">puting division. This machine ran a very user-friendly but exotic operating system</text>
<text top="835" left="81" width="498" height="14" font="3">implemented in Pascal, a very popular language at the end of the 1970s. However,</text>
<text top="853" left="81" width="498" height="14" font="3">it was not easy to port our software on this station (due to its poor networking, and</text>
<text top="871" left="81" width="498" height="14" font="3">bad FORTRAN compiler). In June 1982, I was invited to visit the Apollo company</text>
</page>
<page number="8" position="absolute" top="0" left="0" height="999" width="659">
<text top="55" left="81" width="6" height="12" font="4">8</text>
<text top="55" left="538" width="40" height="12" font="4">R. Brun</text>
<text top="93" left="81" width="497" height="14" font="3">in Chelmsford (MA). In less than one week, I was able to port a large fraction of</text>
<text top="111" left="81" width="498" height="14" font="3">the GEANT 3 simulation system and associated packages, including an interactive</text>
<text top="129" left="81" width="139" height="14" font="3">graphics system HTV <a href="pdfxml.html#51">[</a></text>
<text top="129" left="220" width="15" height="14" font="9"><a href="pdfxml.html#51">12</a></text>
<text top="129" left="235" width="260" height="14" font="3"><a href="pdfxml.html#51">] </a>to display histograms or detector pictures.</text>
<text top="147" left="99" width="480" height="14" font="3">Two Apollo DN 400 machines were given to CERN in July 1982. A DN 400 built</text>
<text top="165" left="81" width="497" height="14" font="3">around the new Motorola 68000 had 512 kiloBytes of RAM, a 32 MegaBytes disk</text>
<text top="183" left="81" width="497" height="14" font="3">and a nice bitmap screen. The volume of the processor, disk and connections was</text>
<text top="201" left="81" width="498" height="14" font="3">about one cubic meter and was a room-heating system in itself. It is on this machine</text>
<text top="219" left="81" width="477" height="14" font="3">that the major components of GEANT 3 were developed and later the PAW <a href="pdfxml.html#51">[</a></text>
<text top="219" left="558" width="15" height="14" font="9"><a href="pdfxml.html#51">13</a></text>
<text top="219" left="573" width="5" height="14" font="3">]</text>
<text top="237" left="81" width="45" height="14" font="3">system.</text>
<text top="255" left="99" width="480" height="14" font="3">Directives at CERN were encouraging the purchase of machines built in</text>
<text top="273" left="81" width="498" height="14" font="3">Europe. To justify the acquisition of a new model Apollo DN 600 (costing around</text>
<text top="291" left="81" width="498" height="14" font="3">100,000 CHF before discount), we used the tactic of purchasing a graphics tablet</text>
<text top="309" left="81" width="497" height="14" font="3">with a mouse built by a Swiss company Logitech and a “peripheral equipment” to</text>
<text top="327" left="81" width="497" height="14" font="3">operate the mouse, the DN 600. This went through! The DN 600 had 1 Megabyte of</text>
<text top="345" left="81" width="498" height="14" font="3">RAM and 128 MegaBytes disk, something sufﬁcient to run our large programmes</text>
<text top="363" left="81" width="498" height="14" font="3">at that time. The Apollo system also featured a very advanced 12 Megabit/sec</text>
<text top="381" left="81" width="498" height="14" font="3">token ring networking system (Apollo Domain) where each machine with a 96</text>
<text top="399" left="81" width="498" height="14" font="3">bits address had a unique identiﬁer in the world. The very advanced operating</text>
<text top="417" left="81" width="497" height="14" font="3">system AEGYS was such that it was possible to see and use ﬁles from other Apollo</text>
<text top="435" left="81" width="498" height="14" font="3">Domain machines or to run and debug programmes remotely. A few hundred Apollo</text>
<text top="453" left="81" width="497" height="14" font="3">machines were purchased during the 1980s. Later on DEC-VMS workstations also</text>
<text top="471" left="81" width="98" height="14" font="3">became popular.</text>
<text top="527" left="99" width="461" height="14" font="3">CERN pioneering activity in network. CERNET was one of the ﬁrst local area</text>
<text top="545" left="99" width="146" height="14" font="3">networks ever deployed.</text>
<text top="599" left="99" width="480" height="14" font="3">During the 1970s, a very innovative networking system called CERNET had</text>
<text top="617" left="81" width="498" height="14" font="3">been developed. It connected the various data acquisition systems to the central</text>
<text top="635" left="81" width="498" height="14" font="3">machines and operated at growing speeds up to 2 Megabit/s. IBM introduced</text>
<text top="653" left="81" width="497" height="14" font="3">their BITNET wide area networking system in 1978. Electronic mails could be</text>
<text top="671" left="81" width="497" height="14" font="3">exchanged via BITNET with the main computing centres in the world. During the</text>
<text top="689" left="81" width="498" height="14" font="3">1980s, Ethernet TCP/IP became the de facto standard for networking, in contrast</text>
<text top="707" left="81" width="497" height="14" font="3">with the expectations of the OSI proposed protocols. At the same time Unix was</text>
<text top="725" left="81" width="497" height="14" font="3">also gaining ground. Many SUN machines were purchased and also several DEC-</text>
<text top="743" left="81" width="498" height="14" font="3">Ultrix machines, used to operate a central Unix service. At the end of the 1980s,</text>
<text top="761" left="81" width="497" height="14" font="3">Reduced Instruction Set CPU (RISC) machines, such as Apollo DN 10000 or SUN,</text>
<text top="779" left="81" width="309" height="14" font="3">became attractive both performance and price-wise.</text>
<text top="835" left="99" width="461" height="14" font="3">From mainframes to clusters. The Scalable Heterogeneous Integrated Facility</text>
<text top="853" left="99" width="128" height="14" font="3">(SHIFT) is deployed.</text>
</page>
<page number="9" position="absolute" top="0" left="0" height="999" width="659">
<text top="55" left="81" width="6" height="12" font="4">1</text>
<text top="55" left="99" width="381" height="12" font="4">Technologies, Collaborations and Languages: 20 Years of HEP Computing</text>
<text top="55" left="572" width="6" height="12" font="4">9</text>
<text top="93" left="99" width="480" height="14" font="3">In 1991, Hewlett-Packard (HP) came onto the scene with their new model HP 720</text>
<text top="111" left="81" width="498" height="14" font="3">and HP 750 workstations. These PA-RISC machines became very interesting</text>
<text top="129" left="81" width="497" height="14" font="3">performance and price-wise with a scalar performance nearly equivalent to the</text>
<text top="147" left="81" width="498" height="14" font="3">Cray XMP processor. In the fall of 1991, IBM released their ﬁrst IBM RISC 6000</text>
<text top="165" left="81" width="497" height="14" font="3">workstation series. Although superior to the HPs in principle, they turned out to</text>
<text top="183" left="81" width="497" height="14" font="3">run large codes like the simulation codes based on GEANT 3 much slower than the</text>
<text top="201" left="81" width="498" height="14" font="3">HP machines. The reason was their small 32 kiloBytes cache while the HP’s had</text>
<text top="219" left="81" width="497" height="14" font="3">a 128 kiloBytes cache. Also in 1991, as the ﬁrst step in the “SHIFT” project, two</text>
<text top="237" left="81" width="497" height="14" font="3">SGI PowerSeries machines were purchased by the Indiana OPAL group. SHIFT,</text>
<text top="255" left="81" width="498" height="14" font="3">the “Scalable Heterogeneous Integrated Facility”, (see Chap. 3) was the computing</text>
<text top="273" left="81" width="497" height="14" font="3">division’s networked cluster solution for replacing mainframes with more cost-</text>
<text top="291" left="81" width="498" height="14" font="3">effective systems. This cluster attracted interest from the other LEP experiments</text>
<text top="309" left="81" width="498" height="14" font="3">and the SHIFT system, with a large number of SGI, and then later SUN, DEC and</text>
<text top="327" left="81" width="335" height="14" font="3">HP machines, became very popular for LEP computing.</text>
<text top="345" left="99" width="480" height="14" font="3">In the early 1990s, MPP (Massively Parallel Processor) systems were thought</text>
<text top="363" left="81" width="498" height="14" font="3">the way to go, as many people predicted that the computing power of conventional</text>
<text top="381" left="81" width="498" height="14" font="3">scalar systems would not exceed the power of a Cray processor. However, this</text>
<text top="399" left="81" width="498" height="14" font="3">prediction proved to be totally wrong with the advent in 1994 of the Intel</text>
<text top="417" left="81" width="498" height="14" font="3">x86 architecture and the associated explosion of inexpensive computing that has</text>
<text top="435" left="81" width="498" height="14" font="3">witnessed the multiplication in one decade of the CPU, RAM and disk by at</text>
<text top="453" left="81" width="497" height="14" font="3">least two orders of magnitude. A big revolution came with the ﬁrst Pentium Pro</text>
<text top="471" left="81" width="498" height="14" font="3">processors. These inexpensive processors quickly invaded most Personal Computers</text>
<text top="489" left="81" width="498" height="14" font="3">(PC) running Microsoft software or the emerging Linux system. In 1995 the</text>
<text top="507" left="81" width="46" height="14" font="3">NA49 <a href="pdfxml.html#52">[</a></text>
<text top="507" left="127" width="15" height="14" font="9"><a href="pdfxml.html#52">40</a></text>
<text top="507" left="142" width="436" height="14" font="3"><a href="pdfxml.html#52">] </a>collaboration pioneered the introduction of Linux at CERN. It took 2</text>
<text top="525" left="81" width="498" height="14" font="3">years to convince the Information Technology (IT) Division to provide a better</text>
<text top="543" left="81" width="497" height="14" font="3">support for this system that was anyhow used (despite the small support) by a</text>
<text top="561" left="81" width="497" height="14" font="3">rapidly growing user community. The main computer centres in the world moved to</text>
<text top="579" left="81" width="498" height="14" font="3">Intel (or AMD) based systems. Between 1994 and 2002 the increase in performance</text>
<text top="597" left="81" width="274" height="14" font="3">continued to follow the famous Moore’s law <a href="pdfxml.html#53">[</a></text>
<text top="597" left="354" width="15" height="14" font="9"><a href="pdfxml.html#53">80</a></text>
<text top="597" left="369" width="91" height="14" font="3"><a href="pdfxml.html#53">] </a>(see Chap. 7).</text>
<text top="653" left="99" width="461" height="14" font="3">Parallel processing slowly imposes itself as the only way to achieve the</text>
<text top="671" left="99" width="371" height="14" font="3">needed performance. Code re-engineering is a major obstacle.</text>
<text top="725" left="99" width="480" height="14" font="3">However in 2001, it was already obvious that the race to increase the processor</text>
<text top="743" left="81" width="498" height="14" font="3">clock had to stop because it was becoming expensive to cool a large farm of</text>
<text top="761" left="81" width="498" height="14" font="3">processors. The dual core, then quad core machines operating at a lower frequency</text>
<text top="779" left="81" width="498" height="14" font="3">appeared in 2003. If we trust the micro-processor vendors, we can expect multi</text>
<text top="797" left="81" width="498" height="14" font="3">core (up to 16) and later many-core machines with a mixture of fat and light core</text>
<text top="815" left="81" width="498" height="14" font="3">engines in the coming years. Are we today in the same situation as in 1990? The only</text>
<text top="833" left="81" width="498" height="14" font="3">way out again seems parallel architectures and we are now forced to re-engineer</text>
<text top="851" left="81" width="498" height="14" font="3">our programmes designed for sequential processing to take advantage of multi core</text>
<text top="869" left="81" width="480" height="14" font="3">CPUs or the like. The question of parallelism will be treated in detail in Chap. 7.</text>
</page>
<page number="10" position="absolute" top="0" left="0" height="999" width="659">
	<fontspec id="13" size="12" family="Courier" color="#131413"/>
<text top="55" left="81" width="13" height="12" font="4">10</text>
<text top="55" left="538" width="40" height="12" font="4">R. Brun</text>
<text top="93" left="99" width="480" height="14" font="3">With the x86 processors, the number of desktop machines exploded very quickly.</text>
<text top="111" left="81" width="498" height="14" font="3">Starting in 2000, laptops changed the modus vivendi in HEP and other ﬁelds.</text>
<text top="129" left="81" width="498" height="14" font="3">Conference rooms were populated by attendees each with laptops on their knees</text>
<text top="147" left="81" width="498" height="14" font="3">communicating with the outside world via a wireless network, such that they could</text>
<text top="165" left="81" width="498" height="14" font="3">participate in many conferences simultaneously or continue to do their normal</text>
<text top="183" left="81" width="498" height="14" font="3">work. Presentations that were using transparencies moved quickly to Microsoft</text>
<text top="201" left="81" width="498" height="14" font="3">PowerPoint with a substantial quality improvement. PowerPoint (or compatible</text>
<text top="219" left="81" width="497" height="14" font="3">systems like Open Ofﬁce) became the standard communication medium. While</text>
<text top="237" left="81" width="498" height="14" font="3">at the beginning most people were running Windows on their laptop, Linux</text>
<text top="255" left="81" width="498" height="14" font="3">gained ground with dual boot systems or Windows run under VMware or other</text>
<text top="273" left="81" width="498" height="14" font="3">virtualisation products. With an improved user interface, Apple machines running</text>
<text top="291" left="81" width="357" height="14" font="3">the popular MacOSX system are now gaining in popularity.</text>
<text top="355" left="81" width="23" height="16" font="8"><b>1.3</b></text>
<text top="355" left="120" width="201" height="16" font="8"><b>Languages and Compilers</b></text>
<text top="399" left="81" width="498" height="14" font="3">FORTRAN has been the main language for scientiﬁc computing since the origin</text>
<text top="417" left="81" width="498" height="14" font="3">of computing. The ﬁrst FORTRAN compiler was a milestone in the history of</text>
<text top="435" left="81" width="498" height="14" font="3">computing; at that time computers had very small memories (a few kiloBytes),</text>
<text top="453" left="81" width="497" height="14" font="3">they were slow and had very primitive operating systems. This ﬁrst compiler was</text>
<text top="471" left="81" width="497" height="14" font="3">designed and written from scratch in 1954–57 by an IBM team led by John W.</text>
<text top="489" left="81" width="498" height="14" font="3">Backus who was also system co-designer of the computer that ran the ﬁrst compiler,</text>
<text top="507" left="81" width="80" height="14" font="3">the IBM 704.</text>
<text top="563" left="99" width="461" height="14" font="3">FORTRAN was the ﬁrst high-level language that gained large popularity and</text>
<text top="581" left="99" width="175" height="14" font="3">was extensively used in HEP.</text>
<text top="635" left="99" width="480" height="14" font="3">Thanks to this high level language, programmes computing nuclear power</text>
<text top="653" left="81" width="498" height="14" font="3">reactor parameters now took hours instead of weeks to write, and required much</text>
<text top="671" left="81" width="498" height="14" font="3">less programming skills. Another great advantage of the new invention was that</text>
<text top="689" left="81" width="498" height="14" font="3">programmes now became portable. FORTRAN won the battle against Assembly</text>
<text top="707" left="81" width="498" height="14" font="3">language, the ﬁrst in a series of battles to come, and was adopted by the scientiﬁc and</text>
<text top="725" left="81" width="498" height="14" font="3">military communities and used extensively in the Space Programme and military</text>
<text top="743" left="81" width="51" height="14" font="3">projects.</text>
<text top="761" left="99" width="480" height="14" font="3">In 1958 FORTRAN II (followed the same year by FORTRAN III) was a</text>
<text top="779" left="81" width="498" height="14" font="3">signiﬁcant improvement; it added the capability for separate compilation of pro-</text>
<text top="797" left="81" width="497" height="14" font="3">gramme modules. Assembly language modules could also be “linked loaded” with</text>
<text top="815" left="81" width="127" height="14" font="3">FORTRAN modules.</text>
<text top="833" left="99" width="423" height="14" font="3">In 1961 FORTRAN IV improved things with the implementation of the</text>
<text top="834" left="525" width="54" height="12" font="13">COMMON</text>
<text top="851" left="81" width="22" height="14" font="3">and</text>
<text top="852" left="109" width="99" height="12" font="13">EQUIVALENCE</text>
<text top="851" left="215" width="363" height="14" font="3">statements, and eliminating some machine-dependent lan-</text>
<text top="869" left="81" width="498" height="14" font="3">guage irregularities. In 1962 an American Standard Association (ASA) committee</text>
</page>
<page number="11" position="absolute" top="0" left="0" height="999" width="659">
<text top="55" left="81" width="6" height="12" font="4">1</text>
<text top="55" left="99" width="381" height="12" font="4">Technologies, Collaborations and Languages: 20 Years of HEP Computing</text>
<text top="55" left="566" width="13" height="12" font="4">11</text>
<text top="93" left="81" width="497" height="14" font="3">started developing a standard for the FORTRAN language, a very important step</text>
<text top="111" left="81" width="498" height="14" font="3">that made it worthwhile for vendors to produce FORTRAN systems for every new</text>
<text top="129" left="81" width="497" height="14" font="3">computer. The new standard was published in 1966 and it was the language of</text>
<text top="147" left="81" width="498" height="14" font="3">choice for the implementation of the main scientiﬁc libraries, including CERN-</text>
<text top="165" left="81" width="497" height="14" font="3">LIB. The next standard was published in 1977, (and corresponding FORTRAN</text>
<text top="183" left="81" width="497" height="14" font="3">version was known under the abbreviation of F77) adding new features such as:</text>
<text top="202" left="81" width="18" height="12" font="13">DO</text>
<text top="201" left="99" width="421" height="14" font="3">-loops with a decreasing control variable (index), block if statements</text>
<text top="202" left="525" width="54" height="12" font="13">IF ...</text>
<text top="220" left="81" width="206" height="12" font="13">THEN ... ELSE ... ENDIF</text>
<text top="219" left="293" width="177" height="14" font="3">(before F77 there were only</text>
<text top="220" left="477" width="63" height="12" font="13">IF GOTO</text>
<text top="219" left="546" width="32" height="14" font="3">state-</text>
<text top="237" left="81" width="45" height="14" font="3">ments),</text>
<text top="238" left="130" width="81" height="12" font="13">CHARACTER</text>
<text top="237" left="216" width="363" height="14" font="3">data type (before F77, characters were always stored inside</text>
<text top="256" left="81" width="63" height="12" font="13">INTEGER</text>
<text top="255" left="147" width="427" height="14" font="3">variables) and, ﬁnally, apostrophes delimited character string constants.</text>
<text top="311" left="99" width="461" height="14" font="3">FORTRAN 77 marked the apogee of the FORTRAN language. An efﬁcient</text>
<text top="329" left="99" width="386" height="14" font="3">and easy-to-learn standard language for scientists and engineers.</text>
<text top="383" left="99" width="480" height="14" font="3">Learning FORTRAN 77 was quite easy. Most physicists learnt this language</text>
<text top="401" left="81" width="498" height="14" font="3">by extending or copying pieces of code from colleagues. Very efﬁcient imple-</text>
<text top="419" left="81" width="498" height="14" font="3">mentations of the language were available on all machines. The main strength</text>
<text top="437" left="81" width="498" height="14" font="3">of the language was the fact that only basic and easy constructs were available</text>
<text top="455" left="81" width="498" height="14" font="3">and the data types restricted to characters, Boolean, integers and ﬂoating point.</text>
<text top="473" left="81" width="498" height="14" font="3">Of course, the price to pay for this simplicity was “spaghetti style” code and the</text>
<text top="491" left="81" width="498" height="14" font="3">wheel reinvented many times, in particular when more complex data structures had</text>
<text top="509" left="81" width="498" height="14" font="3">to be implemented. A macro extension of FORTRAN 77, called Mortran (More</text>
<text top="527" left="81" width="497" height="14" font="3">than FORTRAN) was developed at SLAC in the early 1980s. With Mortran, it was</text>
<text top="545" left="81" width="498" height="14" font="3">possible to write more compact code by writing macros with parameters. Mortran</text>
<text top="563" left="81" width="498" height="14" font="3">was a pre-processor generating standard FORTRAN code. The Mortran language</text>
<text top="581" left="81" width="366" height="14" font="3">became popular in some circles but remained a niche market.</text>
<text top="599" left="99" width="480" height="14" font="3">The fact that the wheel was reinvented many times led to the implementation,</text>
<text top="617" left="81" width="497" height="14" font="3">with time, of standard mathematical subroutines, memory management and his-</text>
<text top="635" left="81" width="270" height="14" font="3">togramming packages, and graphics systems.</text>
<text top="653" left="99" width="480" height="14" font="3">In the early 1980s some attempts to introduce Pascal as a better language</text>
<text top="671" left="81" width="498" height="14" font="3">appeared in the data acquisition systems, or derivatives of Pascal in the accelerator</text>
<text top="689" left="81" width="498" height="14" font="3">controls. However, because the Pascal compilers were not generally available and</text>
<text top="707" left="81" width="498" height="14" font="3">the generated code not as efﬁcient as FORTRAN (at least from some reports), Pascal</text>
<text top="725" left="81" width="145" height="14" font="3">was quickly abandoned.</text>
<text top="781" left="99" width="461" height="14" font="3">Pascal, ADA, PL1 and LISP are tested, but cannot replace FORTRAN 77 as</text>
<text top="799" left="99" width="278" height="14" font="3">the main workhorse for physics programming.</text>
<text top="853" left="99" width="480" height="14" font="3">In 1979, the DOD (Department of Defence in the U.S.) decided that the</text>
<text top="871" left="81" width="498" height="14" font="3">next programming language would be ADA and major companies in the U.S.</text>
</page>
<page number="12" position="absolute" top="0" left="0" height="999" width="659">
<text top="55" left="81" width="13" height="12" font="4">12</text>
<text top="55" left="538" width="40" height="12" font="4">R. Brun</text>
<text top="93" left="81" width="497" height="14" font="3">(e.g. Boeing) switched to ADA. As a result we were very strongly pushed to</text>
<text top="111" left="81" width="498" height="14" font="3">investigate ADA. In 1984, a young CERN fellow Jean-Luc Dekeyser implemented</text>
<text top="129" left="81" width="201" height="14" font="3">a large part of the GEANT 3 <a href="pdfxml.html#51">[</a></text>
<text top="129" left="282" width="15" height="14" font="9"><a href="pdfxml.html#51">11</a></text>
<text top="129" left="297" width="282" height="14" font="3"><a href="pdfxml.html#51">] </a>geometry package in ADA. The advantage</text>
<text top="147" left="81" width="498" height="14" font="3">of ADA was that it forced serious thinking to design the data and programme</text>
<text top="165" left="81" width="498" height="14" font="3">structure before making an implementation. However the only compiler available</text>
<text top="183" left="81" width="498" height="14" font="3">was on VAX machines and the time to compile a short programme of 1,000 lines</text>
<text top="201" left="81" width="498" height="14" font="3">was several minutes compared to only several seconds with FORTRAN 77. This</text>
<text top="219" left="81" width="497" height="14" font="3">exercise was nevertheless interesting as an eye-opener on the pros and cons of</text>
<text top="237" left="81" width="498" height="14" font="3">more sophisticated languages. When the ideas around the PAW project emerged</text>
<text top="255" left="81" width="498" height="14" font="3">in 1984, Rudy B¨ock and I visited the Deutsches Elektronen-Synchrotron (DESY)</text>
<text top="273" left="81" width="498" height="14" font="3">laboratory in Hamburg to discuss with Erik Bassler who had implemented a popular</text>
<text top="291" left="81" width="498" height="14" font="3">data analysis system on the IBM, written in the PL1 language. PL1 was a nice</text>
<text top="309" left="81" width="498" height="14" font="3">language that became available also on other systems like VMS. However we never</text>
<text top="327" left="81" width="452" height="14" font="3">considered this language as a general solution as it was too speciﬁc to IBM.</text>
<text top="345" left="99" width="479" height="14" font="3">At the end of the 1980s, many voices were pushing for an alternative to FOR-</text>
<text top="363" left="81" width="498" height="14" font="3">TRAN. LISP was very popular with computer scientists. The SmallTalk language</text>
<text top="381" left="81" width="497" height="14" font="3">was gaining ground in the circles pushing for object orientation. I remember a</text>
<text top="399" left="81" width="497" height="14" font="3">very nice “small SmallTalk talk” by David Myers in 1989. At that time, we were</text>
<text top="417" left="81" width="497" height="14" font="3">deeply embarked in the implementation of the interactive analysis system PAW with</text>
<text top="435" left="81" width="436" height="14" font="3">substantial manpower devoted to an interactive language called KUIP <a href="pdfxml.html#51">[</a></text>
<text top="435" left="517" width="15" height="14" font="9"><a href="pdfxml.html#51">15</a></text>
<text top="435" left="532" width="47" height="14" font="3"><a href="pdfxml.html#51">]. </a>I was</text>
<text top="453" left="81" width="497" height="14" font="3">personally strongly inﬂuenced by two CERN fellows working for short periods with</text>
<text top="471" left="81" width="498" height="14" font="3">our team. Andy Hansom from Indiana University was a LISP expert and in 1990</text>
<text top="489" left="81" width="498" height="14" font="3">trying to implement a PAW front-end based on LISP. None of his attempts were</text>
<text top="507" left="81" width="497" height="14" font="3">successful and looked more complex to use than our non-standard KUIP system.</text>
<text top="525" left="81" width="472" height="14" font="3">Our second expert (Andy Kowalski from Tel Aviv) had some expertise with C</text>
<text top="522" left="553" width="25" height="19" font="10">CC</text>
<text top="543" left="81" width="373" height="14" font="3">and his recommendation was to use a native language like C</text>
<text top="540" left="454" width="124" height="19" font="10">CC to control PAW</text>
<text top="561" left="81" width="497" height="14" font="3">instead of a home grown system. He was with our team only for a few weeks in</text>
<text top="579" left="81" width="478" height="14" font="3">1992, but we retained his message when we started development of the ROOT <a href="pdfxml.html#53">[</a></text>
<text top="579" left="558" width="15" height="14" font="9"><a href="pdfxml.html#53">74</a></text>
<text top="579" left="573" width="5" height="14" font="3">]</text>
<text top="597" left="81" width="144" height="14" font="3">system three years later.</text>
<text top="653" left="99" width="461" height="14" font="3">FORTRAN 90: too little too late, or too ambitious? A lost occasion for HEP</text>
<text top="671" left="99" width="205" height="14" font="3">or a narrowly escaped blind alley?</text>
<text top="725" left="99" width="480" height="14" font="3">The FORTRAN 90 standard was published many years after FORTRAN 77 was</text>
<text top="743" left="81" width="392" height="14" font="3">out. Many new features were added to the language, in particular:</text>
<text top="770" left="81" width="331" height="14" font="3">• Free format source code form (column independent)</text>
<text top="788" left="81" width="327" height="14" font="3">• Modern control structures (CASE and DO WHILE)</text>
<text top="806" left="81" width="315" height="14" font="3">• Records/structures – called “Derived Data Types”</text>
<text top="824" left="81" width="382" height="14" font="3">• Powerful array notation (array sections, array operators, etc.)</text>
<text top="842" left="81" width="189" height="14" font="3">• Dynamic memory allocation</text>
<text top="860" left="81" width="146" height="14" font="3">• Operator overloading</text>
<text top="878" left="81" width="181" height="14" font="3">• Keyword argument passing</text>
</page>
<page number="13" position="absolute" top="0" left="0" height="999" width="659">
	<fontspec id="14" size="12" family="Times" color="#131413"/>
<text top="55" left="81" width="6" height="12" font="4">1</text>
<text top="55" left="99" width="381" height="12" font="4">Technologies, Collaborations and Languages: 20 Years of HEP Computing</text>
<text top="55" left="566" width="13" height="12" font="4">13</text>
<text top="93" left="81" width="253" height="14" font="3">• Control of numeric precision and range</text>
<text top="111" left="81" width="315" height="14" font="3">• Modules – packages containing variable and code</text>
<text top="138" left="99" width="480" height="14" font="3">In the early 1990s, FORTRAN 90 seemed to be the obvious evolution to the</text>
<text top="156" left="81" width="498" height="14" font="3">well-established FORTRAN 77. The leader of the computing division said “I do</text>
<text top="174" left="81" width="497" height="14" font="3">not know what will be the features of the next language, but I know that it will</text>
<text top="192" left="81" width="498" height="14" font="3">be called FORTRAN”. However, this did not happen and this will be the subject</text>
<text top="210" left="81" width="498" height="14" font="3">of another section. We spent many months evaluating FORTRAN 90, in particular</text>
<text top="228" left="81" width="498" height="14" font="3">with the hope that the native support for derived data types could eliminate a large</text>
<text top="246" left="81" width="125" height="14" font="3">part of our ZEBRA <a href="pdfxml.html#51">[</a></text>
<text top="246" left="206" width="15" height="14" font="9"><a href="pdfxml.html#51">16</a></text>
<text top="246" left="221" width="357" height="14" font="3"><a href="pdfxml.html#51">] </a>system. Mike Metcalf was our FORTRAN guru. He was a</text>
<text top="264" left="81" width="478" height="14" font="3">member of the FORTRAN committee, had written a book about FORTRAN 77 <a href="pdfxml.html#53">[</a></text>
<text top="264" left="558" width="15" height="14" font="9"><a href="pdfxml.html#53">77</a></text>
<text top="264" left="573" width="5" height="14" font="3">]</text>
<text top="282" left="81" width="498" height="14" font="3">and written several prototypes showing good examples of how FORTRAN 90 could</text>
<text top="300" left="81" width="498" height="14" font="3">improve and simplify our software. I spent a lot of time in 1991 and 1992 working</text>
<text top="318" left="81" width="498" height="14" font="3">with Mike encouraging him to provide examples of code that could replace our</text>
<text top="336" left="81" width="498" height="14" font="3">traditional bank-oriented software used extensively in the implementation of our</text>
<text top="354" left="81" width="97" height="14" font="3">major packages.</text>
<text top="410" left="99" width="461" height="14" font="3">Dynamic memory management with ﬁxed memory stores. A programming</text>
<text top="428" left="99" width="461" height="14" font="3">tour-de-force in FORTRAN 77 that was not possible to migrate to native</text>
<text top="446" left="99" width="92" height="14" font="3">FORTRAN 90.</text>
<text top="500" left="99" width="480" height="14" font="3">It is perhaps important here to make a short digression to explain what has been</text>
<text top="518" left="81" width="497" height="14" font="3">known as the <i>bank-system </i>in HEP programming, because it occupies a central place</text>
<text top="536" left="81" width="498" height="14" font="3">in the evolution of programming language choices in HEP. Each event is inherently</text>
<text top="554" left="81" width="498" height="14" font="3">different in size from the others. Events are read in memory, processed and then</text>
<text top="572" left="81" width="498" height="14" font="3">deleted to make space for the next one. This calls for the possibility to have dynamic,</text>
<text top="590" left="81" width="497" height="14" font="3">variable-size memory structures that can be easily created and deleted thousands or</text>
<text top="608" left="81" width="498" height="14" font="3">millions of times. However not only the size has to be dynamic, but also the layout</text>
<text top="626" left="81" width="498" height="14" font="3">of the data structure. One event has tracks, which end at a decay vertex, generating</text>
<text top="644" left="81" width="498" height="14" font="3">other tracks variable in number. FORTRAN 77 has ﬁxed-size arrays, which are</text>
<text top="662" left="81" width="497" height="14" font="3">very impractical for this kind of structure, particularly if high performances are</text>
<text top="680" left="81" width="498" height="14" font="3">required and memory is scarce. The solution was to implement a dynamic memory</text>
<text top="698" left="81" width="498" height="14" font="3">management system within ﬁxed arrays in COMMON blocks. Portions of memory</text>
<text top="716" left="81" width="350" height="14" font="3">allotted inside the COMMON blocks were called “banks”.</text>
<text top="734" left="99" width="480" height="14" font="3">The discussion of the pros and cons of this system, that in its latest incarnation</text>
<text top="752" left="81" width="498" height="14" font="3">was called ZEBRA, would take us very far. It may be sufﬁcient to remark that the</text>
<text top="770" left="81" width="498" height="14" font="3">system was complex and the code using it tended to be very obscure. The system</text>
<text top="788" left="81" width="497" height="14" font="3">was dynamic but only within the limits of the memory available; when memory was</text>
<text top="806" left="81" width="498" height="14" font="3">full, the programme died mercilessly with a long and infamous “ZFATAL dump”.</text>
<text top="824" left="81" width="498" height="14" font="3">Memory management was done with “pseudo-pointer” stored in integers, which</text>
<text top="842" left="81" width="498" height="14" font="3">made the transition to 64 bits problematic. On the bright side the system did work,</text>
<text top="860" left="81" width="498" height="14" font="3">and it was very efﬁcient and rich in functionality, particularly I/O, as explained</text>
<text top="878" left="81" width="39" height="14" font="3">below.</text>
</page>
<page number="14" position="absolute" top="0" left="0" height="999" width="659">
<text top="55" left="81" width="13" height="12" font="4">14</text>
<text top="55" left="538" width="40" height="12" font="4">R. Brun</text>
<text top="93" left="99" width="480" height="14" font="3">At this point one could ask why we did not use the C language, which indeed</text>
<text top="111" left="81" width="498" height="14" font="3">offered the possibility to create and delete dynamic structures in memory. Again</text>
<text top="129" left="81" width="498" height="14" font="3">this would require a long discussion exposing the internals of ZEBRA. It may be</text>
<text top="147" left="81" width="419" height="14" font="3">enough to say that in the late 1990s we did move to C, in fact to C</text>
<text top="144" left="500" width="78" height="19" font="10">CC, and we</text>
<text top="165" left="81" width="74" height="14" font="3">realised that</text>
<text top="166" left="160" width="126" height="12" font="13">new ... delete</text>
<text top="165" left="291" width="288" height="14" font="3">was only a small part of the story. Even today,</text>
<text top="183" left="81" width="121" height="14" font="3">with fully mature C</text>
<text top="180" left="202" width="377" height="19" font="10">CC frameworks in production, some of the functionality and</text>
<text top="201" left="81" width="498" height="14" font="3">nice features of ZEBRA have not been completely recovered. This will be explained</text>
<text top="219" left="81" width="132" height="14" font="3">in more detail in Sect.</text>
<text top="219" left="215" width="19" height="14" font="9"><a href="pdfxml.html#20">1.6</a></text>
<text top="219" left="234" width="4" height="14" font="3"><a href="pdfxml.html#20">.</a></text>
<text top="237" left="99" width="480" height="14" font="3">One major stumbling block in the move to FORTRAN 90 was the question of</text>
<text top="255" left="81" width="498" height="14" font="3">Input/Output. With ZEBRA, we had a simple way to describe data structures (banks)</text>
<text top="273" left="81" width="498" height="14" font="3">built out of basic types (typically integers and ﬂoats). Because FORTRAN 90</text>
<text top="291" left="81" width="498" height="14" font="3">supported derived data types, it was theoretically possible to implement the most</text>
<text top="309" left="81" width="497" height="14" font="3">complex data structures that we used to model with ZEBRA. In particular ZEBRA</text>
<text top="327" left="81" width="477" height="14" font="3">was able to write and read these data structures from machine independent ﬁles.</text>
<text top="383" left="99" width="461" height="14" font="3">The need for introspection to deal with derived data types doomed the efforts</text>
<text top="401" left="99" width="432" height="14" font="3">to move to FORTRAN 90. It was going to be as hard (if not more) with C</text>
<text top="397" left="531" width="29" height="19" font="10">CC,</text>
<text top="419" left="99" width="218" height="14" font="3">but we did not know this at the time.</text>
<text top="473" left="99" width="480" height="14" font="3">Using FORTRAN 90, it appeared pretty hard to make a general implementation</text>
<text top="491" left="81" width="498" height="14" font="3">equivalent to ZEBRA without parsing the data type description in the FORTRAN 90</text>
<text top="509" left="81" width="379" height="14" font="3">modules. In fact, we encountered the same problem later with C</text>
<text top="506" left="460" width="119" height="19" font="10">CC, but we naively</text>
<text top="527" left="81" width="497" height="14" font="3">ignored at that time how much work it was to implement a data dictionary or</text>
<text top="545" left="81" width="498" height="14" font="3">reﬂection system describing at run time the type of objects. Mike Metcalf was aware</text>
<text top="563" left="81" width="498" height="14" font="3">of the problem and we reported this to a special session of the FORTRAN committee</text>
<text top="581" left="81" width="497" height="14" font="3">at CERN in 1992. As most members in the committee had no experience with this</text>
<text top="599" left="81" width="498" height="14" font="3">problem and thought that this was a database problem and not a language problem,</text>
<text top="617" left="81" width="440" height="14" font="3">the enhancements that we were expecting in the language did not happen.</text>
<text top="635" left="99" width="480" height="14" font="3">1992 was an interesting year. In September, at the CHEP (Computing in High</text>
<text top="653" left="81" width="114" height="14" font="3">Energy Physics) <a href="pdfxml.html#53">[</a></text>
<text top="653" left="195" width="15" height="14" font="9"><a href="pdfxml.html#53">75</a></text>
<text top="653" left="210" width="5" height="14" font="3">]</text>
<text top="653" left="231" width="347" height="14" font="3">conference in Annecy (France), the Web was the big</text>
<text top="671" left="81" width="498" height="14" font="3">attraction. Tim Berners-Lee and his small team had developed the ﬁrst World Wide</text>
<text top="689" left="81" width="498" height="14" font="3">Web servers and clients using the Objective C language on a NexT workstation. The</text>
<text top="707" left="81" width="498" height="14" font="3">language seemed to be very attractive, but unfortunately without much attraction</text>
<text top="725" left="81" width="497" height="14" font="3">from the industry. Other new languages also looked appealing. An example was</text>
<text top="743" left="81" width="340" height="14" font="3">Eiffel. Some people in the recently created RD41 Moose <a href="pdfxml.html#51">[</a></text>
<text top="743" left="421" width="7" height="14" font="9"><a href="pdfxml.html#51">6</a></text>
<text top="743" left="429" width="150" height="14" font="3"><a href="pdfxml.html#51">] </a>project had already pos-</text>
<text top="761" left="81" width="498" height="14" font="3">itively evaluated this object-oriented language with a better support for parametrised</text>
<text top="779" left="81" width="73" height="14" font="3">types than C</text>
<text top="776" left="154" width="425" height="19" font="10">CC. However most people in the Moose project were known to be more</text>
<text top="797" left="81" width="498" height="14" font="3">game players than people to trust to propose a solid solution, and they were pretty</text>
<text top="815" left="81" width="227" height="14" font="3">slow to come up with valid proposals.</text>
<text top="833" left="99" width="480" height="14" font="3">As a result the situation was quite confusing. At that time, I was running the</text>
<text top="851" left="81" width="497" height="14" font="3">Application Software group in the CERN Computing Division. Following CHEP in</text>
<text top="869" left="81" width="497" height="14" font="3">Annecy, I organised a small workshop in the week just before Christmas 1992 to</text>
</page>
<page number="15" position="absolute" top="0" left="0" height="999" width="659">
<text top="55" left="81" width="6" height="12" font="4">1</text>
<text top="55" left="99" width="381" height="12" font="4">Technologies, Collaborations and Languages: 20 Years of HEP Computing</text>
<text top="55" left="566" width="13" height="12" font="4">15</text>
<text top="93" left="81" width="498" height="14" font="3">discuss possible orientations of our software, with the hope that we could make a</text>
<text top="111" left="81" width="498" height="14" font="3">concrete proposal to the recently born large LHC collaborations. At the time of this</text>
<text top="129" left="81" width="378" height="14" font="3">small workshop, the group was supporting some large projects:</text>
<text top="156" left="81" width="498" height="14" font="3">• A general detector simulation system GEANT 3, implemented in FORTRAN 77.</text>
<text top="174" left="81" width="498" height="14" font="3">• An interactive data analysis system PAW, implemented in FORTRAN 77, but</text>
<text top="192" left="98" width="403" height="14" font="3">with a large subset in C for the graphics and user interface systems.</text>
<text top="210" left="81" width="223" height="14" font="3">• A bookkeeping software HEPDB <a href="pdfxml.html#53">[</a></text>
<text top="210" left="304" width="15" height="14" font="9"><a href="pdfxml.html#53">84</a></text>
<text top="210" left="319" width="236" height="14" font="3"><a href="pdfxml.html#53">] </a>and a ﬁle catalogue system FATMEN <a href="pdfxml.html#53">[</a></text>
<text top="210" left="555" width="15" height="14" font="9"><a href="pdfxml.html#53">83</a></text>
<text top="210" left="570" width="9" height="14" font="3"><a href="pdfxml.html#53">].</a></text>
<text top="228" left="81" width="283" height="14" font="3">• General FORTRAN packages in CERNLIB.</text>
<text top="255" left="99" width="480" height="14" font="3">I realised that the group was strongly divided into three groups: those proposing</text>
<text top="273" left="81" width="497" height="14" font="3">to go on with FORTRAN 90, those proposing an evolutionary approach, but with an</text>
<text top="291" left="81" width="275" height="14" font="3">evaluation of object-oriented languages like C</text>
<text top="288" left="355" width="223" height="19" font="10">CC, and ﬁnally those who supported</text>
<text top="309" left="81" width="420" height="14" font="3">the use of commercial software for things like databases and graphics.</text>
<text top="327" left="99" width="480" height="14" font="3">No conclusion was reached by this workshop. During the following year, the</text>
<text top="345" left="81" width="497" height="14" font="3">situation was even more confusing. The Moose project had been launched in the</text>
<text top="363" left="81" width="497" height="14" font="3">context of the Electronics and Computing for Physics (ECP) division that later</text>
<text top="381" left="81" width="498" height="14" font="3">became famous when it was stopped in 1995 for its numerous failing projects.</text>
<text top="399" left="81" width="497" height="14" font="3">A subtle equilibrium had to be maintained between the ECP Division and the</text>
<text top="417" left="81" width="498" height="14" font="3">Computing and Networks (CN) division. In fact the two division leaders were</text>
<text top="435" left="81" width="498" height="14" font="3">totally unable to follow what was happening in the various corners of software and</text>
<text top="453" left="81" width="498" height="14" font="3">they were known to make strategic alliances rather than propose and encourage</text>
<text top="471" left="81" width="193" height="14" font="3">innovative and trusted solutions.</text>
<text top="527" left="99" width="114" height="14" font="3">The transition to C</text>
<text top="523" left="213" width="347" height="19" font="10">CC is launched. It would take an unforeseen effort and a</text>
<text top="545" left="99" width="461" height="14" font="3">long time before converging to a satisfactory and largely consensual situation.</text>
<text top="617" left="99" width="480" height="14" font="3">In 1994 several Research and Development (RD) projects were launched at</text>
<text top="635" left="81" width="360" height="14" font="3">CERN, in particular the RD44 project to implement in C</text>
<text top="631" left="441" width="137" height="19" font="10">CC a new version of</text>
<text top="653" left="81" width="217" height="14" font="3">GEANT known since as GEANT 4 <a href="pdfxml.html#52">[</a></text>
<text top="653" left="298" width="15" height="14" font="9"><a href="pdfxml.html#52">31</a></text>
<text top="653" left="313" width="266" height="14" font="3"><a href="pdfxml.html#52">], </a>and the RD45 project aiming to investigate</text>
<text top="671" left="81" width="498" height="14" font="3">object-oriented database solutions for the coming experiments. The consensus</text>
<text top="689" left="81" width="133" height="14" font="3">was reached to use C</text>
<text top="685" left="214" width="365" height="19" font="10">CC as the mainstream language for the two projects. This</text>
<text top="707" left="81" width="498" height="14" font="3">consensus was reached following talks by several gurus (in particular Paul Kunz</text>
<text top="725" left="81" width="498" height="14" font="3">from SLAC) showing the Stanford Computer library with plenty of books about</text>
<text top="743" left="81" width="10" height="14" font="3">C</text>
<text top="739" left="91" width="488" height="19" font="10">CC and only one about FORTRAN. It was a funny period where experienced</text>
<text top="761" left="81" width="498" height="14" font="3">software experts (but using FORTRAN) left the ﬁeld open to plenty of computer</text>
<text top="779" left="81" width="388" height="14" font="3">scientists with no experience. One strong argument in favour of C</text>
<text top="775" left="469" width="110" height="19" font="10">CC was that most</text>
<text top="797" left="81" width="497" height="14" font="3">physicists were going to industry after their thesis and it was a better investment to</text>
<text top="815" left="81" width="111" height="14" font="3">be familiar with C</text>
<text top="811" left="192" width="386" height="19" font="10">CC than with FORTRAN. This highly debatable argument was</text>
<text top="833" left="81" width="394" height="14" font="3">largely accepted and not many people questioned the move to C</text>
<text top="829" left="475" width="103" height="19" font="10">CC at that time.</text>
<text top="851" left="81" width="456" height="14" font="3">Most physicists were resigned to the idea that they would have to learn C</text>
<text top="847" left="537" width="41" height="19" font="10">CC at</text>
</page>
<page number="16" position="absolute" top="0" left="0" height="999" width="659">
<text top="55" left="81" width="13" height="12" font="4">16</text>
<text top="55" left="538" width="40" height="12" font="4">R. Brun</text>
<text top="93" left="81" width="498" height="14" font="3">some point in the near future, but most were unaware that the process to move from</text>
<text top="111" left="81" width="158" height="14" font="3">the FORTRAN world to C</text>
<text top="108" left="239" width="312" height="19" font="10">CC would take more time than initially anticipated.</text>
<text top="129" left="99" width="480" height="14" font="3">When Java appeared in 1995, some of the people in the defunct Moose project</text>
<text top="147" left="81" width="243" height="14" font="3">who were in favour of Eiffel instead of C</text>
<text top="144" left="324" width="254" height="19" font="10">CC took this opportunity to push for Java.</text>
<text top="165" left="81" width="498" height="14" font="3">As the two ofﬁcial projects were in the implementation phase, the work continued</text>
<text top="183" left="81" width="40" height="14" font="3">with C</text>
<text top="180" left="121" width="457" height="19" font="10">CC, but most physicists thought that CCC was just an interim solution and</text>
<text top="201" left="81" width="498" height="14" font="3">that our scientiﬁc world would move to Java (perceived as a more modern language</text>
<text top="219" left="81" width="498" height="14" font="3">and easier to learn) in a few years once the Java compilers had matured and the</text>
<text top="237" left="81" width="498" height="14" font="3">performance approached the FORTRAN performance. The Java fans made several</text>
<text top="255" left="81" width="497" height="14" font="3">declarations in 1997 that Java with its just-in-time compiler would become faster</text>
<text top="273" left="81" width="39" height="14" font="3">than C</text>
<text top="270" left="120" width="280" height="19" font="10">CC and could become faster than FORTRAN.</text>
<text top="329" left="99" width="461" height="14" font="3">1995, the rise and fall of the Java dream as a language for HEP to replace</text>
<text top="347" left="99" width="292" height="14" font="3">FORTRAN, and one more rift in the community.</text>
<text top="401" left="99" width="480" height="14" font="3">As we will see later in the section about packages, a few systems were imple-</text>
<text top="419" left="81" width="498" height="14" font="3">mented in Java. However, we must recognise today that none of them succeeded</text>
<text top="437" left="81" width="497" height="14" font="3">despite the claims that Java was easier to learn, making implementations faster.</text>
<text top="455" left="81" width="498" height="14" font="3">The only successful system in our ﬁeld implemented in Java is the MonALISA</text>
<text top="473" left="81" width="50" height="14" font="3">system <a href="pdfxml.html#52">[</a></text>
<text top="473" left="131" width="15" height="14" font="9"><a href="pdfxml.html#52">32</a></text>
<text top="473" left="146" width="402" height="14" font="3"><a href="pdfxml.html#52">] </a>that takes advantage of the Web oriented features of the language.</text>
<text top="491" left="99" width="352" height="14" font="3">High Energy Physics software is now implemented in C</text>
<text top="488" left="451" width="128" height="19" font="10">CC, and because of</text>
<text top="509" left="81" width="288" height="14" font="3">inertia and the time to develop, it is likely that C</text>
<text top="506" left="368" width="210" height="19" font="10">CC will remain the main language</text>
<text top="527" left="81" width="497" height="14" font="3">in the coming two decades at least. In fact we are seeing several levels of use of</text>
<text top="545" left="81" width="10" height="14" font="3">C</text>
<text top="542" left="91" width="487" height="19" font="10">CC: FORTRAN-like “spaghetti code”, simple CCC with well designed classes</text>
<text top="563" left="81" width="339" height="14" font="3">with no abuse of inheritance, and more sophisticated C</text>
<text top="560" left="420" width="158" height="19" font="10">CC code using templates</text>
<text top="581" left="81" width="497" height="14" font="3">extensively. Most physicists will admit that the complexity of our codes today is</text>
<text top="599" left="81" width="303" height="14" font="3">higher than it used to be in the old FORTRAN era.</text>
<text top="617" left="99" width="278" height="14" font="3">Moving from the FORTRAN world to the C</text>
<text top="614" left="377" width="202" height="19" font="10">CC world took about ten years.</text>
<text top="635" left="81" width="497" height="14" font="3">Probably the LHC software could have been implemented in FORTRAN with less</text>
<text top="653" left="81" width="498" height="14" font="3">frustrations for the majority. However, I am convinced that this decision, taken about</text>
<text top="671" left="81" width="458" height="14" font="3">14 years ago, was a good one and not many people question this point today.</text>
<text top="689" left="99" width="24" height="14" font="3">If C</text>
<text top="686" left="123" width="456" height="19" font="10">CC has become the main stream language, it is not the only language. Perl</text>
<text top="707" left="81" width="498" height="14" font="3">has been used by several projects as a scripting language. Most systems requiring a</text>
<text top="725" left="81" width="498" height="14" font="3">scripting language tend to use Python these days. We will discuss the debate about</text>
<text top="743" left="81" width="230" height="14" font="3">scripting languages in another section.</text>
<text top="792" left="81" width="22" height="16" font="8"><b>1.4</b></text>
<text top="792" left="120" width="190" height="16" font="8"><b>CERN Program Library</b></text>
<text top="836" left="81" width="498" height="14" font="3">The need to collect standard utility routines, provide some documentation and</text>
<text top="854" left="81" width="498" height="14" font="3">distribute the source code and compiled libraries was already obvious in the early</text>
<text top="872" left="81" width="498" height="14" font="3">days of computing. During the 1960s a large collection of algorithms, typically one</text>
</page>
<page number="17" position="absolute" top="0" left="0" height="999" width="659">
<text top="55" left="81" width="6" height="12" font="4">1</text>
<text top="55" left="99" width="381" height="12" font="4">Technologies, Collaborations and Languages: 20 Years of HEP Computing</text>
<text top="55" left="566" width="13" height="12" font="4">17</text>
<text top="93" left="81" width="498" height="14" font="3">single FORTRAN subroutine for each algorithm, was accumulated and organised</text>
<text top="111" left="81" width="498" height="14" font="3">into chapters. The CERNLIB ofﬁce was created and employed a few mathemati-</text>
<text top="129" left="81" width="497" height="14" font="3">cians for about 20 years. The library manager was responsible for accepting new</text>
<text top="147" left="81" width="498" height="14" font="3">proposals, often helping providers to write portable code. The ofﬁce was a focal</text>
<text top="165" left="81" width="498" height="14" font="3">point answering not only questions about the library, but also any question about</text>
<text top="183" left="81" width="497" height="14" font="3">programming, FORTRAN or the use of computers. Due to the limitations in the ﬁrst</text>
<text top="201" left="81" width="498" height="14" font="3">versions of FORTRAN, many routines were written in assembler for the CDC 7600</text>
<text top="219" left="81" width="271" height="14" font="3">and later implemented in IBM assembler too.</text>
<text top="237" left="99" width="480" height="14" font="3">The library structure was quite simple for the most basic mathematical functions</text>
<text top="255" left="81" width="498" height="14" font="3">like computing integrals, linear algebra, least square ﬁts, Bessel functions or random</text>
<text top="273" left="81" width="498" height="14" font="3">number generators. Several chapters were speciﬁc to the computer environment, like</text>
<text top="291" left="81" width="497" height="14" font="3">access to tapes, job queues, printing or specialised graphics systems. CERNLIB was</text>
<text top="309" left="81" width="498" height="14" font="3">organised in 22 chapters, identiﬁed by one of the letters of the alphabet, and about</text>
<text top="327" left="81" width="498" height="14" font="3">1,100 entries where each entry was documented by a short write-up explaining the</text>
<text top="345" left="81" width="477" height="14" font="3">basic user interface and a long write-up explaining the algorithm in more detail.</text>
<text top="363" left="99" width="480" height="14" font="3">For many years the documentation was produced on a type-writer. Then in the</text>
<text top="381" left="81" width="497" height="14" font="3">early 1970s the ﬁrst computerised documentation system appeared: BARB, with</text>
<text top="399" left="81" width="498" height="14" font="3">input using only upper case letters, followed rapidly by BARBascii with the full</text>
<text top="417" left="81" width="497" height="14" font="3">character set. When the IBM machine was introduced, the documentation was</text>
<text top="435" left="81" width="498" height="14" font="3">moved to an IBM speciﬁc format DOC. Write-ups were automatically generated</text>
<text top="453" left="81" width="498" height="14" font="3">from the documentation database and accessible directly from an on-line help</text>
<text top="471" left="81" width="498" height="14" font="3">system called FIND. The FIND system, developed for the IBM, was extended</text>
<text top="489" left="81" width="497" height="14" font="3">to XFIND to access documentation ﬁles stored on other machines. XFIND was</text>
<text top="507" left="81" width="498" height="14" font="3">complemented by XWHO to ﬁnd people, ofﬁces, phone numbers, email addresses,</text>
<text top="525" left="81" width="498" height="14" font="3">etc. In 1990, XFIND developed by Bernd Pollerman was very successful. Other</text>
<text top="543" left="81" width="497" height="14" font="3">projects were ﬂourishing at CERN to organise or access documents, e.g. in the</text>
<text top="561" left="81" width="439" height="14" font="3">CERN central library to access pre-prints or published papers in journals.</text>
<text top="617" left="99" width="461" height="14" font="3">The various CERN documentation systems and the birth of the World Wide</text>
<text top="635" left="99" width="324" height="14" font="3">Web. Radical innovation versus gradual improvement.</text>
<text top="689" left="99" width="480" height="14" font="3">Because Tim Berners Lee (see Chap. 2) had suggested a more general approach,</text>
<text top="707" left="81" width="498" height="14" font="3">he had moved to the computing division in the same section as Bernd with the</text>
<text top="725" left="81" width="497" height="14" font="3">idea that a super XFIND system could be produced. While Bernd was proposing a</text>
<text top="743" left="81" width="498" height="14" font="3">centralised system with a database keeping trace of all registered documents, Tim,</text>
<text top="761" left="81" width="498" height="14" font="3">who was familiar in his previous job with remote procedure calls to communicate</text>
<text top="779" left="81" width="498" height="14" font="3">between computers, proposed a more decentralised and scalable approach. However,</text>
<text top="797" left="81" width="498" height="14" font="3">Tim’s approach required a standardisation process so that a documentation server</text>
<text top="815" left="81" width="498" height="14" font="3">could process the requests from clients. He was aware of all the standardisation</text>
<text top="833" left="81" width="498" height="14" font="3">processes going on in the U.S. (e.g. the Gopher project) and he was extremely</text>
<text top="851" left="81" width="498" height="14" font="3">active in this area, participating in several conferences and workshops. The fact</text>
<text top="869" left="81" width="498" height="14" font="3">that Tim was spending a lot of time in this attempt to standardise communications</text>
</page>
<page number="18" position="absolute" top="0" left="0" height="999" width="659">
<text top="55" left="81" width="13" height="12" font="4">18</text>
<text top="55" left="538" width="40" height="12" font="4">R. Brun</text>
<text top="93" left="81" width="497" height="14" font="3">was highly criticised. XFIND extensions were seen to have higher priority and to</text>
<text top="111" left="81" width="498" height="14" font="3">be more useful to the community. As a result, Tim’s efforts were not encouraged by</text>
<text top="129" left="81" width="498" height="14" font="3">CERN in general. He wrote a proposal in a memorandum explaining his ideas about</text>
<text top="147" left="81" width="498" height="14" font="3">a World-Wide-Web. Tim and Bernd were moved to the Application Software group</text>
<text top="165" left="81" width="498" height="14" font="3">in 1991. Tim had already developed a document server on his NexT workstation and</text>
<text top="183" left="81" width="497" height="14" font="3">a nice client using Display Postscript. Chapter 2 is dedicated to the development of</text>
<text top="201" left="81" width="128" height="14" font="3">the World Wide Web.</text>
<text top="219" left="99" width="480" height="14" font="3">Looking a posteriori, Tim was right to target the development of a nice client</text>
<text top="237" left="81" width="497" height="14" font="3">on the NexT ﬁrst. However this machine was perceived as being exotic and the</text>
<text top="255" left="81" width="498" height="14" font="3">work not very useful for the vast majority of users who were using either very</text>
<text top="273" left="81" width="498" height="14" font="3">cheap alphanumeric terminals (Falcos) or workstations running X11 graphics. A</text>
<text top="291" left="81" width="497" height="14" font="3">young technical student Nicola Pellow implemented an alphanumeric client to</text>
<text top="309" left="81" width="498" height="14" font="3">access the very few documents available on Tim’s server machine. The quality</text>
<text top="327" left="81" width="498" height="14" font="3">of this ﬁrst “web client” was not competitive with the full screen alphanumeric</text>
<text top="345" left="81" width="498" height="14" font="3">interface familiar to most people using the IBM machines. This generated even</text>
<text top="363" left="81" width="498" height="14" font="3">more criticism. A few of us tried to convince Tim to implement an X11 interface</text>
<text top="381" left="81" width="498" height="14" font="3">(maybe using the MOTIF graphical widget library). Because Tim did not have</text>
<text top="399" left="81" width="498" height="14" font="3">enough experience with X11 and MOTIF, he thought that this would be far too much</text>
<text top="417" left="81" width="498" height="14" font="3">work. Instead he concentrated his work on improvements on the server side and</text>
<text top="435" left="81" width="498" height="14" font="3">some improvements to the line mode interface. When the ﬁrst X11/MOTIF based</text>
<text top="453" left="81" width="106" height="14" font="3">client MOSAIC <a href="pdfxml.html#51">[</a></text>
<text top="453" left="187" width="7" height="14" font="9"><a href="pdfxml.html#51">2</a></text>
<text top="453" left="194" width="384" height="14" font="3">] was announced in early 1993, the Web became a tremendous</text>
<text top="471" left="81" width="497" height="14" font="3">success. This client had been written by Marc Andreessen from the National Centre</text>
<text top="489" left="81" width="498" height="14" font="3">for Supercomputing Applications (NCSA) and it was free for internal use by</text>
<text top="507" left="81" width="497" height="14" font="3">any organisation. Meanwhile the Web had been the main attraction at the CHEP</text>
<text top="525" left="81" width="416" height="14" font="3">conference in September 1992 in Annecy and what follows is history.</text>
<text top="589" left="81" width="23" height="16" font="8"><b>1.5</b></text>
<text top="589" left="120" width="212" height="16" font="8"><b>Code Management Systems</b></text>
<text top="633" left="81" width="498" height="14" font="3">Code Management systems have always been among the most debatable subjects.</text>
<text top="651" left="81" width="498" height="14" font="3">They have always been necessary, but none of them has been fully satisfactory.</text>
<text top="669" left="81" width="498" height="14" font="3">Simple projects require simple solutions, while large collaborations have to organise</text>
<text top="687" left="81" width="344" height="14" font="3">millions of lines of code and describe their dependencies.</text>
<text top="705" left="99" width="480" height="14" font="3">In the early 1970s, Julius Zoll’s PATCHY was the ﬁrst system developed to</text>
<text top="723" left="81" width="498" height="14" font="3">support the development and the maintenance of the large programmes written for</text>
<text top="741" left="81" width="498" height="14" font="3">the Bubble Chamber experiments. A project was organised in “Patches” and each</text>
<text top="759" left="81" width="498" height="14" font="3">Patch in “Decks”. A Deck was typically a FORTRAN subroutine. A “Sequence”</text>
<text top="777" left="81" width="498" height="14" font="3">directive was used in the same way that we use an “include” statement today.</text>
<text top="795" left="81" width="497" height="14" font="3">Conditional code was possible with “IF” “ELSEIF” directives. The input ﬁle</text>
<text top="814" left="81" width="117" height="12" font="13">myproject.car</text>
<text top="813" left="202" width="129" height="14" font="3">in readable format or</text>
<text top="814" left="336" width="117" height="12" font="13">myproject.pam</text>
<text top="813" left="458" width="121" height="14" font="3">(Patchy Master ﬁle)</text>
<text top="831" left="81" width="497" height="14" font="3">in binary and more compact formats could be processed by utilities like Ypatchy to</text>
<text top="849" left="81" width="51" height="14" font="3">generate</text>
<text top="850" left="135" width="99" height="12" font="13">myproject.F</text>
<text top="849" left="237" width="342" height="14" font="3">as input for the compiler and linker producing the archive</text>
<text top="867" left="81" width="40" height="14" font="3">library</text>
<text top="868" left="124" width="99" height="12" font="13">myproject.a</text>
<text top="867" left="223" width="356" height="14" font="3">. Once the version of a project was released, individual users</text>
<text top="885" left="81" width="497" height="14" font="3">could apply a patch containing bug ﬁxes or new code. The patch was applied to</text>
</page>
<page number="19" position="absolute" top="0" left="0" height="999" width="659">
<text top="55" left="81" width="6" height="12" font="4">1</text>
<text top="55" left="99" width="381" height="12" font="4">Technologies, Collaborations and Languages: 20 Years of HEP Computing</text>
<text top="55" left="566" width="13" height="12" font="4">19</text>
<text top="93" left="81" width="497" height="14" font="3">the original released version and the corresponding object ﬁles produced would be</text>
<text top="111" left="81" width="498" height="14" font="3">loaded before the old versions in the archive ﬁle. This system proved to be very</text>
<text top="129" left="81" width="498" height="14" font="3">efﬁcient and robust when working in batch mode. The system was less user-friendly</text>
<text top="147" left="81" width="498" height="14" font="3">for developers. They preferred to edit a complete deck in their favourite editor rather</text>
<text top="165" left="81" width="128" height="14" font="3">than to apply a patch.</text>
<text top="221" left="99" width="316" height="14" font="3">Code Management Systems: one size does not ﬁt all.</text>
<text top="275" left="99" width="480" height="14" font="3">On CDC machines, the UPDATE system was somehow simpler to use than</text>
<text top="293" left="81" width="498" height="14" font="3">PATCHY but restricted to CDC architecture. CERNLIB was maintained for several</text>
<text top="311" left="81" width="411" height="14" font="3">years with UPDATE (the librarian at the time did not like PATCHY).</text>
<text top="329" left="99" width="70" height="14" font="3">The CMZ <a href="pdfxml.html#51">[</a></text>
<text top="329" left="169" width="15" height="14" font="9"><a href="pdfxml.html#51">17</a></text>
<text top="329" left="184" width="395" height="14" font="3"><a href="pdfxml.html#51">] </a>system developed in the late 1980s was a PATCHY compatible</text>
<text top="347" left="81" width="497" height="14" font="3">system and offered a simpler and better interface when working with editors. The</text>
<text top="365" left="81" width="498" height="14" font="3">system was developed by a commercial company CodeME but was freely available</text>
<text top="383" left="81" width="497" height="14" font="3">to the HEP community. With CMZ (like with PATCHY) one could select any old</text>
<text top="401" left="81" width="309" height="14" font="3">version or generate the delta ﬁles between versions.</text>
<text top="419" left="99" width="480" height="14" font="3">The ﬁrst requirement when porting code to a new system was to port PATCHY</text>
<text top="437" left="81" width="497" height="14" font="3">ﬁrst. PATCHY itself depended on a very small subset of CERNLIB distributed with</text>
<text top="455" left="81" width="497" height="14" font="3">PATCHY such that the installation of PATCHY was not dependent on CERNLIB</text>
<text top="473" left="81" width="34" height="14" font="3">itself.</text>
<text top="491" left="99" width="234" height="14" font="3">With the move from FORTRAN to C</text>
<text top="488" left="332" width="246" height="19" font="10">CC, PATCHY or CMZ were no longer</text>
<text top="509" left="81" width="498" height="14" font="3">required, as some of their functionality was available with the CPP (C pre processor)</text>
<text top="527" left="81" width="241" height="14" font="3">and associated Makeﬁles. The CVS <a href="pdfxml.html#52">[</a></text>
<text top="527" left="322" width="15" height="14" font="9"><a href="pdfxml.html#52">67</a></text>
<text top="527" left="337" width="242" height="14" font="3"><a href="pdfxml.html#52">] </a>system became the standard tool to</text>
<text top="545" left="81" width="498" height="14" font="3">manage large projects in a distributed environment. A central software repository</text>
<text top="563" left="81" width="497" height="14" font="3">is accessible via the network. Users on different sites can check-in new code or</text>
<text top="581" left="81" width="497" height="14" font="3">update existing code in a simple and reliable way. It is easy to check-out a speciﬁc</text>
<text top="599" left="81" width="410" height="14" font="3">version of the code or see the differences between different versions.</text>
<text top="617" left="99" width="480" height="14" font="3">Large packages like GEANT 4, ROOT were developed with CVS and Makeﬁles</text>
<text top="635" left="81" width="238" height="14" font="3">only. The SubVersioN system (SVN) <a href="pdfxml.html#52">[</a></text>
<text top="635" left="319" width="15" height="14" font="9"><a href="pdfxml.html#52">48</a></text>
<text top="635" left="334" width="245" height="14" font="3"><a href="pdfxml.html#52">] </a>is a more modern version of CVS. It</text>
<text top="653" left="81" width="498" height="14" font="3">offers many advantages compared to CVS. In particular, it is easy to move or rename</text>
<text top="671" left="81" width="498" height="14" font="3">ﬁles without losing the history. The development of the ROOT system moved from</text>
<text top="689" left="81" width="498" height="14" font="3">CVS to SVN in a transparent way during 2007. This is also the case of the most</text>
<text top="707" left="81" width="258" height="14" font="3">popular Open Source projects in the world.</text>
<text top="725" left="99" width="480" height="14" font="3">However some of the big collaborations felt the need to develop special tools like</text>
<text top="743" left="81" width="61" height="14" font="3">SCRAM <a href="pdfxml.html#53">[</a></text>
<text top="743" left="142" width="15" height="14" font="9"><a href="pdfxml.html#53">85</a></text>
<text top="743" left="157" width="104" height="14" font="3"><a href="pdfxml.html#53">] </a>(used by CMS <a href="pdfxml.html#52">[</a></text>
<text top="743" left="261" width="15" height="14" font="9"><a href="pdfxml.html#52">29</a></text>
<text top="743" left="276" width="71" height="14" font="3">]) or CMT <a href="pdfxml.html#52">[</a></text>
<text top="743" left="348" width="15" height="14" font="9"><a href="pdfxml.html#52">58</a></text>
<text top="743" left="363" width="181" height="14" font="3"><a href="pdfxml.html#52">] </a>used by ATLAS and LHCb <a href="pdfxml.html#52">[</a></text>
<text top="743" left="544" width="15" height="14" font="9"><a href="pdfxml.html#52">38</a></text>
<text top="743" left="559" width="20" height="14" font="3"><a href="pdfxml.html#52">] </a>at</text>
<text top="761" left="81" width="115" height="14" font="3">CERN or FERMI <a href="pdfxml.html#52">[</a></text>
<text top="761" left="196" width="15" height="14" font="9"><a href="pdfxml.html#52">61</a></text>
<text top="761" left="211" width="368" height="14" font="3"><a href="pdfxml.html#52">] </a>at SLAC. SCRAM and CMT can use CVS or SVN for their</text>
<text top="779" left="81" width="497" height="14" font="3">software repository; they were developed essentially to manage the huge number of</text>
<text top="797" left="81" width="498" height="14" font="3">dependencies in their software. These systems are seen as essential by the software</text>
<text top="815" left="81" width="497" height="14" font="3">managers, but disliked by users. The FERMI collaboration at SLAC decided to</text>
<text top="833" left="81" width="220" height="14" font="3">discontinue the use of CMT in 2009.</text>
</page>
<page number="20" position="absolute" top="0" left="0" height="999" width="659">
<text top="55" left="81" width="13" height="12" font="4">20</text>
<text top="55" left="538" width="40" height="12" font="4">R. Brun</text>
<text top="93" left="81" width="22" height="16" font="8"><b>1.6</b></text>
<text top="93" left="120" width="253" height="16" font="8"><b>Data Structures and I/O Systems</b></text>
<text top="137" left="81" width="498" height="14" font="3">As FORTRAN did not support derived data types, nor dynamic memory allocation,</text>
<text top="155" left="81" width="498" height="14" font="3">special packages initially called “memory managers”, then “data structure man-</text>
<text top="173" left="81" width="474" height="14" font="3">agers” were developed starting in 1973. The ﬁrst of these packages, HYDRA <a href="pdfxml.html#53">[</a></text>
<text top="173" left="555" width="15" height="14" font="9"><a href="pdfxml.html#53">86</a></text>
<text top="173" left="570" width="9" height="14" font="3"><a href="pdfxml.html#53">],</a></text>
<text top="191" left="81" width="497" height="14" font="3">was developed for the analysis of Bubble Chamber pictures. The package was</text>
<text top="209" left="81" width="498" height="14" font="3">quite powerful, but complex. A static FORTRAN ﬂoating point array with a ﬁxed</text>
<text top="227" left="81" width="247" height="14" font="3">dimension was created by the user, say</text>
<text top="228" left="334" width="81" height="12" font="13">Q(MAXDIM)</text>
<text top="227" left="415" width="163" height="14" font="3">. Two other integer arrays</text>
<text top="246" left="81" width="90" height="12" font="13">IQ(MAXDIM)</text>
<text top="245" left="174" width="22" height="14" font="3">and</text>
<text top="246" left="200" width="90" height="12" font="13">LQ(MAXDIM)</text>
<text top="245" left="294" width="199" height="14" font="3">were equivalenced with the array</text>
<text top="246" left="496" width="9" height="12" font="13">Q</text>
<text top="245" left="505" width="73" height="14" font="3">. To create a</text>
<text top="263" left="81" width="498" height="14" font="3">dynamic structure (a bank) containing 2 integers, 10 ﬂoating points and 5 pointers,</text>
<text top="281" left="81" width="85" height="14" font="3">one had to do:</text>
<text top="309" left="99" width="261" height="12" font="13">call mqlink(q,lstruct,12,5,3)</text>
<text top="336" left="99" width="63" height="12" font="13">lstruct</text>
<text top="335" left="170" width="408" height="14" font="3">was returned by the routine and pointed inside the big array</text>
<text top="353" left="81" width="5" height="14" font="3">(</text>
<text top="354" left="86" width="36" height="12" font="13">Q/IQ</text>
<text top="353" left="122" width="456" height="14" font="3">) to the dynamic structure. To access the ﬁrst two integers, one had to</text>
<text top="371" left="81" width="15" height="14" font="3">do</text>
<text top="372" left="102" width="117" height="12" font="13">iq(lstruct+1)</text>
<text top="371" left="224" width="22" height="14" font="3">and</text>
<text top="372" left="251" width="117" height="12" font="13">iq(lstruct+2)</text>
<text top="371" left="368" width="210" height="14" font="3">. To access the ﬁrst ﬂoating point</text>
<text top="390" left="81" width="108" height="12" font="13">q(lstruct+3)</text>
<text top="389" left="189" width="70" height="14" font="3">. The bank</text>
<text top="390" left="266" width="63" height="12" font="13">lstruct</text>
<text top="389" left="335" width="243" height="14" font="3">could have structural pointers to other</text>
<text top="407" left="81" width="100" height="14" font="3">banks owned by</text>
<text top="408" left="186" width="63" height="12" font="13">lstruct</text>
<text top="407" left="253" width="253" height="14" font="3">or reference links to banks not owned by</text>
<text top="408" left="512" width="63" height="12" font="13">lstruct</text>
<text top="407" left="575" width="4" height="14" font="3">.</text>
<text top="425" left="81" width="498" height="14" font="3">In the example above, a bank was created with ﬁve links in total, of which</text>
<text top="443" left="81" width="498" height="14" font="3">three are structural links. To access the ﬁrst structural pointer, one used to do</text>
<text top="462" left="81" width="117" height="12" font="13">lq(lstruct-1)</text>
<text top="461" left="206" width="243" height="14" font="3">and to access the ﬁrst reference link</text>
<text top="462" left="458" width="117" height="12" font="13">lq(lstruct-4)</text>
<text top="461" left="575" width="4" height="14" font="3">.</text>
<text top="479" left="81" width="498" height="14" font="3">Of course, the code written in this way was quite difﬁcult to read. Several</text>
<text top="497" left="81" width="497" height="14" font="3">pre-processors to HYDRA were developed such that the code written was easier</text>
<text top="515" left="81" width="498" height="14" font="3">to read and to maintain. These pre-processors were coupled with the bank</text>
<text top="533" left="81" width="498" height="14" font="3">documentation system and took advantage of the FORTRAN PARAMETER type.</text>
<text top="551" left="81" width="285" height="14" font="3">For example, it was frequent to ﬁnd code like</text>
<text top="552" left="371" width="117" height="12" font="13">Q(ltrack+kPx)</text>
<text top="551" left="493" width="86" height="14" font="3">to address the</text>
<text top="569" left="81" width="498" height="14" font="3">element at the constant address kPx in the struct/bank ltrack. In C the above example</text>
<text top="587" left="81" width="126" height="14" font="3">would be declared as</text>
<text top="615" left="99" width="72" height="12" font="13">struct {</text>
<text top="633" left="99" width="126" height="12" font="13">integer i1,i2;</text>
<text top="651" left="99" width="171" height="12" font="13">float px,py,pz,...;</text>
<text top="669" left="99" width="179" height="14" font="13">Track *t1, *t2, *t3;</text>
<text top="687" left="99" width="144" height="14" font="13">Vertex *v1, *v2;</text>
<text top="705" left="99" width="72" height="12" font="13">} Track;</text>
<text top="731" left="81" width="79" height="14" font="3">and used like</text>
<text top="757" left="99" width="341" height="14" font="13">Track t; // or Track *t = new Track();</text>
<text top="775" left="99" width="81" height="12" font="13">t.i1= ..;</text>
<text top="793" left="99" width="72" height="12" font="13">t.i2=..;</text>
<text top="811" left="99" width="90" height="12" font="13">t.px = ..;</text>
<text top="829" left="99" width="171" height="12" font="13">t.t1 = new Track();</text>
<text top="853" left="99" width="480" height="14" font="3">HYDRA also had an I/O sub-system to write and read a complete data structure</text>
<text top="871" left="81" width="498" height="14" font="3">to a ﬁle in a machine independent format. We will discuss this important feature</text>
<text top="889" left="81" width="29" height="14" font="3">later.</text>
</page>
<page number="21" position="absolute" top="0" left="0" height="999" width="659">
<text top="55" left="81" width="6" height="12" font="4">1</text>
<text top="55" left="99" width="381" height="12" font="4">Technologies, Collaborations and Languages: 20 Years of HEP Computing</text>
<text top="55" left="566" width="13" height="12" font="4">21</text>
<text top="93" left="99" width="116" height="14" font="3">In 1974, ZBOOK <a href="pdfxml.html#51">[</a></text>
<text top="93" left="215" width="15" height="14" font="9"><a href="pdfxml.html#51">18</a></text>
<text top="93" left="230" width="348" height="14" font="3"><a href="pdfxml.html#51">], </a>an alternative to HYDRA, was developed in the CERN</text>
<text top="111" left="81" width="497" height="14" font="3">Data Division. ZBOOK was much simpler to use than HYDRA. While in HYDRA</text>
<text top="129" left="81" width="498" height="14" font="3">only one single storage area was possible, with the store description in common</text>
<text top="147" left="81" width="498" height="14" font="3">blocks, in ZBOOK it was possible to have as many stores as necessary and the</text>
<text top="165" left="81" width="498" height="14" font="3">book-keeping of each store was part of the store itself. This feature was particularly</text>
<text top="183" left="81" width="498" height="14" font="3">interesting when multiple dynamic stores had to be created and managed separately</text>
<text top="201" left="81" width="497" height="14" font="3">by an application. It was, for instance, frequent to have a dynamic store for his-</text>
<text top="219" left="81" width="498" height="14" font="3">tograms, another one for the main structures of one physics event and another one</text>
<text top="237" left="81" width="497" height="14" font="3">to describe the detector geometry. ZBOOK also had its own I/O system including the</text>
<text top="255" left="81" width="497" height="14" font="3">possibility to support direct and random access to structures in a ﬁle. The ZBOOK</text>
<text top="273" left="81" width="498" height="14" font="3">system was gradually adopted by a growing number of experiments at the SPS and</text>
<text top="291" left="81" width="498" height="14" font="3">was used by the ﬁrst versions of the detector simulation system GEANT 1, 2 and 3.</text>
<text top="309" left="81" width="306" height="14" font="3">More and more features were added over the years.</text>
<text top="327" left="99" width="480" height="14" font="3">In 1980, a similar system called BOS (Bank Organisation System) had been</text>
<text top="345" left="81" width="435" height="14" font="3">developed by Volker Bl¨obel at DESY. BOS was used by the PETRA <a href="pdfxml.html#52">[</a></text>
<text top="345" left="516" width="15" height="14" font="9"><a href="pdfxml.html#52">42</a></text>
<text top="345" left="530" width="48" height="14" font="3"><a href="pdfxml.html#52">] </a>exper-</text>
<text top="363" left="81" width="477" height="14" font="3">iments at DESY and some interest for BOS appeared in the LEP ALEPH <a href="pdfxml.html#52">[</a></text>
<text top="363" left="558" width="15" height="14" font="9"><a href="pdfxml.html#52">25</a></text>
<text top="363" left="573" width="5" height="14" font="3">]</text>
<text top="381" left="81" width="120" height="14" font="3">experiment in 1982.</text>
<text top="399" left="99" width="194" height="14" font="3">In 1983 (as we will see in Sect.</text>
<text top="399" left="295" width="19" height="14" font="9"><a href="pdfxml.html#24">1.7</a></text>
<text top="399" left="314" width="264" height="14" font="3"><a href="pdfxml.html#24">) </a>the GEANT 3 system had been used very</text>
<text top="417" left="81" width="265" height="14" font="3">successfully to simulate the OPAL and L3 <a href="pdfxml.html#52">[</a></text>
<text top="417" left="345" width="15" height="14" font="9"><a href="pdfxml.html#52">33</a></text>
<text top="417" left="360" width="218" height="14" font="3"><a href="pdfxml.html#52">] </a>detectors at LEP. Because ALEPH</text>
<text top="435" left="81" width="498" height="14" font="3">also intended to use GEANT 3, the director for computing, Ian Butterworth, decided</text>
<text top="453" left="81" width="497" height="14" font="3">in 1983 that only the ZBOOK system would be supported at CERN and that</text>
<text top="471" left="81" width="498" height="14" font="3">the development of HYDRA was frozen. Being the main developer of ZBOOK,</text>
<text top="489" left="81" width="497" height="14" font="3">I was strongly congratulated by my boss and other group members. To explain the</text>
<text top="507" left="81" width="498" height="14" font="3">situation, it is important to say that the Data Division (DD) and the Nuclear Physics</text>
<text top="525" left="81" width="498" height="14" font="3">(NP) Division where HYDRA was developed had two rival software groups for</text>
<text top="543" left="81" width="497" height="14" font="3">many years. Ian Butterworth’s decision was seen as a victory of DD against NP. His</text>
<text top="561" left="81" width="498" height="14" font="3">decision could have been the inverse, given the fact that the HYDRA system had</text>
<text top="579" left="81" width="497" height="14" font="3">more features than ZBOOK and more senior people supporting it. I considered this</text>
<text top="597" left="81" width="498" height="14" font="3">decision as a profound injustice for Julius Zoll, the main developer of HYDRA (and</text>
<text top="615" left="81" width="236" height="14" font="3">many other systems too like PATCHY).</text>
<text top="633" left="99" width="480" height="14" font="3">The very same day that the decision in favour of ZBOOK was taken, and</text>
<text top="651" left="81" width="498" height="14" font="3">following the congratulations of my colleagues, I was kindly invited to a meeting</text>
<text top="669" left="81" width="498" height="14" font="3">by some people (Francis Bruyant, Martin Pohl and Harvey Newman) from the L3</text>
<text top="687" left="81" width="498" height="14" font="3">collaboration. They all accepted Butterworth’s decision, but were still hoping that</text>
<text top="705" left="81" width="498" height="14" font="3">some features from HYDRA could be incorporated inside ZBOOK. We all met with</text>
<text top="723" left="81" width="498" height="14" font="3">Julius Zoll late in the afternoon and came to an agreement to develop in common a</text>
<text top="741" left="81" width="497" height="14" font="3">new package that we named ZEBRA (combination of ZBOOK and HYDRA). We</text>
<text top="759" left="81" width="498" height="14" font="3">agreed on most speciﬁcations of ZEBRA and the day after we proudly announced</text>
<text top="777" left="81" width="498" height="14" font="3">our alliance to the great surprise of most of my supporters. Julius and I were</text>
<text top="795" left="81" width="498" height="14" font="3">immediately called to Ian Butterworth’s ofﬁce to give more explanations. Julius</text>
<text top="813" left="81" width="498" height="14" font="3">had made a quick estimate that merging the two systems should not take more than</text>
<text top="831" left="81" width="498" height="14" font="3">one month. The message from Ian could not have been more clear: “If in 3 months,</text>
<text top="849" left="81" width="497" height="14" font="3">the ZEBRA system was not functioning, we were both ﬁred from CERN”. As it is</text>
<text top="867" left="81" width="498" height="14" font="3">well known that in the software area, one can always claim that something is ready</text>
<text top="885" left="81" width="497" height="14" font="3">on time, we were proud to show a running ZEBRA system less than 2 months later.</text>
</page>
<page number="22" position="absolute" top="0" left="0" height="999" width="659">
<text top="55" left="81" width="13" height="12" font="4">22</text>
<text top="55" left="538" width="40" height="12" font="4">R. Brun</text>
<text top="93" left="81" width="498" height="14" font="3">In addition, GEANT 3 had been fully converted from ZBOOK to ZEBRA. This</text>
<text top="111" left="81" width="389" height="14" font="3">seemed like a convincing argument to OPAL, L3 and DELPHI <a href="pdfxml.html#52">[</a></text>
<text top="111" left="469" width="15" height="14" font="9"><a href="pdfxml.html#52">30</a></text>
<text top="111" left="484" width="95" height="14" font="3"><a href="pdfxml.html#52">] </a>collaborations</text>
<text top="129" left="81" width="497" height="14" font="3">who decided to base their framework on ZEBRA immediately. However, the</text>
<text top="147" left="81" width="497" height="14" font="3">ALEPH collaboration (many people there did not like HYDRA at all) decided to</text>
<text top="165" left="81" width="418" height="14" font="3">use the BOS system instead, even when using the GEANT 3 package.</text>
<text top="183" left="99" width="480" height="14" font="3">The BOS system was further developed by Volker and an extension called YBOS</text>
<text top="201" left="81" width="208" height="14" font="3">used for many years by the CDF <a href="pdfxml.html#52">[</a></text>
<text top="201" left="289" width="15" height="14" font="9"><a href="pdfxml.html#52">50</a></text>
<text top="201" left="304" width="275" height="14" font="3">] collaboration at Fermi National Accelerator</text>
<text top="219" left="81" width="71" height="14" font="3">Laboratory.</text>
<text top="275" left="99" width="461" height="14" font="3">The ZEBRA memory management and I/O system set very high standards</text>
<text top="293" left="99" width="436" height="14" font="3">of functionality and efﬁciency, still competitive with the modern C</text>
<text top="289" left="535" width="25" height="19" font="10">CC</text>
<text top="311" left="99" width="75" height="14" font="3">frameworks.</text>
<text top="365" left="99" width="480" height="14" font="3">ZEBRA combined the features of ZBOOK and ZEBRA. The concept of multiple</text>
<text top="383" left="81" width="498" height="14" font="3">stores in ZBOOK was implemented in ZEBRA by having multiple dynamic</text>
<text top="401" left="81" width="497" height="14" font="3">divisions within the main store. We also imported from ZBOOK the possibility to</text>
<text top="419" left="81" width="498" height="14" font="3">expand or shrink dynamically the number of data words in a bank or the number</text>
<text top="437" left="81" width="498" height="14" font="3">of links. Users could deﬁne a link area in their private FORTRAN common blocks.</text>
<text top="455" left="81" width="498" height="14" font="3">These links were automatically updated whenever the bank was moved to a different</text>
<text top="473" left="81" width="498" height="14" font="3">position in the store or the link reset to zero when the bank was deleted. A garbage</text>
<text top="491" left="81" width="498" height="14" font="3">collection mechanism could be triggered automatically or forced by a call. Another</text>
<text top="509" left="81" width="498" height="14" font="3">interesting feature of the memory management system was to wipe all the banks</text>
<text top="527" left="81" width="498" height="14" font="3">in one division. For example it was common to wipe the “event division” when</text>
<text top="545" left="81" width="497" height="14" font="3">ﬁnishing the processing of an event. It was very hard to create memory leaks with</text>
<text top="563" left="81" width="278" height="14" font="3">ZEBRA. We are today badly missing in our C</text>
<text top="560" left="358" width="220" height="19" font="10">CC systems the concept of multiple</text>
<text top="581" left="81" width="278" height="14" font="3">heaps that made ZEBRA particularly efﬁcient.</text>
<text top="599" left="99" width="480" height="14" font="3">The memory manager was an important part of ZEBRA, but even more important</text>
<text top="617" left="81" width="497" height="14" font="3">was the input/output system writing and reading complex data structures to ﬁles</text>
<text top="635" left="81" width="498" height="14" font="3">(either in sequential or direct and random access formats). The ZEBRA sequential</text>
<text top="653" left="81" width="498" height="14" font="3">format has been extensively used to write large collections of events. The direct</text>
<text top="671" left="81" width="279" height="14" font="3">access package was the basis of the HBOOK <a href="pdfxml.html#51">[</a></text>
<text top="671" left="360" width="15" height="14" font="9"><a href="pdfxml.html#51">14</a></text>
<text top="671" left="375" width="203" height="14" font="3">] and PAW storage systems and is</text>
<text top="689" left="81" width="497" height="14" font="3">still in use today in many corners of the world. The debug and documentation system</text>
<text top="707" left="81" width="471" height="14" font="3">were interesting tools to graphically draw a complex data structure in memory.</text>
<text top="725" left="99" width="480" height="14" font="3">However, in 1993, it was clear that ZEBRA’s days were counted. We had to</text>
<text top="743" left="81" width="498" height="14" font="3">use the native constructs provided by all modern languages and at the same time</text>
<text top="761" left="81" width="498" height="14" font="3">preserve the nice capabilities of our data structure persistency tools. Following</text>
<text top="779" left="81" width="497" height="14" font="3">our failure to take advantage of FORTRAN 90 for ZEBRA, the ZOO proposal to</text>
<text top="797" left="81" width="498" height="14" font="3">develop our persistency system in the object-oriented world was presented in the</text>
<text top="815" left="81" width="498" height="14" font="3">spring 1994, but was judged not the direction to go at a time when many people</text>
<text top="833" left="81" width="486" height="14" font="3">were expecting object-oriented databases to dominate the world a few years later.</text>
</page>
<page number="23" position="absolute" top="0" left="0" height="999" width="659">
<text top="55" left="81" width="6" height="12" font="4">1</text>
<text top="55" left="99" width="381" height="12" font="4">Technologies, Collaborations and Languages: 20 Years of HEP Computing</text>
<text top="55" left="566" width="13" height="12" font="4">23</text>
<text top="113" left="99" width="461" height="14" font="3">The lost hope for Objectivity to become a one-stop-solution for all HEP needs</text>
<text top="131" left="99" width="304" height="14" font="3">in terms of data storage and memory management.</text>
<text top="185" left="99" width="480" height="14" font="3">You can read more about the experience with Object DataBase Management</text>
<text top="203" left="81" width="498" height="14" font="3">Systems (ODBMS) in Chap. 9. The years 1994 to 1998 were extremely confusing.</text>
<text top="221" left="81" width="498" height="14" font="3">The vast majority of users did not understand the implications of using an ODBMS.</text>
<text top="239" left="81" width="498" height="14" font="3">It was only in 1998, when the ﬁrst signs of problems appeared with the chosen</text>
<text top="257" left="81" width="384" height="14" font="3">implementation based on the commercial product Objectivity <a href="pdfxml.html#52">[</a></text>
<text top="257" left="465" width="15" height="14" font="9"><a href="pdfxml.html#52">68</a></text>
<text top="257" left="480" width="99" height="14" font="3"><a href="pdfxml.html#52">], </a>that more and</text>
<text top="275" left="81" width="498" height="14" font="3">more people started to question the direction taken by the RD45 project which</text>
<text top="293" left="81" width="498" height="14" font="3">proposed to use ODBMS systems for HEP data. We will come back to this point</text>
<text top="311" left="81" width="498" height="14" font="3">later when describing the history of the ROOT system. It is clear today that the</text>
<text top="329" left="81" width="498" height="14" font="3">choice of an ODBMS like Objectivity would have been a total disaster for storing</text>
<text top="347" left="81" width="74" height="14" font="3">HEP events:</text>
<text top="374" left="81" width="498" height="14" font="3">• Objectivity was directly mapping objects in memory to disk. We know today how</text>
<text top="392" left="98" width="480" height="14" font="3">important the support for transient data members in the I/O system is. Without</text>
<text top="410" left="98" width="480" height="14" font="3">this support, one would require a transient version of the class and a persistent</text>
<text top="428" left="98" width="480" height="14" font="3">version, making the class management rapidly non-scalable when the number of</text>
<text top="446" left="98" width="357" height="14" font="3">classes increased and when these classes evolved with time.</text>
<text top="464" left="81" width="498" height="14" font="3">• Class schema evolution was not supported without rebuilding the full database</text>
<text top="482" left="98" width="480" height="14" font="3">with the latest versions of all classes. In large experiments with thousands or tens</text>
<text top="500" left="98" width="480" height="14" font="3">of thousands of classes and databases in the PetaBytes range, this would have</text>
<text top="518" left="98" width="101" height="14" font="3">been impossible.</text>
<text top="536" left="81" width="498" height="14" font="3">• Storing data in a central database being accessed at the same time by thousands</text>
<text top="554" left="98" width="480" height="14" font="3">of programmes was impossible performance-wise. This effect was in fact rapidly</text>
<text top="572" left="98" width="116" height="14" font="3">seen by the BaBar <a href="pdfxml.html#52">[</a></text>
<text top="572" left="214" width="15" height="14" font="9"><a href="pdfxml.html#52">55</a></text>
<text top="572" left="229" width="349" height="14" font="3"><a href="pdfxml.html#52">] </a>collaboration at Stanford. A considerable effort was spent</text>
<text top="590" left="98" width="480" height="14" font="3">by this collaboration to get something running. However, it is unlikely that BaBar</text>
<text top="608" left="98" width="480" height="14" font="3">would have survived with Objectivity and the increasing database size. Most</text>
<text top="626" left="98" width="480" height="14" font="3">HEP data are write-once and read-many-times. There is no need to assume that</text>
<text top="644" left="98" width="414" height="14" font="3">somebody might be modifying your data set while you are reading it.</text>
<text top="662" left="81" width="498" height="14" font="3">• With the development of the Grid, a central database is now a central point</text>
<text top="680" left="98" width="481" height="14" font="3">of failure. If something goes wrong (for example a deadlock) all programmes</text>
<text top="698" left="98" width="480" height="14" font="3">are aborted or in a deadlock too. Network bandwidth and latency, despite the</text>
<text top="716" left="98" width="480" height="14" font="3">tremendous developments in this area, are not yet able to support a generalised</text>
<text top="734" left="98" width="480" height="14" font="3">scheme where readers on the wide area network can efﬁciently access a central</text>
<text top="752" left="98" width="480" height="14" font="3">database. Where ﬁle transfers are now optimised to copy large chunks of data</text>
<text top="770" left="98" width="480" height="14" font="3">(GigaBytes per transfer), we are still working on implementing the necessary</text>
<text top="788" left="98" width="457" height="14" font="3">tools to access data sets with a smaller granularity (GigaBytes or kiloBytes).</text>
<text top="806" left="81" width="498" height="14" font="3">• Many users prefer to develop their analysis software on their laptop, even when</text>
<text top="824" left="98" width="480" height="14" font="3">the laptop is not connected to a network. For code development, only small read-</text>
<text top="842" left="98" width="480" height="14" font="3">only data sets are required. This was one of the motivations pushing people to</text>
<text top="860" left="98" width="134" height="14" font="3">use the ROOT system.</text>
</page>
<page number="24" position="absolute" top="0" left="0" height="999" width="659">
<text top="55" left="81" width="13" height="12" font="4">24</text>
<text top="55" left="538" width="40" height="12" font="4">R. Brun</text>
<text top="93" left="81" width="22" height="16" font="8"><b>1.7</b></text>
<text top="93" left="120" width="155" height="16" font="8"><b>Detector Simulation</b></text>
<text top="137" left="81" width="498" height="14" font="3">For many years, the design of a new detector was based on the experience acquired</text>
<text top="155" left="81" width="498" height="14" font="3">with the previous generation of detectors and a new design was tested on special</text>
<text top="173" left="81" width="498" height="14" font="3">test beams in the accelerators. However in the mid 1970s, the complexity of the</text>
<text top="191" left="81" width="498" height="14" font="3">new detectors was such that it was increasingly hard to predict the behaviour when</text>
<text top="209" left="81" width="498" height="14" font="3">the ﬁnal system was installed. Detector simulation tools had been available for</text>
<text top="227" left="81" width="498" height="14" font="3">many years, but mainly to understand and tune some simple calorimeters. The EGS</text>
<text top="245" left="81" width="177" height="14" font="3">(Electron Gamma Showers) <a href="pdfxml.html#52">[</a></text>
<text top="245" left="258" width="15" height="14" font="9"><a href="pdfxml.html#52">60</a></text>
<text top="245" left="273" width="305" height="14" font="3">] programme had been designed at SLAC and was</text>
<text top="263" left="81" width="498" height="14" font="3">the de-facto standard for electromagnetic calorimetry. Some ad hoc programmes</text>
<text top="281" left="81" width="498" height="14" font="3">were available for hadronic calorimetry like the Alan Grant system or TATINA</text>
<text top="299" left="81" width="445" height="14" font="3">from Toni Baroncelli. Transporting neutrons was the speciality of MCNP <a href="pdfxml.html#52">[</a></text>
<text top="299" left="526" width="15" height="14" font="9"><a href="pdfxml.html#52">66</a></text>
<text top="299" left="541" width="38" height="14" font="3"><a href="pdfxml.html#52">] </a>from</text>
<text top="317" left="81" width="497" height="14" font="3">Oak-Ridge in Tennessee. However, these programmes were either very specialised</text>
<text top="335" left="81" width="498" height="14" font="3">or missing a very important component, a geometry package. When using the EGS</text>
<text top="353" left="81" width="498" height="14" font="3">package for instance, one had to implement two routines answering the questions,</text>
<text top="371" left="81" width="401" height="14" font="14"><i>Where Am I? </i>and <i>Where Am I Going? </i>Given a particle position</text>
<text top="372" left="488" width="63" height="12" font="13">x, y, z</text>
<text top="371" left="557" width="22" height="14" font="3">and</text>
<text top="389" left="81" width="498" height="14" font="3">its direction, the user had the difﬁcult task of implementing these two functions:</text>
<text top="407" left="81" width="497" height="14" font="3">not too complex when transporting particles only in a few hundred detectors, but</text>
<text top="425" left="81" width="498" height="14" font="3">becoming much more difﬁcult and error prone when simulating detectors with many</text>
<text top="443" left="81" width="498" height="14" font="3">thousands, or millions of components. None of the existing programmes produced</text>
<text top="461" left="81" width="375" height="14" font="3">graphical results and no general simulation framework existed.</text>
<text top="517" left="99" width="461" height="14" font="3">Geometrical modelling is an essential component of a HEP simulation</text>
<text top="535" left="99" width="73" height="14" font="3">programme.</text>
<text top="589" left="99" width="480" height="14" font="3">In 1976 a combined effort (by the NA3, NA4 and Omega experiments) to imple-</text>
<text top="607" left="81" width="498" height="14" font="3">ment a very simple simulation framework was successful. The product was named</text>
<text top="625" left="81" width="498" height="14" font="3">GENEVE (for GENeration of EVEnts), but several other products had already a</text>
<text top="643" left="81" width="497" height="14" font="3">similar name. Jean-Claude Lassalle suggested the name GEANT (Generation of</text>
<text top="661" left="81" width="498" height="14" font="3">Events ANd Tracks) and soon we were releasing the GEANT version 2 using</text>
<text top="679" left="81" width="498" height="14" font="3">the newly developed ZBOOK system. GEANT 2 had been adopted by a growing</text>
<text top="697" left="81" width="498" height="14" font="3">number of experiments. Working in the deep inelastic muon scattering experiment</text>
<text top="715" left="81" width="498" height="14" font="3">NA4 led by Carlo Rubbia, I was in charge of the simulation and reconstruction</text>
<text top="733" left="81" width="498" height="14" font="3">software and spending a substantial fraction of my time in describing more and</text>
<text top="751" left="81" width="498" height="14" font="3">more complex geometries. I had also simulated new devices, in particular studying</text>
<text top="769" left="81" width="498" height="14" font="3">the resolution of a di-muon detector with thousands of components that turned out</text>
<text top="787" left="81" width="331" height="14" font="3">to be a large subset of the future UA1 detector where the</text>
<text top="784" left="415" width="11" height="19" font="10">Z</text>
<text top="782" left="427" width="5" height="14" font="11">0</text>
<text top="787" left="436" width="143" height="14" font="3">particle was discovered.</text>
<text top="805" left="81" width="498" height="14" font="3">I was supposed to follow Carlo Rubbia to UA1 in 1980, but the new NA4 spokesman</text>
<text top="823" left="81" width="497" height="14" font="3">was opposed to my transfer to UA1. In the fall of 1980, I was invited to join the</text>
<text top="841" left="81" width="498" height="14" font="3">brand new LEP experiment OPAL and in particular to implement a GEANT 2 based</text>
<text top="859" left="81" width="498" height="14" font="3">simulation for this new detector. For several months we had prototyped several ideas</text>
</page>
<page number="25" position="absolute" top="0" left="0" height="999" width="659">
<text top="55" left="81" width="6" height="12" font="4">1</text>
<text top="55" left="99" width="381" height="12" font="4">Technologies, Collaborations and Languages: 20 Years of HEP Computing</text>
<text top="55" left="566" width="13" height="12" font="4">25</text>
<text top="93" left="81" width="498" height="14" font="3">to automatise the description of large geometries and all of my colleagues reached</text>
<text top="111" left="81" width="308" height="14" font="3">the conclusion that this was an impossible exercise.</text>
<text top="167" left="99" width="461" height="14" font="3">The origin of GEANT 3, the worldwide standard for detector simulation for</text>
<text top="185" left="99" width="118" height="14" font="3">more than 20 years.</text>
<text top="239" left="99" width="480" height="14" font="3">It turned out that in OPAL I met Andy MacPherson who was working for</text>
<text top="257" left="81" width="498" height="14" font="3">Carleton University in Ottawa. Andy was extremely interested in investigating a</text>
<text top="275" left="81" width="498" height="14" font="3">more general solution to describe OPAL in an easy and scalable way. After one</text>
<text top="293" left="81" width="498" height="14" font="3">night of discussion and a bottle of Beaujolais, we had basically designed the main</text>
<text top="311" left="81" width="498" height="14" font="3">features of what later became the GEANT 3 geometry system. I designed the data</text>
<text top="329" left="81" width="498" height="14" font="3">structures and the Application Programming Interface (API) and Andy implemented</text>
<text top="347" left="81" width="498" height="14" font="3">the mathematical algorithms computing distances to boundaries. Less than one</text>
<text top="365" left="81" width="497" height="14" font="3">month later in early 1981, we had succeeded in modelling a large part of OPAL</text>
<text top="383" left="81" width="498" height="14" font="3">and this was recognised by the collaboration as a big success. Of course it took</text>
<text top="401" left="81" width="498" height="14" font="3">much more time to consolidate the GEANT 3 geometry system, but by 1983 most</text>
<text top="419" left="81" width="498" height="14" font="3">shapes were coded and meanwhile the L3 collaboration had successfully encoded</text>
<text top="437" left="81" width="498" height="14" font="3">their detector geometry with GEANT 3. Following this success with the geometry</text>
<text top="455" left="81" width="498" height="14" font="3">system, we started importing many of the algorithms from the EGS 4 (Electron</text>
<text top="473" left="81" width="497" height="14" font="3">Gamma Shower) system, thanks to Glen Patrick from OPAL, and later to Michel</text>
<text top="491" left="81" width="498" height="14" font="3">Maire and Laszlo Urban from L3. We implemented an interface with the hadronic</text>
<text top="509" left="81" width="498" height="14" font="3">shower package TATINA from Toni Baroncelli and in 1985 Federico Carminati</text>
<text top="527" left="81" width="249" height="14" font="3">made an interface with the GHEISHA <a href="pdfxml.html#51">[</a></text>
<text top="527" left="330" width="15" height="14" font="9"><a href="pdfxml.html#51">21</a></text>
<text top="527" left="345" width="234" height="14" font="3"><a href="pdfxml.html#51">] </a>hadronic shower package developed</text>
<text top="545" left="81" width="331" height="14" font="3">at PETRA by Harm Fesefeldt who was also joining L3.</text>
<text top="563" left="99" width="480" height="14" font="3">In 1983 we started the development of an interactive version of GEANT 3 with</text>
<text top="581" left="81" width="498" height="14" font="3">a graphics driver showing pictures of the detectors and showers. The user interface</text>
<text top="599" left="81" width="305" height="14" font="3">was based on a command line interface ZCEDEX <a href="pdfxml.html#51">[</a></text>
<text top="599" left="386" width="15" height="14" font="9"><a href="pdfxml.html#51">10</a></text>
<text top="599" left="401" width="178" height="14" font="3"><a href="pdfxml.html#51">] </a>and a graphics system based</text>
<text top="617" left="81" width="498" height="14" font="3">on the Apollo graphics package. Both systems were developed by Pietro Zanarini.</text>
<text top="635" left="81" width="497" height="14" font="3">When we started the development of the PAW system in 1985, ZCEDEX was</text>
<text top="653" left="81" width="420" height="14" font="3">upgraded to KUIP and the graphics system converted to the HIGZ <a href="pdfxml.html#51">[</a></text>
<text top="653" left="501" width="15" height="14" font="9"><a href="pdfxml.html#51">19</a></text>
<text top="653" left="515" width="63" height="14" font="3"><a href="pdfxml.html#51">] </a>package,</text>
<text top="671" left="81" width="154" height="14" font="3">another PAW component.</text>
<text top="689" left="99" width="480" height="14" font="3">In the coming years and until 1993, GEANT 3 saw many more developments.</text>
<text top="707" left="81" width="498" height="14" font="3">With Francis Bruyant we made several unsuccessful attempts to vectorise the geom-</text>
<text top="725" left="81" width="497" height="14" font="3">etry and tracking system. The overhead in creating vectors and the bookkeeping was</text>
<text top="743" left="81" width="498" height="14" font="3">surpassing the gains coming from vectorisation (both on Cray and IBM systems).</text>
<text top="761" left="81" width="498" height="14" font="3">I already mentioned the exercise by Jean Luc Dekeyser to implement the geometry</text>
<text top="779" left="81" width="498" height="14" font="3">package in ADA. In 1989, we implemented an interface with the hadronic package</text>
<text top="797" left="81" width="98" height="14" font="3">of the FLUKA <a href="pdfxml.html#51">[</a></text>
<text top="797" left="179" width="7" height="14" font="9"><a href="pdfxml.html#51">3</a></text>
<text top="797" left="186" width="4" height="14" font="3">,</text>
<text top="797" left="192" width="15" height="14" font="9"><a href="pdfxml.html#51">20</a></text>
<text top="797" left="207" width="371" height="14" font="3">] system. But the major work was in making the system more</text>
<text top="815" left="81" width="498" height="14" font="3">robust, implementing better physics algorithms for energy loss, multiple scattering,</text>
<text top="833" left="81" width="497" height="14" font="3">and tracking in non homogeneous magnetic ﬁelds. The development stopped in</text>
<text top="851" left="81" width="498" height="14" font="3">1993. However GEANT 3 has been used for the design of all LHC experiments and</text>
</page>
<page number="26" position="absolute" top="0" left="0" height="999" width="659">
<text top="55" left="81" width="13" height="12" font="4">26</text>
<text top="55" left="538" width="40" height="12" font="4">R. Brun</text>
<text top="93" left="81" width="498" height="14" font="3">is still used today by many experiments, in particular with the Virtual Monte-Carlo</text>
<text top="111" left="81" width="333" height="14" font="3">(VMC) system developed in 1997 by the LHC ALICE <a href="pdfxml.html#52">[</a></text>
<text top="111" left="414" width="15" height="14" font="9"><a href="pdfxml.html#52">26</a></text>
<text top="111" left="429" width="92" height="14" font="3">] collaboration.</text>
<text top="167" left="99" width="349" height="14" font="3">From GEANT 3 to GEANT 4, a still unﬁnished transition.</text>
<text top="221" left="99" width="480" height="14" font="3">In 1994, it was decided to start from scratch the development of a new system</text>
<text top="239" left="81" width="246" height="14" font="3">called GEANT 4, fully implemented in C</text>
<text top="236" left="327" width="251" height="19" font="10">CC. It took many years for the GEANT 4</text>
<text top="257" left="81" width="497" height="14" font="3">team to develop a system competing with the FORTRAN version of GEANT 3.</text>
<text top="275" left="81" width="497" height="14" font="3">Like most projects started in 1994, the team had to face the discovery of a new</text>
<text top="293" left="81" width="498" height="14" font="3">and immature language, move gradually to the Standard Template Library (STL)</text>
<text top="311" left="81" width="497" height="14" font="3">and upgrade year after year to the latest compiler generations. While GEANT 3</text>
<text top="329" left="81" width="498" height="14" font="3">including the ZEBRA system was around 400,000 lines of code, GEANT 4 grew</text>
<text top="347" left="81" width="217" height="14" font="3">to more than one million lines of C</text>
<text top="344" left="298" width="281" height="19" font="10">CC and more than 1,000 classes. The current</text>
<text top="365" left="81" width="498" height="14" font="3">implementation is still facing severe performance problems, being about three</text>
<text top="383" left="81" width="498" height="14" font="3">times slower than GEANT 3. Compared to GEANT 3 several physics packages</text>
<text top="401" left="81" width="497" height="14" font="3">were improved with the addition of new models, in particular in the area of</text>
<text top="419" left="81" width="498" height="14" font="3">hadronic showers. GEANT 4 has not yet reached the necessary maturity to become</text>
<text top="437" left="81" width="497" height="14" font="3">a prediction tool without having to tune many parameters, but the situation is</text>
<text top="455" left="81" width="498" height="14" font="3">improving gradually. There are still many areas to be improved in the system.</text>
<text top="473" left="81" width="498" height="14" font="3">The graphics system to generate nice detector pictures is still batch oriented. The</text>
<text top="491" left="81" width="497" height="14" font="3">interactive control is quite primitive offering a regression of the KUIP system as</text>
<text top="509" left="81" width="498" height="14" font="3">a command line interface or a primitive Python interface. There is no Graphical</text>
<text top="527" left="81" width="498" height="14" font="3">User Interface. The possibility to save and retrieve the geometry data structures</text>
<text top="545" left="81" width="498" height="14" font="3">was implemented only recently and it is up to the user to implement input/output</text>
<text top="563" left="81" width="498" height="14" font="3">of classes generated by the system. The GEANT 4 and ROOT teams being in the</text>
<text top="581" left="81" width="498" height="14" font="3">same group, there is some hope that a better integration between the two systems</text>
<text top="599" left="81" width="498" height="14" font="3">will happen in the not too distant future. This will offer GEANT 4 better graphics</text>
<text top="617" left="81" width="415" height="14" font="3">capabilities, a better user interface and an object persistency solution.</text>
<text top="673" left="99" width="461" height="14" font="3">The FLUKA system is the HEP standard for radio-protection and dose</text>
<text top="691" left="99" width="75" height="14" font="3">calculations.</text>
<text top="745" left="99" width="480" height="14" font="3">The FLUKA system, originally developed in the 1980s by a collaboration</text>
<text top="763" left="81" width="498" height="14" font="3">between the Italian INFN and the CERN radio-protection group, was greatly</text>
<text top="781" left="81" width="498" height="14" font="3">improved in the middle 1990s to include state of the art physics for everything</text>
<text top="799" left="81" width="498" height="14" font="3">concerning radiation and shielding calculations. The main developers Alfredo</text>
<text top="817" left="81" width="497" height="14" font="3">Ferrari and Paola Sala have received strong support from INFN in Italy and</text>
<text top="835" left="81" width="498" height="14" font="3">after years of ﬁghting with the GEANT 4 team, the two projects seem to evolve</text>
<text top="853" left="81" width="497" height="14" font="3">progressively with more cooperation. FLUKA is still implemented in FORTRAN</text>
<text top="871" left="81" width="498" height="14" font="3">and because FORTRAN is now a small niche market, it is becoming more and more</text>
</page>
<page number="27" position="absolute" top="0" left="0" height="999" width="659">
	<fontspec id="15" size="8" family="Times" color="#0000ff"/>
	<fontspec id="16" size="6" family="Times" color="#131413"/>
<text top="55" left="81" width="6" height="12" font="4">1</text>
<text top="55" left="99" width="381" height="12" font="4">Technologies, Collaborations and Languages: 20 Years of HEP Computing</text>
<text top="55" left="566" width="13" height="12" font="4">27</text>
<text top="93" left="81" width="497" height="14" font="3">difﬁcult to port the system to the latest machines and compilers. The FLUKA system</text>
<text top="111" left="81" width="498" height="14" font="3">has been used extensively by the LHC design team, and by most LHC experiments</text>
<text top="129" left="81" width="497" height="14" font="3">to evaluate the level of radiation in the detectors. FLUKA is also used by the ALICE</text>
<text top="147" left="81" width="325" height="14" font="3">collaboration and the new collaborations at the FAIR <a href="pdfxml.html#52">[</a></text>
<text top="147" left="406" width="15" height="14" font="9"><a href="pdfxml.html#52">63</a></text>
<text top="147" left="421" width="158" height="14" font="3"><a href="pdfxml.html#52">] </a>machine at the centre for</text>
<text top="165" left="81" width="258" height="14" font="3">research on heavy ions (GSI) at Darmstadt.</text>
<text top="183" left="99" width="480" height="14" font="3">The VMC system deﬁnes an abstract interface such that the same geometry</text>
<text top="201" left="81" width="498" height="14" font="3">description can be used with several navigators. The current implementations</text>
<text top="219" left="81" width="373" height="14" font="3">support interfaces with GEANT 3, GEANT 4 and FL<a href="pdfxml.html#27">UKA.</a></text>
<text top="217" left="453" width="5" height="10" font="15"><a href="pdfxml.html#27">1</a></text>
<text top="219" left="465" width="113" height="14" font="3">It is developed by</text>
<text top="237" left="81" width="498" height="14" font="3">the ROOT and ALICE teams. Besides ALICE, a growing number of experiments,</text>
<text top="255" left="81" width="84" height="14" font="3">e.g. MINOS <a href="pdfxml.html#52">[</a></text>
<text top="255" left="165" width="15" height="14" font="9"><a href="pdfxml.html#52">53</a></text>
<text top="255" left="180" width="348" height="14" font="3">] at FNAL, OPERA at Gran Sasso National Laboratory <a href="pdfxml.html#52">[</a></text>
<text top="255" left="528" width="15" height="14" font="9"><a href="pdfxml.html#52">65</a></text>
<text top="255" left="543" width="35" height="14" font="3">], and</text>
<text top="273" left="81" width="59" height="14" font="3">HADES <a href="pdfxml.html#52">[</a></text>
<text top="273" left="140" width="15" height="14" font="9"><a href="pdfxml.html#52">52</a></text>
<text top="273" left="155" width="55" height="14" font="3"><a href="pdfxml.html#52">]</a>, CBM <a href="pdfxml.html#52">[</a></text>
<text top="273" left="210" width="15" height="14" font="9"><a href="pdfxml.html#52">62</a></text>
<text top="273" left="225" width="80" height="14" font="3"><a href="pdfxml.html#52">] </a>and Panda <a href="pdfxml.html#52">[</a></text>
<text top="273" left="305" width="15" height="14" font="9"><a href="pdfxml.html#52">54</a></text>
<text top="273" left="320" width="259" height="14" font="3"><a href="pdfxml.html#52">] </a>experiments at GSI use the VMC system.</text>
<text top="291" left="81" width="497" height="14" font="3">Andrei and Mihaela Gheata from ALICE have developed an implementation of the</text>
<text top="309" left="81" width="498" height="14" font="3">GEANT 4 navigator system using a ROOT based detector geometry. This package</text>
<text top="327" left="81" width="67" height="14" font="3">G4ROOT <a href="pdfxml.html#52">[</a></text>
<text top="327" left="148" width="15" height="14" font="9"><a href="pdfxml.html#52">44</a></text>
<text top="327" left="163" width="416" height="14" font="3"><a href="pdfxml.html#52">] </a>is now part of the standard VMC distribution. The ROOT geometry</text>
<text top="345" left="81" width="498" height="14" font="3">modeller has the big advantage that it can be used not only with several transport</text>
<text top="363" left="81" width="497" height="14" font="3">engines, but also in the programme reconstruction classes, event display systems or</text>
<text top="381" left="81" width="101" height="14" font="3">on-line software.</text>
<text top="445" left="81" width="23" height="16" font="8"><b>1.8</b></text>
<text top="445" left="120" width="71" height="16" font="8"><b>Graphics</b></text>
<text top="489" left="81" width="498" height="14" font="3">For many years graphics systems were all batch and plotter oriented. A graphics</text>
<text top="507" left="81" width="498" height="14" font="3">metaﬁle was generated and sent to a specialised minicomputer driving a pen plotter.</text>
<text top="525" left="81" width="68" height="14" font="3">The GD3 <a href="pdfxml.html#53">[</a></text>
<text top="525" left="148" width="15" height="14" font="9"><a href="pdfxml.html#53">79</a></text>
<text top="525" left="163" width="415" height="14" font="3"><a href="pdfxml.html#53">] </a>library developed by Mike Howie and included in CERNLIB was</text>
<text top="543" left="81" width="498" height="14" font="3">particularly successful and could be smoothly ported to many generations of plotters</text>
<text top="561" left="81" width="498" height="14" font="3">between 1965 and 1985. The documentation of the GD3 system was produced by</text>
<text top="579" left="81" width="498" height="14" font="3">GD3 itself (an impressive work). Most packages developed in the 1970s and early</text>
<text top="597" left="81" width="498" height="14" font="3">1980s were using the GD3 library as a picture generator. This was in particular</text>
<text top="615" left="81" width="157" height="14" font="3">the case of the HPLOT <a href="pdfxml.html#51">[</a></text>
<text top="615" left="238" width="7" height="14" font="9"><a href="pdfxml.html#51">7</a></text>
<text top="615" left="245" width="333" height="14" font="3"><a href="pdfxml.html#51">] </a>package that was specialised in drawing histograms</text>
<text top="633" left="81" width="174" height="14" font="3">generated by the HBOOK <a href="pdfxml.html#51">[</a></text>
<text top="633" left="255" width="15" height="14" font="9"><a href="pdfxml.html#51">14</a></text>
<text top="633" left="270" width="309" height="14" font="3"><a href="pdfxml.html#51">] </a>histogramming system. Carlo Vandoni and Rolf</text>
<text top="651" left="81" width="485" height="14" font="3">Hagedorn were developing since 1971 an interesting system called SIGMA <a href="pdfxml.html#51">[</a></text>
<text top="651" left="566" width="7" height="14" font="9"><a href="pdfxml.html#51">8</a></text>
<text top="651" left="573" width="5" height="14" font="3">]</text>
<text top="669" left="81" width="498" height="14" font="3">running only on CDC systems. SIGMA had an array based user interface and</text>
<text top="687" left="81" width="497" height="14" font="3">powerful graphics functions. One part of the SIGMA software was adapted to the</text>
<text top="705" left="81" width="268" height="14" font="3">PAW system later in 1986 by Carlo Vandoni.</text>
<text top="723" left="99" width="480" height="14" font="3">When the ﬁrst Tektronix terminals became available in 1974, the GD3 library</text>
<text top="741" left="81" width="497" height="14" font="3">was interfaced to the very basic Tektronix control sequences to display simple</text>
<text top="759" left="81" width="497" height="14" font="3">vector graphics; then in 1982, with the arrival of Apollo workstations, GD3 was</text>
<text top="777" left="81" width="498" height="14" font="3">interfaced to the Apollo graphics software. An interactive version of HBOOK and</text>
<text top="795" left="81" width="498" height="14" font="3">HPLOT called HTV was developed (the main predecessor of the PAW and ROOT</text>
<text top="855" left="81" width="4" height="8" font="16">1</text>
<text top="857" left="86" width="492" height="12" font="4">It has to be noted that the interface with FLUKA breaches the licensing conditions of the FLUKA</text>
<text top="872" left="81" width="497" height="12" font="4">programme, and therefore it can be used only after having obtained a special permission from the</text>
<text top="887" left="81" width="416" height="12" font="4">authors. This permission has been granted only to the ALICE experiment at LHC.</text>
</page>
<page number="28" position="absolute" top="0" left="0" height="999" width="659">
<text top="55" left="81" width="13" height="12" font="4">28</text>
<text top="55" left="538" width="40" height="12" font="4">R. Brun</text>
<text top="93" left="81" width="498" height="14" font="3">system). HTV was running on Apollos, VAX/VMS and also the IBM under the TSO</text>
<text top="111" left="81" width="498" height="14" font="3">operating system. On the Apollo, HTV was upgraded to HTVGUI to exploit the</text>
<text top="129" left="81" width="497" height="14" font="3">bitmap capabilities of the machine. HTVGUI attracted the attention of Rudy B¨ock</text>
<text top="147" left="81" width="498" height="14" font="3">and Jean-Pierre Revol from the UA1 collaboration. Rudy and Jean-Pierre came with</text>
<text top="165" left="81" width="498" height="14" font="3">many suggestions for improvements of HTVGUI and this led to the proposal of the</text>
<text top="183" left="81" width="382" height="14" font="3">Physics Analysis Workstation (PAW) system in the fall of 1984.</text>
<text top="239" left="99" width="461" height="14" font="3">The beginning of computer graphics in HEP coincides with the advent of the</text>
<text top="257" left="99" width="284" height="14" font="3">graphics terminal and the personal workstation.</text>
<text top="311" left="99" width="480" height="14" font="3">In 1981, some exotic and expensive devices were also available. In particular a</text>
<text top="329" left="81" width="498" height="14" font="3">Megatek display controlled by a VAX 750 machine was a big success in the UA1</text>
<text top="347" left="81" width="284" height="14" font="3">collaboration. It was on this system that the ﬁrst</text>
<text top="344" left="368" width="11" height="19" font="10">Z</text>
<text top="342" left="380" width="5" height="14" font="11">0</text>
<text top="347" left="390" width="189" height="14" font="3">and W particles were visualised</text>
<text top="365" left="81" width="498" height="14" font="3">in 1983. Jurgen Bettels and David Myers were the main engineers developing the</text>
<text top="383" left="81" width="497" height="14" font="3">high level interfaces to operate the Megatek driven from the VMS machine. Jean-</text>
<text top="401" left="81" width="498" height="14" font="3">Pierre Vialle, a physicist from the UA1 collaboration, implemented the experiment</text>
<text top="419" left="81" width="498" height="14" font="3">speciﬁc software running under HYDRA to generate the graphics primitives on</text>
<text top="437" left="81" width="498" height="14" font="3">the Megatek. The early 1980s were quite confusing years in the area of graphics.</text>
<text top="455" left="81" width="355" height="14" font="3">A standardisation effort in the U.S. produced the CORE <a href="pdfxml.html#52">[</a></text>
<text top="455" left="436" width="15" height="14" font="9"><a href="pdfxml.html#52">23</a></text>
<text top="455" left="451" width="4" height="14" font="3">,</text>
<text top="455" left="458" width="15" height="14" font="9"><a href="pdfxml.html#53">78</a></text>
<text top="455" left="472" width="106" height="14" font="3"><a href="pdfxml.html#53">] </a>system deﬁning</text>
<text top="473" left="81" width="497" height="14" font="3">the basic principles behind graphics 2-D and 3-D architectures. Andy Van Dam</text>
<text top="491" left="81" width="498" height="14" font="3">from Brown University had been very active in this standardisation process and his</text>
<text top="509" left="81" width="497" height="14" font="3">book quickly became the bible for anybody dealing with 3-D graphics systems. At</text>
<text top="527" left="81" width="498" height="14" font="3">Brown University, Andy bought about 100 Apollo workstations to teach graphics</text>
<text top="545" left="81" width="498" height="14" font="3">principles to his students. Each student had his own machine on the university’s</text>
<text top="563" left="81" width="150" height="14" font="3">Apollo Domain network.</text>
<text top="581" left="99" width="480" height="14" font="3">At the same time we were also buying many Apollo machines at CERN and</text>
<text top="599" left="81" width="498" height="14" font="3">Andy was invited for several weeks to drive us in the right directions. However at</text>
<text top="617" left="81" width="409" height="14" font="3">the same time a European sponsored initiative produced the GKS <a href="pdfxml.html#52">[</a></text>
<text top="617" left="490" width="15" height="14" font="9"><a href="pdfxml.html#52">24</a></text>
<text top="617" left="505" width="74" height="14" font="3"><a href="pdfxml.html#52">] </a>(Graphical</text>
<text top="635" left="81" width="498" height="14" font="3">Kernel System), one of the main topics at the newly born EuroGraphics conferences</text>
<text top="653" left="81" width="337" height="14" font="3">organised to counter-balance the powerful SIGGRAPH <a href="pdfxml.html#52">[</a></text>
<text top="653" left="418" width="15" height="14" font="9"><a href="pdfxml.html#52">71</a></text>
<text top="653" left="433" width="146" height="14" font="3"><a href="pdfxml.html#52">] </a>association in the U.S..</text>
<text top="671" left="81" width="497" height="14" font="3">Carlo Vandoni was an active member of EuroGraphics. Together with Jurgen Bettels</text>
<text top="689" left="81" width="498" height="14" font="3">and David Myers, our graphics experts, they pushed CERN to write software</text>
<text top="707" left="81" width="498" height="14" font="3">consistent with the GKS standard and they decided to buy the GTSGRAL software</text>
<text top="725" left="81" width="228" height="14" font="3">system from a company in Darmstadt.</text>
<text top="781" left="99" width="376" height="14" font="3">The HIGZ system, a high-level graphics visualisation package.</text>
<text top="835" left="99" width="480" height="14" font="3">GKS had been proposed as a follow-on (I would rather say as a competitor)</text>
<text top="853" left="81" width="498" height="14" font="3">to the CORE system. While the CORE system had been designed mainly at the</text>
<text top="871" left="81" width="498" height="14" font="3">time of vector graphics, GKS was attempting to cover more modern hardware</text>
</page>
<page number="29" position="absolute" top="0" left="0" height="999" width="659">
<text top="55" left="81" width="6" height="12" font="4">1</text>
<text top="55" left="99" width="381" height="12" font="4">Technologies, Collaborations and Languages: 20 Years of HEP Computing</text>
<text top="55" left="566" width="13" height="12" font="4">29</text>
<text top="93" left="81" width="498" height="14" font="3">such as bitmap workstations. However a better proposal emerged. Proposed by</text>
<text top="111" left="81" width="497" height="14" font="3">the Massachusetts Institute of Technology, the X11 system appeared in 1984 as</text>
<text top="129" left="81" width="498" height="14" font="3">a better choice than GKS. When the PAW project was proposed in 1984, however,</text>
<text top="147" left="81" width="498" height="14" font="3">our mandate was to use GKS and nothing else. CERN had to support a European</text>
<text top="165" left="81" width="497" height="14" font="3">product, full stop. However, we managed to circumvent this political problem by</text>
<text top="183" left="81" width="498" height="14" font="3">implementing the HIGZ package. HIGZ provided a standard API for all functions</text>
<text top="201" left="81" width="498" height="14" font="3">required by PAW or GEANT 3 and we had interfaces to the CORE system (thanks</text>
<text top="219" left="81" width="400" height="14" font="3">to Harald Johnstadt from FNAL), GKS, X11 and later the PHIGS <a href="pdfxml.html#53">[</a></text>
<text top="219" left="481" width="15" height="14" font="9"><a href="pdfxml.html#53">82</a></text>
<text top="219" left="496" width="77" height="14" font="3"><a href="pdfxml.html#53">] </a>system too.</text>
<text top="237" left="99" width="480" height="14" font="3">The GTSGRAL package was not particularly good, containing many bugs across</text>
<text top="255" left="81" width="497" height="14" font="3">successive releases, and the performance was not the one expected. In addition a</text>
<text top="273" left="81" width="498" height="14" font="3">commercial license was necessary, such that very rapidly the X11 HIGZ interface</text>
<text top="291" left="81" width="498" height="14" font="3">became popular and the GKS interface was left to the IBM and VMS systems only.</text>
<text top="309" left="81" width="497" height="14" font="3">Except for the UA1 case with the Megatek, 3-D graphics was marginal at CERN,</text>
<text top="327" left="81" width="498" height="14" font="3">because expensive. A 3-D version of GKS became available, but its performance</text>
<text top="345" left="81" width="485" height="14" font="3">was far from expectations. Jurgen Bettels and David Myers proposed the PIONS <a href="pdfxml.html#51">[</a></text>
<text top="345" left="566" width="7" height="14" font="9"><a href="pdfxml.html#51">5</a></text>
<text top="345" left="573" width="5" height="14" font="3">]</text>
<text top="363" left="81" width="497" height="14" font="3">system (Partial Implementation of Our New System). This package was used as</text>
<text top="381" left="81" width="498" height="14" font="3">a successor of the original Megatek software. It featured a client-server approach.</text>
<text top="399" left="81" width="498" height="14" font="3">Despite the big effort involved in this development, nobody could ever understand</text>
<text top="417" left="81" width="498" height="14" font="3">what were the attractive features of PIONS. Probably Jurgen realised this and</text>
<text top="435" left="81" width="498" height="14" font="3">decided to leave CERN to join the DEC company. In the early 1990s, a new standard</text>
<text top="453" left="81" width="498" height="14" font="3">for 3-D graphics emerged, PHIGS. We implemented an interface HIGZ/PHIGS, but</text>
<text top="471" left="81" width="224" height="14" font="3">this interface remained anecdotal too.</text>
<text top="527" left="99" width="461" height="14" font="3">Graphics standards have been for many years a moving target due to the rapid</text>
<text top="545" left="99" width="359" height="14" font="3">evolution of the hardware, both CPU, storage and terminals.</text>
<text top="599" left="99" width="480" height="14" font="3">For many years, Graphics meant passive vector graphics only. Although the</text>
<text top="617" left="81" width="498" height="14" font="3">hardware and standards like GKS were supporting the concept of segments holding</text>
<text top="635" left="81" width="498" height="14" font="3">graphics data structures that could be erased separately without clearing the entire</text>
<text top="653" left="81" width="498" height="14" font="3">screen, this possibility was rarely used in our environment. It was sometimes used</text>
<text top="671" left="81" width="498" height="14" font="3">by some early primitive graphical user interfaces to display dynamic menus, but</text>
<text top="689" left="81" width="497" height="14" font="3">this type of interface was never very popular. With HTVGUI, we had prototyped a</text>
<text top="707" left="81" width="498" height="14" font="3">more advanced style of interface exploiting bitmap capabilities, but because we had</text>
<text top="725" left="81" width="498" height="14" font="3">to be GKS-compatible, this work was never moved to the PAW system, despite the</text>
<text top="743" left="81" width="498" height="14" font="3">fact that this type of interface became popular with the ﬁrst Macintosh machines.</text>
<text top="761" left="81" width="498" height="14" font="3">Because we had to provide solutions for the majority, and the majority was using</text>
<text top="779" left="81" width="498" height="14" font="3">VT100 compatible terminals, the committee launching PAW in 1984 required a</text>
<text top="797" left="81" width="498" height="14" font="3">graphical user interface compatible with VT100 capabilities that was really outdated</text>
<text top="815" left="81" width="70" height="14" font="3">at this time.</text>
<text top="833" left="99" width="480" height="14" font="3">For many years the main interface provided for systems like PAW and GEANT</text>
<text top="851" left="81" width="498" height="14" font="3">was a command line interface only. It was only in 1991 that we implemented</text>
<text top="869" left="81" width="30" height="14" font="3">PAW</text>
<text top="866" left="111" width="175" height="19" font="10">CC that offered a MOTIF <a href="pdfxml.html#52">[</a></text>
<text top="869" left="286" width="15" height="14" font="9"><a href="pdfxml.html#52">69</a></text>
<text top="869" left="301" width="277" height="14" font="3"><a href="pdfxml.html#52">] </a>based graphical user interface. MOTIF was</text>
</page>
<page number="30" position="absolute" top="0" left="0" height="999" width="659">
<text top="55" left="81" width="13" height="12" font="4">30</text>
<text top="55" left="538" width="40" height="12" font="4">R. Brun</text>
<text top="93" left="81" width="497" height="14" font="3">the newly proposed standard by the Open Software Foundation (OSF) group. OSF</text>
<text top="111" left="81" width="498" height="14" font="3">was assumed by many to become the next standard operating system. In fact the only</text>
<text top="129" left="81" width="497" height="14" font="3">implementation came from DEC on ALPHA machines. MOTIF was built on top of</text>
<text top="147" left="81" width="497" height="14" font="3">X11 and provided advanced widgets to design nice user interfaces. MOTIF was</text>
<text top="165" left="81" width="498" height="14" font="3">quite complex and came with a large memory foot-print. The system is still in use</text>
<text top="183" left="81" width="498" height="14" font="3">today on X11 based systems, but more modern systems have now appeared on the</text>
<text top="201" left="81" width="497" height="14" font="3">market. On Windows systems, Microsoft Foundation Classes (MFC) provide all the</text>
<text top="219" left="81" width="498" height="14" font="3">widgets to design nice interfaces. The latest implementations on Windows support</text>
<text top="237" left="81" width="498" height="14" font="3">modern fashionable interfaces with 3-D effects, vanishing windows, non rectangular</text>
<text top="255" left="81" width="497" height="14" font="3">and semi transparent windows, etc. Apple is known, since the Macintosh success in</text>
<text top="273" left="81" width="498" height="14" font="3">1984, for the most elegant and advanced user interfaces in their successive operating</text>
<text top="291" left="81" width="497" height="14" font="3">systems. However, not many applications in our ﬁeld provide direct interfaces to</text>
<text top="309" left="81" width="204" height="14" font="3">these Microsoft or Apple widgets.</text>
<text top="327" left="99" width="480" height="14" font="3">With the advent of Linux or Linux-like systems, new Graphic User Interface</text>
<text top="345" left="81" width="357" height="14" font="3">(GUI) systems have emerged. The most popular is QT <a href="pdfxml.html#52">[</a></text>
<text top="345" left="437" width="15" height="14" font="9"><a href="pdfxml.html#52">49</a></text>
<text top="345" left="452" width="126" height="14" font="3"><a href="pdfxml.html#52">] </a>from a Norwegian</text>
<text top="363" left="81" width="293" height="14" font="3">company TrollTech. QT is the basis of KDE <a href="pdfxml.html#52">[</a></text>
<text top="363" left="373" width="15" height="14" font="9"><a href="pdfxml.html#52">64</a></text>
<text top="363" left="388" width="190" height="14" font="3"><a href="pdfxml.html#52">] </a>the most popular windowing</text>
<text top="381" left="81" width="498" height="14" font="3">system under Linux. Some applications in HEP have direct interfaces to QT. Several</text>
<text top="399" left="81" width="498" height="14" font="3">versions of QT have appeared on the market, causing some confusion. For example</text>
<text top="417" left="81" width="121" height="14" font="3">the Linux RedHat <a href="pdfxml.html#52">[</a></text>
<text top="417" left="202" width="15" height="14" font="9"><a href="pdfxml.html#52">70</a></text>
<text top="417" left="217" width="361" height="14" font="3">] distributions until recently featured old versions of KDE</text>
<text top="435" left="81" width="498" height="14" font="3">built with an ancient version 3.1 of the QT system. A newer version QT4 has</text>
<text top="453" left="81" width="497" height="14" font="3">been released but is incompatible with the previous version. QT has pioneered the</text>
<text top="471" left="81" width="498" height="14" font="3">so-called “signal-slots” mechanism that replaces the traditional callback mechanism</text>
<text top="489" left="81" width="498" height="14" font="3">in MOTIF or the messaging system in MFC. Objects can emit signals (for example</text>
<text top="507" left="81" width="497" height="14" font="3">when the mouse leaves or enters a window, or when the mouse is clicked on top of</text>
<text top="525" left="81" width="498" height="14" font="3">an object). Users can subscribe to any signal and implement a “slot” function that</text>
<text top="543" left="81" width="497" height="14" font="3">will be called automatically by the system when the signal is emitted. Compared to</text>
<text top="561" left="81" width="497" height="14" font="3">the traditional callback mechanism, this has the advantage of separating the code in</text>
<text top="579" left="81" width="497" height="14" font="3">the class emitting the signal from the receiver code and making implementations of</text>
<text top="597" left="81" width="497" height="14" font="3">user interface systems more modular. In January 2008, the TrollTech company was</text>
<text top="615" left="81" width="497" height="14" font="3">bought by Nokia. It is likely that the company will target the new developments of</text>
<text top="633" left="81" width="498" height="14" font="3">QT for mobile phones, making its future rather uncertain in our ﬁeld. This proves</text>
<text top="651" left="81" width="498" height="14" font="3">once more that our ﬁeld can hardly rely on commercial systems over ten or twenty</text>
<text top="669" left="81" width="35" height="14" font="3">years.</text>
<text top="733" left="81" width="22" height="16" font="8"><b>1.9</b></text>
<text top="733" left="120" width="195" height="16" font="8"><b>Interactive Data Analysis</b></text>
<text top="777" left="81" width="498" height="14" font="3">In HEP or Nuclear Physics, a data analysis process loops over a long list of events,</text>
<text top="795" left="81" width="498" height="14" font="3">each one being the description of the results of a collision. The typical analysis</text>
<text top="813" left="81" width="498" height="14" font="3">scenario consists of creating a set of histograms and conditionally ﬁll these</text>
<text top="831" left="81" width="497" height="14" font="3">histograms in the event loop. The physicist applies cuts to some variables to ﬁnd</text>
<text top="849" left="81" width="498" height="14" font="3">possible correlations and repeats this process until an interesting subset (possibly</text>
<text top="867" left="81" width="224" height="14" font="3">just a few events) has been identiﬁed.</text>
</page>
<page number="31" position="absolute" top="0" left="0" height="999" width="659">
<text top="55" left="81" width="6" height="12" font="4">1</text>
<text top="55" left="99" width="381" height="12" font="4">Technologies, Collaborations and Languages: 20 Years of HEP Computing</text>
<text top="55" left="566" width="13" height="12" font="4">31</text>
<text top="113" left="99" width="461" height="14" font="3">Interactive Data Analysis, a new dimension for physics data mining made</text>
<text top="131" left="99" width="104" height="14" font="3">possible by PAW.</text>
<text top="185" left="99" width="480" height="14" font="3">Traditionally this analysis process was performed with short jobs and the main</text>
<text top="203" left="81" width="498" height="14" font="3">tool used for this work was a histogramming package. The most popular package</text>
<text top="221" left="81" width="498" height="14" font="3">used for this task was HBOOK for many years and the system is still widely used</text>
<text top="239" left="81" width="304" height="14" font="3">today within the experiments that did not move to C</text>
<text top="236" left="385" width="193" height="19" font="10">CC. I was hired as a CERN staff</text>
<text top="257" left="81" width="498" height="14" font="3">member in July 1973 into a group of the “DD” (CERN Data Division) developing</text>
<text top="275" left="81" width="498" height="14" font="3">special hardware processors that were supposed to be used for the trigger and</text>
<text top="293" left="81" width="498" height="14" font="3">fast reconstruction of the R602 experiment at the Intersecting Storage Rings (ISR)</text>
<text top="311" left="81" width="69" height="14" font="3">accelerator.</text>
<text top="329" left="99" width="480" height="14" font="3">The ISR was the ﬁrst particle collider in the world when it entered operation</text>
<text top="347" left="81" width="498" height="14" font="3">in 1971, producing a huge (for the time) amount of data. Many people thought</text>
<text top="365" left="81" width="497" height="14" font="3">that the only way to select the good events and analyse them quickly would be</text>
<text top="383" left="81" width="498" height="14" font="3">special hardware processors. Hence my job was to collaborate on this development.</text>
<text top="401" left="81" width="498" height="14" font="3">A career in the electronics domain seemed to be more favourable than computing,</text>
<text top="419" left="81" width="498" height="14" font="3">that was then considered more as a formula computation system than an event</text>
<text top="437" left="81" width="498" height="14" font="3">processing system. However, for many reasons, the delivery of some hardware</text>
<text top="455" left="81" width="497" height="14" font="3">components did not happen in time, and anyhow the principle was ﬂawed. As a</text>
<text top="473" left="81" width="450" height="14" font="3">result, I moved from hardware electronics to software within a few months.</text>
<text top="491" left="99" width="480" height="14" font="3">During my thesis work, I had to analyse data coming from a very simple</text>
<text top="509" left="81" width="497" height="14" font="3">telescope of two detectors: one germanium detector measuring the energy loss of</text>
<text top="527" left="81" width="498" height="14" font="3">particles produced by the collision of 600 MeV protons on various targets, and</text>
<text top="545" left="81" width="498" height="14" font="3">another NaI (Sodium Iodide) detector measuring the total energy of the stopping</text>
<text top="563" left="81" width="498" height="14" font="3">particle. The analysis was pretty simple and consisted of producing correlation plots</text>
<text top="581" left="81" width="498" height="14" font="3">of the energy loss versus the total energy to identify particles like protons, deuterons</text>
<text top="599" left="81" width="497" height="14" font="3">and alpha particles. I had developed a simple tool called BIDIM to display the</text>
<text top="617" left="81" width="498" height="14" font="3">correlation plots on a line printer. So I was already an expert in histogramming</text>
<text top="635" left="81" width="498" height="14" font="3">systems. Given the fact that the job for which I had been hired was not a full time</text>
<text top="653" left="81" width="497" height="14" font="3">occupation and in agreement with my supervisors, I started the development of the</text>
<text top="671" left="81" width="497" height="14" font="3">HBOOK system. In 1974, together with Paolo Palazzi who was just back from a</text>
<text top="689" left="81" width="498" height="14" font="3">year of sabbatical leave at SLAC, we considerably extended the package (he wrote</text>
<text top="707" left="81" width="245" height="14" font="3">the documentation and I wrote the code).</text>
<text top="763" left="99" width="461" height="14" font="3">The birth of HBOOK, the HEP standard histogramming package for more</text>
<text top="781" left="99" width="84" height="14" font="3">than 30 years.</text>
<text top="835" left="99" width="480" height="14" font="3">The system started to be widely used very soon for the data analysis of the ISR</text>
<text top="853" left="81" width="498" height="14" font="3">experiments and later for the SPS experiments. For the bubble chamber experiments,</text>
<text top="871" left="81" width="498" height="14" font="3">a system called SUMX, developed originally at Berkeley, was the main analysis</text>
</page>
<page number="32" position="absolute" top="0" left="0" height="999" width="659">
<text top="55" left="81" width="13" height="12" font="4">32</text>
<text top="55" left="538" width="40" height="12" font="4">R. Brun</text>
<text top="93" left="81" width="498" height="14" font="3">engine. Data were written in a special but simple format. SUMX was a kind</text>
<text top="111" left="81" width="498" height="14" font="3">of pre-processor where users speciﬁed via input data cards the quantities to be</text>
<text top="129" left="81" width="498" height="14" font="3">histogrammed and the set of cuts to be applied. This was indeed a good idea that</text>
<text top="147" left="81" width="497" height="14" font="3">did not imply writing complex code for a simple analysis. However, the system was</text>
<text top="165" left="81" width="497" height="14" font="3">quite inﬂexible for more sophisticated data analysis. Users quickly showed their</text>
<text top="183" left="81" width="498" height="14" font="3">preference for a histogramming library with which they could create and ﬁll the</text>
<text top="201" left="81" width="262" height="14" font="3">histograms according to their special needs.</text>
<text top="219" left="99" width="480" height="14" font="3">The people developing the HYDRA system realised this trend too, but the</text>
<text top="237" left="81" width="497" height="14" font="3">HYDRA histogramming package was not as simple to use as HBOOK and HBOOK</text>
<text top="255" left="81" width="497" height="14" font="3">won the contest. Together with Howard Watkins, we extended HBOOK with</text>
<text top="273" left="81" width="498" height="14" font="3">the graphics system HPLOT based on the CERN GD3 system. A huge quantity</text>
<text top="291" left="81" width="498" height="14" font="3">of HPLOT output was produced on the rather expensive Calcomp pen plotters.</text>
<text top="309" left="81" width="497" height="14" font="3">A 35 mm microﬁlm output system was introduced in 1978 together with a few</text>
<text top="327" left="81" width="498" height="14" font="3">microﬁlm viewing machines in the computer centre. This system became obsolete</text>
<text top="345" left="81" width="291" height="14" font="3">when more graphics terminals became available.</text>
<text top="363" left="99" width="480" height="14" font="3">With more and more people using the HBOOK and HPLOT systems, an</text>
<text top="381" left="81" width="498" height="14" font="3">increasing number of requests appeared for a more interactive system. We already</text>
<text top="399" left="81" width="498" height="14" font="3">had a system called TV to visualise the GD3 metaﬁles. It was possible via simple</text>
<text top="417" left="81" width="497" height="14" font="3">commands like “v 7” to show the picture number 7 in the GD3 metaﬁle, but it</text>
<text top="435" left="81" width="497" height="14" font="3">was not possible to change or improve the output format. In 1980, I started the</text>
<text top="453" left="81" width="244" height="14" font="3">development of HTV (HBOOK/HPLOT</text>
<text top="450" left="329" width="250" height="19" font="10">CTV). HTV featured a simple command</text>
<text top="471" left="81" width="498" height="14" font="3">line interface of the style “Menu/Command param [optional param]”. With HTV</text>
<text top="489" left="81" width="497" height="14" font="3">it was possible to view a histogram inside a HBOOK ﬁle with any of the HPLOT</text>
<text top="507" left="81" width="497" height="14" font="3">supported formats and generate a GD3 metaﬁle. This was indeed a big progress, but</text>
<text top="525" left="81" width="498" height="14" font="3">of course users were requesting more and more. In particular, it was quite tedious</text>
<text top="543" left="81" width="498" height="14" font="3">to repeat the same commands to set the viewing attributes. The simple command</text>
<text top="561" left="81" width="498" height="14" font="3">line interface was extended with the participation of Pietro Zanarini and became the</text>
<text top="579" left="81" width="319" height="14" font="3">ZCEDEX system to support the execution of macros.</text>
<text top="597" left="99" width="480" height="14" font="3">ZCEDEX was rapidly used by HTV and also by GEANT 3. In fact, GEANT 3</text>
<text top="615" left="81" width="498" height="14" font="3">was developed from day one as an interactive system, making it hard to believe that</text>
<text top="633" left="81" width="497" height="14" font="3">15 years later and despite the advances in technology, the GEANT 4 system was</text>
<text top="651" left="81" width="497" height="14" font="3">developed as a pure batch system with no tools to help the debugging process. As</text>
<text top="669" left="81" width="497" height="14" font="3">indicated earlier, the HTV system was extended to HTVGUI on the Apollos with</text>
<text top="687" left="81" width="498" height="14" font="3">a graphical user interface showing the menus and commands as pull down menus.</text>
<text top="705" left="81" width="497" height="14" font="3">In 1984, it became obvious it had to be further extended. The ZCEDEX system</text>
<text top="723" left="81" width="498" height="14" font="3">had grown from a trivial menu/command interface to a more complex package</text>
<text top="741" left="81" width="498" height="14" font="3">supporting optional arguments and a help system, but it was not possible to execute</text>
<text top="759" left="81" width="420" height="14" font="3">macros with conditional code based on some global or local variables.</text>
<text top="815" left="99" width="461" height="14" font="3">The quest for more interaction with the computer graphics: HTV and</text>
<text top="833" left="99" width="341" height="14" font="3">ZCEDEX. A new paradigm slowly comes into existence.</text>
</page>
<page number="33" position="absolute" top="0" left="0" height="999" width="659">
<text top="55" left="81" width="6" height="12" font="4">1</text>
<text top="55" left="99" width="381" height="12" font="4">Technologies, Collaborations and Languages: 20 Years of HEP Computing</text>
<text top="55" left="566" width="13" height="12" font="4">33</text>
<text top="93" left="99" width="480" height="14" font="3">It was not possible to ﬁll histograms based on some cuts. Everything had to</text>
<text top="111" left="81" width="498" height="14" font="3">be done in batch compiled programmes a priori. The previous SUMX users were</text>
<text top="129" left="81" width="497" height="14" font="3">requesting SUMX like facilities to create and ﬁll histograms based on a similar</text>
<text top="147" left="81" width="498" height="14" font="3">cut logic. Erik Baessler from DESY had already developed the GEP system. GEP</text>
<text top="165" left="81" width="149" height="14" font="3">featured a simple n-tupl<a href="pdfxml.html#33">e</a></text>
<text top="163" left="230" width="5" height="10" font="15"><a href="pdfxml.html#33">2</a></text>
<text top="165" left="239" width="339" height="14" font="3">analysis facility. The data to be analysed had to be stored</text>
<text top="183" left="81" width="497" height="14" font="3">into vectors (n-tuples) and it was possible to create histograms, by looping on these</text>
<text top="201" left="81" width="498" height="14" font="3">n-tuples, and apply cuts at the same time. For many years Rudy B¨ock had been</text>
<text top="219" left="81" width="498" height="14" font="3">very active in developing and coordinating the development of software for bubble</text>
<text top="237" left="81" width="497" height="14" font="3">chambers. Since 1980, he was an active member of the UA1 collaboration. He was</text>
<text top="255" left="81" width="498" height="14" font="3">very interested by the developments around HTV and HTVGUI and was pushing for</text>
<text top="273" left="81" width="498" height="14" font="3">a possible common development with the GEP system. We visited DESY together</text>
<text top="291" left="81" width="497" height="14" font="3">in the autumn of 1984. We attended presentations of GEP, and the way it was used</text>
<text top="309" left="81" width="498" height="14" font="3">at the DESY network. GEP was implemented in PL1 on the IBM machines. Erik</text>
<text top="327" left="81" width="498" height="14" font="3">was a strong supporter of PL1 and did not want to discuss any other language than</text>
<text top="345" left="81" width="498" height="14" font="3">PL1 for any future collaborative project. So Rudy and I came back from DESY,</text>
<text top="363" left="81" width="497" height="14" font="3">convinced that it was impossible to embark in a common development based on the</text>
<text top="381" left="81" width="498" height="14" font="3">PL1 language only available on IBM and somehow on VAX. We had many more</text>
<text top="399" left="81" width="497" height="14" font="3">machines to support and also the graphics system used by GEP, although with a lot</text>
<text top="417" left="81" width="228" height="14" font="3">of features was not the right direction.</text>
<text top="435" left="99" width="480" height="14" font="3">Rudy set up a small committee including Carlo Vandoni, Luc Pape, Jean-Pierre</text>
<text top="453" left="81" width="497" height="14" font="3">Revol and myself to design a new system based on our previous experience with</text>
<text top="471" left="81" width="498" height="14" font="3">HTV. After a few meetings, the recommendation of the committee was to develop</text>
<text top="489" left="81" width="498" height="14" font="3">the PAW system, originally based on HTV and ZCEDEX, but with a menu interface</text>
<text top="507" left="81" width="498" height="14" font="3">appropriate for the VT100 terminals and the graphics system based on GKS, but</text>
<text top="525" left="81" width="497" height="14" font="3">with no support for n-tuple analysis. The committee was supposed to watch the</text>
<text top="543" left="81" width="498" height="14" font="3">development of the new system. However, as I was not happy with the conclusions</text>
<text top="561" left="81" width="497" height="14" font="3">of the design phase, I managed to escape the committee control process and PAW</text>
<text top="579" left="81" width="497" height="14" font="3">was developed quickly in substantially different directions, but it took us at least</text>
<text top="597" left="81" width="378" height="14" font="3">two years to recover from the limitations in the original design.</text>
<text top="615" left="99" width="480" height="14" font="3">Pietro Zanarini upgraded the ZCEDEX system (meanwhile renamed KUIP:</text>
<text top="633" left="81" width="498" height="14" font="3">Kernel User Interface Package) to support variables and conditional macro execu-</text>
<text top="651" left="81" width="498" height="14" font="3">tion. KUIP was continuously extended until 1993 and gradually rewritten in C by</text>
<text top="669" left="81" width="273" height="14" font="3">an exceptional programmer Alfred Nathaniel.</text>
<text top="751" left="81" width="4" height="8" font="16">2</text>
<text top="753" left="86" width="492" height="12" font="4">An n-tpule or ntuple is an ordered sequence of n elements. Each sequence represents a given</text>
<text top="768" left="81" width="497" height="12" font="4">physical object, most frequently an event or a track. n-tuples can be considered as lines of a</text>
<text top="783" left="81" width="497" height="12" font="4">matrix whose length is determined by the number of “objects” represented. This representation</text>
<text top="798" left="81" width="497" height="12" font="4">is very practical for High Energy Physics data. The most “natural” way to store an n-tuple is “row-</text>
<text top="812" left="81" width="497" height="12" font="4">wise”, i.e. rows are stored one after the other on disk. This is not however the most “efﬁcient”</text>
<text top="827" left="81" width="497" height="12" font="4">way to store the data, particularly taking into account the fact that, most of the time, only a few</text>
<text top="842" left="81" width="497" height="12" font="4">of the “columns” are used in a given analysis. Better efﬁciency can be reached by storing the data</text>
<text top="857" left="81" width="497" height="12" font="4">“column-wise”, i.e. the data belonging to the same “column” are stored sequentially on disk. This</text>
<text top="872" left="81" width="497" height="12" font="4">technique provides substantial gains in performance: however it substantially complicates data</text>
<text top="887" left="81" width="144" height="12" font="4">handling for the application.</text>
</page>
<page number="34" position="absolute" top="0" left="0" height="999" width="659">
<text top="55" left="81" width="13" height="12" font="4">34</text>
<text top="55" left="538" width="40" height="12" font="4">R. Brun</text>
<text top="93" left="99" width="480" height="14" font="3">The low level graphics system HIGZ offered a standard layer to many machine</text>
<text top="111" left="81" width="498" height="14" font="3">and system dependent libraries like GKS and X11. HIGZ was considerably extended</text>
<text top="129" left="81" width="498" height="14" font="3">over the years, in particular the X11 interface that rapidly became the de facto</text>
<text top="147" left="81" width="55" height="14" font="3">standard.</text>
<text top="203" left="99" width="461" height="14" font="3">PAW becomes the standard analysis tool for High Energy and Nuclear Physics</text>
<text top="221" left="99" width="139" height="14" font="3">for more than 20 years.</text>
<text top="275" left="99" width="479" height="14" font="3">We extended the HBOOK system to support row-wise n-tuples in HBOOK</text>
<text top="293" left="81" width="498" height="14" font="3">ﬁles and we rapidly implemented utilities to loop over n-tuples with pre-deﬁned</text>
<text top="311" left="81" width="498" height="14" font="3">cuts. Row-Wise N-Tuples (RWN) were somehow similar to a table in a relational</text>
<text top="329" left="81" width="498" height="14" font="3">database and our n-tuple query system looked like a small subset of SQL. Very</text>
<text top="347" left="81" width="498" height="14" font="3">soon, we realised that RWN had a big performance penalty when processing</text>
<text top="365" left="81" width="498" height="14" font="3">only one or a few columns from the n-tuple set. In 1989 we implemented a new</text>
<text top="383" left="81" width="498" height="14" font="3">format CWN (Column-Wise-N-tuples) where each column had its own buffers.</text>
<text top="401" left="81" width="230" height="14" font="3">The FORTRAN interpreter COMIS <a href="pdfxml.html#51">[</a></text>
<text top="401" left="311" width="7" height="14" font="9"><a href="pdfxml.html#51">4</a></text>
<text top="401" left="319" width="260" height="14" font="3"><a href="pdfxml.html#51">] </a>(developed by Vladimir Berezhnoi from</text>
<text top="419" left="81" width="498" height="14" font="3">Protvino in Russia) was an interesting complement to KUIP macros when more and</text>
<text top="437" left="81" width="498" height="14" font="3">more complex analysis tasks had to be executed. A typical analysis command looked</text>
<text top="455" left="81" width="497" height="14" font="3">like “N-Tuple/Draw 10 select.f” where 10 was the n-tuple identiﬁer and select.F a</text>
<text top="473" left="81" width="498" height="14" font="3">FORTRAN ﬁle containing the analysis function to be called for each event. The</text>
<text top="491" left="81" width="497" height="14" font="3">COMIS interpreter was typically 5 to 20 times slower than the native FORTRAN</text>
<text top="509" left="81" width="498" height="14" font="3">compiler. To speed up the process, we implemented a direct interface to compile</text>
<text top="527" left="81" width="498" height="14" font="3">the select.f ﬁle on the ﬂy with the native compiler. The above command had to be</text>
<text top="545" left="81" width="298" height="14" font="3">changed simply to “N-Tuple/Draw 10 select.f77”.</text>
<text top="563" left="99" width="480" height="14" font="3">After a difﬁcult start, PAW rapidly became a success and was the main tool for</text>
<text top="581" left="81" width="197" height="14" font="3">data analysis for nearly 20 years.</text>
<text top="599" left="99" width="235" height="14" font="3">In 1991, we implemented the PIAF <a href="pdfxml.html#51">[</a></text>
<text top="599" left="333" width="7" height="14" font="9"><a href="pdfxml.html#51">9</a></text>
<text top="599" left="341" width="238" height="14" font="3"><a href="pdfxml.html#51">] </a>system (Parallel Interactive Analysis</text>
<text top="617" left="81" width="498" height="14" font="3">Facility). PIAF was an extension to PAW allowing the analysis of large n-tuple</text>
<text top="635" left="81" width="498" height="14" font="3">ﬁles in parallel on a small farm of nine HP workstations connected with a high</text>
<text top="653" left="81" width="497" height="14" font="3">speed HiPPI network. The hardware was a gift from HP that considered PIAF as</text>
<text top="671" left="81" width="498" height="14" font="3">a very interesting development at the time. This subject will be developed in detail</text>
<text top="689" left="81" width="497" height="14" font="3">in Chap. 7. Most developments around PAW stopped in 1994 with an attempt to</text>
<text top="707" left="81" width="498" height="14" font="3">replace the KUIP system by a TK/TCl interface instead, but this interface had plenty</text>
<text top="725" left="81" width="288" height="14" font="3">of limitations and was never used in production.</text>
<text top="789" left="81" width="32" height="16" font="8"><b>1.10</b></text>
<text top="789" left="129" width="264" height="16" font="8"><b>Development of the ROOT System</b></text>
<text top="833" left="81" width="497" height="14" font="3">1994 was an interesting year, somehow the end of the old software world, but also</text>
<text top="851" left="81" width="498" height="14" font="3">the beginning of the “dark years”. By the end of the year the CERN Detector</text>
<text top="869" left="81" width="498" height="14" font="3">Research and Development Committee (DRDC) had approved the two major</text>
</page>
<page number="35" position="absolute" top="0" left="0" height="999" width="659">
<text top="55" left="81" width="6" height="12" font="4">1</text>
<text top="55" left="99" width="381" height="12" font="4">Technologies, Collaborations and Languages: 20 Years of HEP Computing</text>
<text top="55" left="566" width="13" height="12" font="4">35</text>
<text top="93" left="81" width="498" height="14" font="3">projects: RD44 (GEANT 4) and RD45 (object-oriented databases). After having</text>
<text top="111" left="81" width="498" height="14" font="3">managed the two major projects GEANT 3 and PAW for so many years, it was clear</text>
<text top="129" left="81" width="498" height="14" font="3">to me that I had to look into different directions. However, it was not easy to move</text>
<text top="147" left="81" width="498" height="14" font="3">to a different ﬁeld. My interest remained in the development of general purpose</text>
<text top="165" left="81" width="498" height="14" font="3">software systems, but what could the next one be? For a few months, I considered</text>
<text top="183" left="81" width="498" height="14" font="3">the possibility of joining the ATLAS experiment, but the leaders of the two Divisions</text>
<text top="201" left="81" width="497" height="14" font="3">involved in my move thought that my presence in ATLAS could be seen as an</text>
<text top="219" left="81" width="498" height="14" font="3">obstacle to their two new born projects. The Leader of the Computing Division,</text>
<text top="237" left="81" width="497" height="14" font="3">David Williams, invited me very politely to take a sabbatical leave to Berkeley or</text>
<text top="255" left="81" width="498" height="14" font="3">SLAC. It was clear to me that he was making a lot of effort to remove me from</text>
<text top="273" left="81" width="497" height="14" font="3">the software arena, at least for several months. In October 1994, he invited me to</text>
<text top="291" left="81" width="497" height="14" font="3">join the NA49 experiment, in desperate need of software manpower. Looking at my</text>
<text top="309" left="81" width="498" height="14" font="3">face, David certainly realised that I was not happy with his proposal and effectively</text>
<text top="327" left="81" width="497" height="14" font="3">I declined his offer. However after one week of further thinking, I realised that it</text>
<text top="345" left="81" width="498" height="14" font="3">was, maybe, an opportunity. All NA49 members had ofﬁces on CERN’s remote</text>
<text top="363" left="81" width="498" height="14" font="3">Prevessin site. Moving to this site was a good way of disappearing from the main</text>
<text top="381" left="81" width="497" height="14" font="3">CERN site and possibly getting an opportunity to start something new. I sent a</text>
<text top="399" left="81" width="497" height="14" font="3">mail to David, telling him that I was ﬁnally accepting his offer. This was also an</text>
<text top="417" left="81" width="497" height="14" font="3">opportunity to clean my ofﬁce. I took my HP workstation in my car with a few</text>
<text top="435" left="81" width="498" height="14" font="3">other documents and after a brief discussion with Andres Sandoval (NA49 software</text>
<text top="453" left="81" width="498" height="14" font="3">coordinator), I installed my system in a nice quiet ofﬁce with a view of a nice pine</text>
<text top="471" left="81" width="497" height="14" font="3">tree frequented by squirrels. This was indeed a good environment to think and to</text>
<text top="489" left="81" width="498" height="14" font="3">work hard. Like everybody else, I had followed a few courses about object-oriented</text>
<text top="507" left="81" width="124" height="14" font="3">programming, but C</text>
<text top="504" left="205" width="373" height="19" font="10">CC was new to me. I thought that the best way to learn the</text>
<text top="525" left="81" width="209" height="14" font="3">language was to re-implement in C</text>
<text top="522" left="290" width="262" height="19" font="10">CC a large subset of the HBOOK package.</text>
<text top="581" left="99" width="113" height="14" font="3">The long road to C</text>
<text top="577" left="212" width="301" height="19" font="10">CC and object-oriented. Revolution or evolution?</text>
<text top="635" left="99" width="480" height="14" font="3">I spent one month in a ﬁrst implementation that looked more like FORTRAN</text>
<text top="653" left="81" width="193" height="14" font="3">with semi colons than good C</text>
<text top="650" left="273" width="305" height="19" font="10">CC. Following some remarks from some CCC</text>
<text top="671" left="81" width="498" height="14" font="3">aﬁcionados, I jumped to the other extreme with an attempt to use a templated version</text>
<text top="689" left="81" width="497" height="14" font="3">of my classes to more elegantly support the different histogram types. In 1994, the</text>
<text top="707" left="81" width="39" height="14" font="3">best C</text>
<text top="704" left="120" width="459" height="19" font="10">CC compiler was the HP implementation. Igor Stepanov had implemented</text>
<text top="725" left="81" width="498" height="14" font="3">a template system while working with HP before his move to Silicon Graphics</text>
<text top="743" left="81" width="498" height="14" font="3">where he extended his system that eventually became the Standard Template Library</text>
<text top="761" left="81" width="107" height="14" font="3">accepted by the C</text>
<text top="758" left="188" width="391" height="19" font="10">CC committee. The ﬁrst compilers digesting STL appeared only</text>
<text top="779" left="81" width="498" height="14" font="3">much later (in 2002 at best) and support for templates in general was not appropriate.</text>
<text top="797" left="81" width="498" height="14" font="3">After one month of hard work with my templated implementation, I concluded</text>
<text top="815" left="81" width="498" height="14" font="3">that it was quite inefﬁcient and anyhow not portable to other compilers with no</text>
<text top="833" left="81" width="498" height="14" font="3">template support at all. In January 1995, I changed the templated version for a</text>
<text top="851" left="81" width="125" height="14" font="3">more conventional C</text>
<text top="848" left="205" width="373" height="19" font="10">CC implementation with a base class and derivatives for each</text>
<text top="869" left="81" width="93" height="14" font="3">histogram type.</text>
</page>
<page number="36" position="absolute" top="0" left="0" height="999" width="659">
<text top="55" left="81" width="13" height="12" font="4">36</text>
<text top="55" left="538" width="40" height="12" font="4">R. Brun</text>
<text top="93" left="99" width="480" height="14" font="3">I was quite happy with this new version that was competing performance wise</text>
<text top="111" left="81" width="498" height="14" font="3">pretty well with the old HBOOK FORTRAN version. I decided to make more</text>
<text top="129" left="81" width="469" height="14" font="3">developments around this initial exercise to get my hands familiar with C</text>
<text top="126" left="550" width="29" height="19" font="10">CC.</text>
<text top="147" left="81" width="497" height="14" font="3">ROOT was born. I found this name appropriate looking at the nice pine tree in</text>
<text top="165" left="81" width="498" height="14" font="3">front of me, and as some people suggested that this could be an acronym for “Rene</text>
<text top="183" left="81" width="498" height="14" font="3">object-oriented Technology”, I had nothing against the principle. However, in my</text>
<text top="201" left="81" width="498" height="14" font="3">mind ROOT meant a system with solid roots, on top of which you can grow more</text>
<text top="219" left="81" width="498" height="14" font="3">goodies. At the end of January 1995, Fons Rademakers, with whom I had been</text>
<text top="237" left="81" width="497" height="14" font="3">working on PAW and PIAF since 1990, joined me in NA49. Fons’s contract with</text>
<text top="255" left="81" width="498" height="14" font="3">CERN had expired, but because we had excellent working relations with HP, the</text>
<text top="273" left="81" width="497" height="14" font="3">company decided to sponsor Fons at CERN to work with me. This gift was initially</text>
<text top="291" left="81" width="498" height="14" font="3">for one year, but in fact Fons succeeded in various different ways to be funded by</text>
<text top="309" left="81" width="498" height="14" font="3">HP for many years until 2001 when he was ﬁnally offered a CERN position. Thanks</text>
<text top="327" left="81" width="498" height="14" font="3">to Fons’s invaluable contribution, we spent several months designing, coding and</text>
<text top="345" left="81" width="268" height="14" font="3">recoding a ﬁrst version of the ROOT system.</text>
<text top="363" left="99" width="480" height="14" font="3">In November 1995, I presented the ROOT system in the Computing Division</text>
<text top="381" left="81" width="498" height="14" font="3">auditorium, completely crowded for this event. Fons and I had been ignored for</text>
<text top="399" left="81" width="498" height="14" font="3">about one year. Suddenly, several people realised that we were back and our</text>
<text top="417" left="81" width="498" height="14" font="3">new product generated considerable interest. In the ﬁrst few months of 1996, the</text>
<text top="435" left="81" width="408" height="14" font="3">Computing Division decided to launch another project called LHC</text>
<text top="432" left="488" width="35" height="19" font="10">CC <a href="pdfxml.html#53">[</a></text>
<text top="435" left="523" width="15" height="14" font="9"><a href="pdfxml.html#53">72</a></text>
<text top="435" left="538" width="40" height="14" font="3">], with</text>
<text top="453" left="81" width="498" height="14" font="3">the clear objective to counter the development and the adoption of ROOT, and this</text>
<text top="471" left="81" width="498" height="14" font="3">was for us the beginning of a lot of trouble. In July 1996, the CERN director for</text>
<text top="489" left="81" width="498" height="14" font="3">computing, Lorenzo Foa, sent a letter to the four LHC experiment spokespersons</text>
<text top="507" left="81" width="498" height="14" font="3">stating that the ROOT project was only a private initiative that was accepted in the</text>
<text top="525" left="81" width="498" height="14" font="3">context of NA49, but that no support would be given to this product in the context</text>
<text top="543" left="81" width="356" height="14" font="3">of the LHC. In fact, this letter was an excellent thing for us.</text>
<text top="599" left="99" width="461" height="14" font="3">ROOT is ofﬁcially forbidden at CERN for LHC, becoming the underdog of</text>
<text top="617" left="99" width="278" height="14" font="3">LHC computing, both a curse and a challenge.</text>
<text top="671" left="99" width="480" height="14" font="3">All the other ofﬁcial projects were run under the umbrella of the LHC Computing</text>
<text top="689" left="81" width="498" height="14" font="3">Board (LCB) chaired by Mirco Mazzucato. The “ofﬁcial” projects had to report on</text>
<text top="707" left="81" width="498" height="14" font="3">a regular basis to the LCB. The LCB members had been active in their previous</text>
<text top="725" left="81" width="498" height="14" font="3">careers either as software coordinators or with other managerial duties. However,</text>
<text top="743" left="81" width="498" height="14" font="3">they had no experience with the new style software and could only rely on the</text>
<text top="761" left="81" width="498" height="14" font="3">experts’ opinions that were all in the ofﬁcial projects. As a result, over the course of a</text>
<text top="779" left="81" width="498" height="14" font="3">few years, we witnessed an ineffective refereeing mechanism with reports indicating</text>
<text top="797" left="81" width="497" height="14" font="3">that the projects were making good progress, but nobody in this committee made a</text>
<text top="815" left="81" width="497" height="14" font="3">serious risk analysis until, in the late 1990s, it was clear that all projects were late,</text>
<text top="833" left="81" width="497" height="14" font="3">with products impossible to use and many more problems. In particular when the</text>
<text top="851" left="81" width="30" height="14" font="3">LHC</text>
<text top="848" left="111" width="468" height="19" font="10">CC project was stopped in 2002, it would have been interesting to see a report</text>
<text top="869" left="81" width="283" height="14" font="3">objectively analysing the reasons for its failure.</text>
</page>
<page number="37" position="absolute" top="0" left="0" height="999" width="659">
<text top="55" left="81" width="6" height="12" font="4">1</text>
<text top="55" left="99" width="381" height="12" font="4">Technologies, Collaborations and Languages: 20 Years of HEP Computing</text>
<text top="55" left="566" width="13" height="12" font="4">37</text>
<text top="93" left="99" width="480" height="14" font="3">Meanwhile we were developing ROOT in many directions. Our previous expe-</text>
<text top="111" left="81" width="498" height="14" font="3">rience in the development of large systems was a great help. In particular we were</text>
<text top="129" left="81" width="498" height="14" font="3">well aware of the limitations and main user criticisms against our previous projects.</text>
<text top="147" left="81" width="498" height="14" font="3">One of the key areas where we invested a lot of thinking was the Object persistency</text>
<text top="165" left="81" width="498" height="14" font="3">system. The ZEBRA I/O system had a major drawback making the implementation</text>
<text top="183" left="81" width="498" height="14" font="3">complex. Because of its FORTRAN heritage, direct access ﬁles had to be created</text>
<text top="201" left="81" width="498" height="14" font="3">with ﬁxed block sizes (typically 4 kiloBytes). When writing out data structures,</text>
<text top="219" left="81" width="498" height="14" font="3">we had designed a complex “padding” system when writing arrays across block</text>
<text top="237" left="81" width="498" height="14" font="3">boundaries, in particular when streaming double precision ﬂoating point numbers.</text>
<text top="255" left="81" width="83" height="14" font="3">With C and C</text>
<text top="252" left="164" width="415" height="19" font="10">CC I/O, we could remove this complexity and simply write variable</text>
<text top="273" left="81" width="497" height="14" font="3">length blocks, leaving the task to the OS to ﬂush out memory buffers to disk at the</text>
<text top="291" left="81" width="497" height="14" font="3">most appropriate time. The layout of a ROOT ﬁle was much simpler and could be</text>
<text top="309" left="81" width="359" height="14" font="3">described in a one page document. Of course, streaming C</text>
<text top="306" left="440" width="138" height="19" font="10">CC classes turned out</text>
<text top="327" left="81" width="498" height="14" font="3">to be far more complex than writing ZEBRA banks with embedded I/O descriptors.</text>
<text top="345" left="81" width="322" height="14" font="3">To achieve this, one must have a description of the C</text>
<text top="342" left="402" width="176" height="19" font="10">CC class, including the type</text>
<text top="363" left="81" width="497" height="14" font="3">and the offsets of each data member within an object. In a ﬁrst phase in 1996, we</text>
<text top="381" left="81" width="498" height="14" font="3">decided to generate the necessary code to stream objects by using the information</text>
<text top="399" left="81" width="115" height="14" font="3">coming from our C</text>
<text top="396" left="196" width="138" height="19" font="10">CC interpreter CINT <a href="pdfxml.html#52">[</a></text>
<text top="399" left="334" width="15" height="14" font="9"><a href="pdfxml.html#52">43</a></text>
<text top="399" left="349" width="9" height="14" font="3">].</text>
<text top="417" left="99" width="480" height="14" font="3">We implemented a tool called rootcint to do this job and this technique survived</text>
<text top="435" left="81" width="497" height="14" font="3">a few years. The technique was robust and simple to explain and use. We did</text>
<text top="453" left="81" width="498" height="14" font="3">not develop the CINT system ourselves. Via our HP contacts, we were informed</text>
<text top="471" left="81" width="379" height="14" font="3">that Masaharu Goto from HP Japan had already developed a C</text>
<text top="468" left="460" width="118" height="19" font="10">CC interpreter. We</text>
<text top="489" left="81" width="497" height="14" font="3">invited Masa to CERN for a ﬁrst visit in April 1996 and we immediately took the</text>
<text top="507" left="81" width="239" height="14" font="3">decision to replace our very primitive C</text>
<text top="504" left="320" width="259" height="19" font="10">CC interpreter by Masa’s implementation.</text>
<text top="525" left="81" width="498" height="14" font="3">We have continued our cooperation with Masa since. While implementing the</text>
<text top="543" left="81" width="497" height="14" font="3">ROOT I/O system, we were also following closely the RD45 project and in</text>
<text top="561" left="81" width="498" height="14" font="3">particular looking at the way people were using the Objectivity product, the ﬂagship</text>
<text top="579" left="81" width="84" height="14" font="3">of the project.</text>
<text top="597" left="99" width="480" height="14" font="3">Objectivity was writing each object to a ﬁle with an offset (16 bits) into one page,</text>
<text top="615" left="81" width="498" height="14" font="3">itself addressed with a 16 bits quantity inside a segment. Each object had a unique</text>
<text top="633" left="81" width="384" height="14" font="3">64 bits identiﬁer (the OID) that was a member of a base class</text>
<text top="634" left="470" width="72" height="12" font="13">OOobject</text>
<text top="633" left="547" width="31" height="14" font="3">to be</text>
<text top="651" left="81" width="498" height="14" font="3">included into all user persistent classes. This trivial and naive mechanism implied</text>
<text top="669" left="81" width="498" height="14" font="3">that the objects on disk were a direct copy of the objects in memory. Objectivity</text>
<text top="687" left="81" width="498" height="14" font="3">did not support an automatic class schema evolution mechanism. A change in a</text>
<text top="705" left="81" width="497" height="14" font="3">class schema implied a complete copy of the database referencing these classes. In</text>
<text top="723" left="81" width="498" height="14" font="3">addition the database system was a central system with a locking mechanism that</text>
<text top="741" left="81" width="498" height="14" font="3">was extremely expensive when supporting concurrent writes and reads. Sometimes</text>
<text top="759" left="81" width="498" height="14" font="3">one may have a doubt concerning the quality of an algorithm. One of the nice things</text>
<text top="777" left="81" width="371" height="14" font="3">with software is that one can always propose a better solution.</text>
<text top="833" left="99" width="461" height="14" font="3">Object-oriented Database Systems are not suited for HEP data. ROOT and its</text>
<text top="851" left="99" width="323" height="14" font="3">lightweight I/O system has emerged as a clear winner.</text>
</page>
<page number="38" position="absolute" top="0" left="0" height="999" width="659">
<text top="55" left="81" width="13" height="12" font="4">38</text>
<text top="55" left="538" width="40" height="12" font="4">R. Brun</text>
<text top="93" left="99" width="480" height="14" font="3">However, in the case of Objectivity, it was clear from day one that the principle</text>
<text top="111" left="81" width="498" height="14" font="3">was wrong. In the ROOT team we were totally convinced that the system would</text>
<text top="129" left="81" width="497" height="14" font="3">fail and could not understand that a more “objective” analysis was not done. After</text>
<text top="147" left="81" width="498" height="14" font="3">having expressed our own criticisms (in particular at a dedicated LCB meeting in</text>
<text top="165" left="81" width="497" height="14" font="3">Padova in 1996), we decided to keep quiet and let people come sooner or later to</text>
<text top="183" left="81" width="125" height="14" font="3">the same conclusion.</text>
<text top="201" left="99" width="480" height="14" font="3">The BaBar collaboration at SLAC had been the ﬁrst large collaboration deciding</text>
<text top="219" left="81" width="75" height="14" font="3">to move to C</text>
<text top="216" left="156" width="423" height="19" font="10">CC in 1995. Following this courageous decision, they had to face many</text>
<text top="237" left="81" width="498" height="14" font="3">problems and in particular the implementation of Objectivity in their data man-</text>
<text top="255" left="81" width="498" height="14" font="3">agement system. They received good help from the Objectivity company located</text>
<text top="273" left="81" width="498" height="14" font="3">a few miles away, but nevertheless more and more problems were accumulating.</text>
<text top="291" left="81" width="334" height="14" font="3">This fact was quite well known in 1998 when the CDF <a href="pdfxml.html#52">[</a></text>
<text top="291" left="415" width="15" height="14" font="9"><a href="pdfxml.html#52">50</a></text>
<text top="291" left="429" width="4" height="14" font="3"><a href="pdfxml.html#52">,</a></text>
<text top="291" left="435" width="15" height="14" font="9"><a href="pdfxml.html#52">51</a></text>
<text top="291" left="450" width="129" height="14" font="3"><a href="pdfxml.html#52">] </a>and D0 experiments</text>
<text top="309" left="81" width="497" height="14" font="3">decided to investigate their software approach for the so-called RUN II that was</text>
<text top="327" left="81" width="498" height="14" font="3">supposed to start in 2001 at FNAL. These two experiments created two projects: one</text>
<text top="345" left="81" width="498" height="14" font="3">aiming to ﬁnd a solution for object persistency, and the second one for interactive</text>
<text top="363" left="81" width="498" height="14" font="3">data analysis. They made calls for proposals and analysed three solutions for each.</text>
<text top="381" left="81" width="497" height="14" font="3">During the CHEP conference in Chicago in September 1998, they announced that</text>
<text top="399" left="81" width="498" height="14" font="3">ROOT had been selected as the solution for the two projects. This announcement</text>
<text top="417" left="81" width="498" height="14" font="3">was immediately followed by a similar announcement from the four experiments</text>
<text top="435" left="81" width="295" height="14" font="3">at the Relativistic Heavy Ion Collider (RHIC) <a href="pdfxml.html#52">[</a></text>
<text top="435" left="376" width="15" height="14" font="9"><a href="pdfxml.html#52">57</a></text>
<text top="435" left="391" width="187" height="14" font="3"><a href="pdfxml.html#52">] </a>at the Brookhaven National</text>
<text top="453" left="81" width="75" height="14" font="3">Laboratory <a href="pdfxml.html#52">[</a></text>
<text top="453" left="156" width="15" height="14" font="9"><a href="pdfxml.html#52">56</a></text>
<text top="453" left="171" width="9" height="14" font="3"><a href="pdfxml.html#52">].</a></text>
<text top="471" left="99" width="479" height="14" font="3">These announcements, of course, generated a big turmoil at CERN. ROOT was</text>
<text top="489" left="81" width="498" height="14" font="3">becoming an embarrassing system that was now difﬁcult to ignore. The following</text>
<text top="507" left="81" width="497" height="14" font="3">year saw the ﬁrst signs of cracks in the ofﬁcial Objectivity-based line in BaBar.</text>
<text top="525" left="81" width="497" height="14" font="3">Marcel Kunze had developed a highly controversial ROOT-based analysis system</text>
<text top="543" left="81" width="498" height="14" font="3">called PAF (Pico Analysis Framework) that was orders of magnitude faster than</text>
<text top="561" left="81" width="497" height="14" font="3">the ofﬁcial tools reading data directly from Objectivity. At the same time, the</text>
<text top="579" left="81" width="498" height="14" font="3">Objectivity supporters at CERN and SLAC were engaged in a difﬁcult negotiation</text>
<text top="597" left="81" width="498" height="14" font="3">with the company to get additional features badly missing in the system. With the 64</text>
<text top="615" left="81" width="498" height="14" font="3">bits OID, it was not possible to create large databases. A request to increase the OID</text>
<text top="633" left="81" width="498" height="14" font="3">to 128 bits was never implemented (in reality this would have been quite difﬁcult</text>
<text top="651" left="81" width="497" height="14" font="3">to implement in an efﬁcient way). Meanwhile, BaBar moved from Objectivity to</text>
<text top="669" left="81" width="497" height="14" font="3">a ROOT solution and Andy Hanushevsky, the most experienced Objectivity user</text>
<text top="687" left="81" width="246" height="14" font="3">started an implementation of the xrootd <a href="pdfxml.html#53">[</a></text>
<text top="687" left="326" width="15" height="14" font="9"><a href="pdfxml.html#53">73</a></text>
<text top="687" left="341" width="237" height="14" font="3">] server. This will be described in detail</text>
<text top="705" left="81" width="72" height="14" font="3">in Chap. 10.</text>
<text top="723" left="99" width="480" height="14" font="3">In the fall of 1999, the CERN Director for Computing, Hans Hoffmann realised</text>
<text top="741" left="81" width="498" height="14" font="3">that there was a potential problem in the medium term and he set up a general</text>
<text top="759" left="81" width="497" height="14" font="3">software review that lasted several months. We made a few presentations of ROOT</text>
<text top="777" left="81" width="498" height="14" font="3">to the CMS and ATLAS collaborations. ATLAS launched its own software review</text>
<text top="795" left="81" width="498" height="14" font="3">committee in January 2000. During this review I stressed the importance of tools</text>
<text top="813" left="81" width="497" height="14" font="3">to generate object dictionaries for object persistency, interpreters and graphical user</text>
<text top="831" left="81" width="427" height="14" font="3">interfaces. Not many people understood all the implications at the time.</text>
</page>
<page number="39" position="absolute" top="0" left="0" height="999" width="659">
<text top="55" left="81" width="6" height="12" font="4">1</text>
<text top="55" left="99" width="381" height="12" font="4">Technologies, Collaborations and Languages: 20 Years of HEP Computing</text>
<text top="55" left="566" width="13" height="12" font="4">39</text>
<text top="113" left="99" width="461" height="14" font="3">ROOT success comes from outside. The major experiments running in the</text>
<text top="131" left="99" width="319" height="14" font="3">U.S. decide to adopt ROOT as a software framework.</text>
<text top="185" left="99" width="480" height="14" font="3">Most people were still thinking in terms of data dictionaries and a project was</text>
<text top="203" left="81" width="498" height="14" font="3">launched by an ATLAS team from LAPP in Annecy to create a new language</text>
<text top="221" left="81" width="498" height="14" font="3">ADL (ATLAS Description Language). This project went on for several months</text>
<text top="239" left="81" width="497" height="14" font="3">and was then stopped when the collaboration realised that the delivery of a</text>
<text top="257" left="81" width="497" height="14" font="3">satisfactory system would not be in time. Instead the collaboration decided to use the</text>
<text top="275" left="81" width="56" height="14" font="3">GAUDI <a href="pdfxml.html#52">[</a></text>
<text top="275" left="136" width="15" height="14" font="9"><a href="pdfxml.html#52">37</a></text>
<text top="275" left="151" width="427" height="14" font="3"><a href="pdfxml.html#52">] </a>framework developed by the LHCb collaboration. However GAUDI in</text>
<text top="293" left="81" width="497" height="14" font="3">2001 was a very primitive system, essentially an empty shell. ATLAS decided to</text>
<text top="311" left="81" width="272" height="14" font="3">use GAUDI as a model for their ATHENA <a href="pdfxml.html#52">[</a></text>
<text top="311" left="353" width="15" height="14" font="9"><a href="pdfxml.html#52">27</a></text>
<text top="311" left="368" width="211" height="14" font="3"><a href="pdfxml.html#52">] </a>framework and to embark on the</text>
<text top="329" left="81" width="498" height="14" font="3">design of an extremely complex system called STOREGATE that was deﬁning a</text>
<text top="347" left="81" width="498" height="14" font="3">protocol to put/get objects in a store. The system is still alive today, a big nuisance</text>
<text top="365" left="81" width="498" height="14" font="3">to most users and one of the reasons why ATLAS users are systematically looking</text>
<text top="383" left="81" width="272" height="14" font="3">for ATHENA-free solutions for data analysis.</text>
<text top="401" left="99" width="258" height="14" font="3">In 2002, the LHC Computing Grid project <a href="pdfxml.html#52">[</a></text>
<text top="401" left="357" width="15" height="14" font="9"><a href="pdfxml.html#52">34</a></text>
<text top="401" left="372" width="207" height="14" font="3"><a href="pdfxml.html#52">] </a>(LCG, see Chap. 3) was launched</text>
<text top="419" left="81" width="498" height="14" font="3">with a considerable amount of resources. About 80 new people were injected for</text>
<text top="437" left="81" width="498" height="14" font="3">LCG Phase 1. A few Research Technical Assessment Group (RTAG) meetings were</text>
<text top="455" left="81" width="315" height="14" font="3">organised and by June 2002, the so-called Blueprint <a href="pdfxml.html#52">[</a></text>
<text top="455" left="396" width="15" height="14" font="9"><a href="pdfxml.html#52">35</a></text>
<text top="455" left="411" width="167" height="14" font="3"><a href="pdfxml.html#52">] </a>RTAG was published. This</text>
<text top="473" left="81" width="498" height="14" font="3">document was the result of a compromise between the pro-GAUDI and the previous</text>
<text top="491" left="81" width="498" height="14" font="3">proponents of the Objectivity system. ROOT was not excluded from the picture,</text>
<text top="509" left="81" width="498" height="14" font="3">but considered mainly as one of many possible alternatives to Objectivity. In LCG</text>
<text top="527" left="81" width="498" height="14" font="3">Phase 1 (2002–2005), we had the so-called “user-provider” relationship between</text>
<text top="545" left="81" width="176" height="14" font="3">ROOT and the other projects.</text>
<text top="563" left="99" width="480" height="14" font="3">Several projects were launched in 2002 under the coordination of Torre Wenaus</text>
<text top="581" left="81" width="183" height="14" font="3">from Brookhaven. The SEAL <a href="pdfxml.html#52">[</a></text>
<text top="581" left="264" width="15" height="14" font="9"><a href="pdfxml.html#52">47</a></text>
<text top="581" left="279" width="215" height="14" font="3"><a href="pdfxml.html#52">] </a>project was supposed to deliver a C</text>
<text top="578" left="494" width="85" height="19" font="10">CC reﬂection</text>
<text top="599" left="81" width="99" height="14" font="3">system. The PI <a href="pdfxml.html#52">[</a></text>
<text top="599" left="180" width="15" height="14" font="9"><a href="pdfxml.html#52">46</a></text>
<text top="599" left="195" width="383" height="14" font="3">] project, was the Physicist Interface without specifying exactly</text>
<text top="617" left="81" width="187" height="14" font="3">what that meant. The POOL <a href="pdfxml.html#52">[</a></text>
<text top="617" left="268" width="15" height="14" font="9"><a href="pdfxml.html#52">36</a></text>
<text top="617" left="283" width="296" height="14" font="3"><a href="pdfxml.html#52">] </a>project was a neutral software layer on top of</text>
<text top="635" left="81" width="498" height="14" font="3">Objectivity, or ROOT or Oracle. In addition POOL had to deliver a ﬁle catalogue</text>
<text top="653" left="81" width="45" height="14" font="3">system.</text>
<text top="671" left="99" width="480" height="14" font="3">At the end of LCG Phase 1, the Objectivity system had been abandoned and</text>
<text top="689" left="81" width="497" height="14" font="3">ROOT was the only serious alternative for object persistency and data analysis. In</text>
<text top="707" left="81" width="498" height="14" font="3">LCG Phase 2, ROOT became fully integrated in the LCG planning and substantial</text>
<text top="725" left="81" width="498" height="14" font="3">manpower resources were ﬁnally allocated to the project. The PI project had never</text>
<text top="743" left="81" width="497" height="14" font="3">produced anything tangible. The main product of the SEAL project, REFLEX, was</text>
<text top="761" left="81" width="498" height="14" font="3">supposed to be integrated in ROOT as a replacement of the CINT dictionary. This</text>
<text top="779" left="81" width="498" height="14" font="3">integration is turning out to be much more difﬁcult than foreseen initially, and the</text>
<text top="797" left="81" width="173" height="14" font="3">project has been put on hold.</text>
<text top="815" left="99" width="480" height="14" font="3">The above may give the impression that substantial time and resources have been</text>
<text top="833" left="81" width="498" height="14" font="3">lost in parallel developments. However this strategy, even if not the most “elegant”,</text>
<text top="851" left="81" width="497" height="14" font="3">may well have been the best possible. For the ROOT team, it was great to be a</text>
<text top="869" left="81" width="498" height="14" font="3">challenger for many years, without the burden of ofﬁcial reports or internal reviews.</text>
</page>
<page number="40" position="absolute" top="0" left="0" height="999" width="659">
<text top="55" left="81" width="13" height="12" font="4">40</text>
<text top="55" left="538" width="40" height="12" font="4">R. Brun</text>
<text top="93" left="81" width="498" height="14" font="3">We greatly beneﬁted from the numerous comments and criticisms that we took into</text>
<text top="111" left="81" width="206" height="14" font="3">account in our successive releases.</text>
<text top="129" left="99" width="480" height="14" font="3">The number of people using the ROOT system increased drastically after 1998</text>
<text top="147" left="81" width="498" height="14" font="3">and the system spread to other branches of science and into the ﬁnancial world too.</text>
<text top="165" left="81" width="479" height="14" font="3">In 2010, we had on average 12,000 downloads per month of our binary releases.</text>
<text top="183" left="99" width="480" height="14" font="3">ROOT has been in constant development and there are always requests for new</text>
<text top="201" left="81" width="497" height="14" font="3">features or improvements. Many developments were made in the I/O system. We</text>
<text top="219" left="81" width="498" height="14" font="3">moved from the primitive generated streamers to a system totally driven from our</text>
<text top="237" left="81" width="10" height="14" font="3">C</text>
<text top="234" left="91" width="488" height="19" font="10">CC reﬂection system in memory. We implemented support for automatic schema</text>
<text top="255" left="81" width="498" height="14" font="3">evolution and are still improving it. This is an essential feature when processing</text>
<text top="273" left="81" width="497" height="14" font="3">data sets generated by multiple versions of user classes. New data members can</text>
<text top="291" left="81" width="498" height="14" font="3">be added, removed, their type modiﬁed, moved to a base class or the inheritance</text>
<text top="309" left="81" width="103" height="14" font="3">scheme changed.</text>
<text top="365" left="99" width="461" height="14" font="3">The storage model is the heart of ROOT and one of the main reasons for its</text>
<text top="383" left="99" width="461" height="14" font="3">success. Schema evolution is an essential element of it, for a project that has</text>
<text top="401" left="99" width="121" height="14" font="3">to last several years.</text>
<text top="455" left="99" width="480" height="14" font="3">The main ROOT storage model is a Tree. With Trees, the database containers are</text>
<text top="473" left="81" width="498" height="14" font="3">automatically built following the user object model. A Tree is the natural extension</text>
<text top="491" left="81" width="498" height="14" font="3">of the concept of Column-Wise n-tuple into the object-oriented world. Rows are</text>
<text top="509" left="81" width="498" height="14" font="3">no longer vectors of entities but classes, whose data members take the role of</text>
<text top="527" left="81" width="497" height="14" font="3">the entities in the n-tuple. The top level object is split into as many branches as</text>
<text top="545" left="81" width="498" height="14" font="3">data members. If a member is a collection, for instance an STL vector of objects,</text>
<text top="563" left="81" width="498" height="14" font="3">new sub-branches are created corresponding to the members in the STL vector</text>
<text top="581" left="81" width="498" height="14" font="3">class. This model has at least two advantages compared to conventional object</text>
<text top="599" left="81" width="498" height="14" font="3">streaming models as in Java: it is possible to read selectively only the branches</text>
<text top="617" left="81" width="498" height="14" font="3">used by the analysis algorithm and, because the leaves of the branches contain</text>
<text top="635" left="81" width="498" height="14" font="3">more homogeneous data types, a gain (typically 25%) is obtained during the data</text>
<text top="653" left="81" width="484" height="14" font="3">compression. The Tree split mode is now the standard model for all experiments.</text>
<text top="671" left="99" width="480" height="14" font="3">In 2002, the QT graphical user interface system had been the recommended GUI</text>
<text top="689" left="81" width="497" height="14" font="3">toolkit. However, today, only a few applications use QT directly. ROOT has an</text>
<text top="707" left="81" width="498" height="14" font="3">interface to QT, but the vast majority prefer to remain QT free and use now the</text>
<text top="725" left="81" width="336" height="14" font="3">native GUI toolkit in ROOT that works on all platforms.</text>
<text top="789" left="81" width="31" height="16" font="8"><b>1.11</b></text>
<text top="789" left="129" width="333" height="16" font="8"><b>Frameworks and Programme Management</b></text>
<text top="833" left="81" width="498" height="14" font="3">The development of software systems has always required discipline and conven-</text>
<text top="851" left="81" width="498" height="14" font="3">tions: a common code management and versioning system, a common data structure</text>
<text top="869" left="81" width="498" height="14" font="3">management system, a common data persistency system, a common user interface</text>
</page>
<page number="41" position="absolute" top="0" left="0" height="999" width="659">
<text top="55" left="81" width="6" height="12" font="4">1</text>
<text top="55" left="99" width="381" height="12" font="4">Technologies, Collaborations and Languages: 20 Years of HEP Computing</text>
<text top="55" left="566" width="13" height="12" font="4">41</text>
<text top="93" left="81" width="498" height="14" font="3">(command line or graphical), common mathematical libraries, etc. With the growing</text>
<text top="111" left="81" width="498" height="14" font="3">size of the experiments, common conventions and systems to manage the storage</text>
<text top="129" left="81" width="498" height="14" font="3">and access in memory of more and more complex data structures and algorithms</text>
<text top="147" left="81" width="498" height="14" font="3">has become a key requirement to avoid anarchy. For many years, this has been the</text>
<text top="165" left="81" width="497" height="14" font="3">task of dedicated systems such as HYDRA, ZBOOK, ZEBRA or BOS. Access to</text>
<text top="183" left="81" width="498" height="14" font="3">one data structure or data set was achieved by following pointers in a hierarchical</text>
<text top="201" left="81" width="498" height="14" font="3">data structure or by requesting this structure by name to a central service. With the</text>
<text top="219" left="81" width="498" height="14" font="3">advent of object-oriented programming, and parallel developments by independent</text>
<text top="237" left="81" width="498" height="14" font="3">teams developing the sub-detector systems (more on this in Chap. 5), the access</text>
<text top="255" left="81" width="497" height="14" font="3">to data structures has become more complicated. It became essential to use a</text>
<text top="273" left="81" width="498" height="14" font="3">publish-and-retrieve mechanism common to all sub-components, like a white board.</text>
<text top="291" left="81" width="498" height="14" font="3">This system must be such that accessing data structures across sub-components</text>
<text top="309" left="81" width="498" height="14" font="3">should not imply the inclusion of the corresponding class declarations, otherwise a</text>
<text top="327" left="81" width="498" height="14" font="3">simple change in one class layout would imply a complete recompilation of all sub-</text>
<text top="345" left="81" width="498" height="14" font="3">components. Different solutions have been implemented by the experiments using</text>
<text top="363" left="81" width="498" height="14" font="3">a mixture of access by name in class collections assuming some base class. These</text>
<text top="381" left="81" width="498" height="14" font="3">have also the advantage that it becomes possible to browse complex data structures</text>
<text top="399" left="81" width="498" height="14" font="3">via a graphical user interface. In a similar way, most modern frameworks provide a</text>
<text top="417" left="81" width="498" height="14" font="3">way to describe a hierarchy of algorithms and to browse them too. The class libraries</text>
<text top="435" left="81" width="394" height="14" font="3">including these algorithms can be dynamically loaded at run time.</text>
<text top="491" left="99" width="461" height="14" font="3">Access to complicated data structures is one of the major challenges in</text>
<text top="509" left="99" width="461" height="14" font="3">modern HEP computing. Object-oriented programming offers tools towards a</text>
<text top="527" left="99" width="328" height="14" font="3">solution, but probably there is still a lot of work ahead.</text>
<text top="581" left="99" width="480" height="14" font="3">The GAUDI system developed by LHCb, and also used sometimes by ATLAS,</text>
<text top="599" left="81" width="498" height="14" font="3">is an example of a framework with tools to manage data structures and algorithms</text>
<text top="617" left="81" width="497" height="14" font="3">in memory. ROOT itself provides a TFolder class to organise objects and a TTask</text>
<text top="635" left="81" width="497" height="14" font="3">class to organise a hierarchy of algorithms. Much work still remains to be done in</text>
<text top="653" left="81" width="497" height="14" font="3">this area such that the infrastructure can also be used in parallel environments, in</text>
<text top="671" left="81" width="498" height="14" font="3">particular multi-threaded systems that are required to take advantage of multi-core</text>
<text top="689" left="81" width="498" height="14" font="3">CPU systems. The design of complex data structures is a non trivial task. One of the</text>
<text top="707" left="81" width="498" height="14" font="3">advantages of object-oriented programming has been to group in a class both data</text>
<text top="725" left="81" width="498" height="14" font="3">and functions. However it is a common requirement that objects generated by one</text>
<text top="743" left="81" width="498" height="14" font="3">programme have to be used by a different programme without having to link with</text>
<text top="761" left="81" width="498" height="14" font="3">all the libraries referenced by the code in this class. Most experiments came to the</text>
<text top="779" left="81" width="498" height="14" font="3">conclusion that basic objects shared by many components and a chain of different</text>
<text top="797" left="81" width="498" height="14" font="3">programmes should be only data objects with a minimum dependency on the code.</text>
<text top="815" left="81" width="498" height="14" font="3">The services to operate on these data objects can be loaded on demand via plug-in</text>
<text top="833" left="81" width="498" height="14" font="3">managers. Invoking these services is typically achieved via abstract interfaces that</text>
<text top="851" left="81" width="498" height="14" font="3">allow multiple and competing implementations of these services. The frameworks</text>
<text top="869" left="81" width="498" height="14" font="3">of the current large experiments in HEP have grown to an extent where only very</text>
</page>
<page number="42" position="absolute" top="0" left="0" height="999" width="659">
	<fontspec id="17" size="16" family="Times" color="#131413"/>
<text top="55" left="81" width="13" height="12" font="4">42</text>
<text top="55" left="538" width="40" height="12" font="4">R. Brun</text>
<text top="93" left="81" width="498" height="14" font="3">few people understand the global structure, and installing a new release of these</text>
<text top="111" left="81" width="498" height="14" font="3">frameworks is a major task and may represent several days of frustrating work.</text>
<text top="129" left="81" width="497" height="14" font="3">One of the reasons is the excess of dependencies on external libraries and tools.</text>
<text top="147" left="81" width="498" height="14" font="3">This situation is really bad as it prevents porting the experiment software on new</text>
<text top="165" left="81" width="497" height="14" font="3">platforms and compilers in a short amount of time. Some large experiments are</text>
<text top="183" left="81" width="497" height="14" font="3">only able to run on a speciﬁc version of Linux with access to a common ﬁle system</text>
<text top="201" left="81" width="498" height="14" font="3">(AFS) and with one version of the compiler. As a result, there is a growing demand</text>
<text top="219" left="81" width="498" height="14" font="3">to provide a small subset of these frameworks for the vast majority of users who</text>
<text top="237" left="81" width="497" height="14" font="3">simply want to process data sets for physics analysis. Ideally users would like to</text>
<text top="255" left="81" width="327" height="14" font="3">analyse their data by using the ROOT framework only.</text>
<text top="319" left="81" width="32" height="16" font="8"><b>1.12</b></text>
<text top="319" left="129" width="175" height="16" font="8"><b>Trends and Challenges</b></text>
<text top="363" left="81" width="498" height="14" font="3">If we look at the past few decades, we see a big latency in the processes of collecting</text>
<text top="381" left="81" width="498" height="14" font="3">requirements, making a design, implementation and the effective use of any system.</text>
<text top="399" left="81" width="498" height="14" font="3">It takes nearly 10 years to develop large systems like ROOT and GEANT 4, then</text>
<text top="417" left="81" width="498" height="14" font="3">it takes a few more years for users to become familiar with the new products and</text>
<text top="435" left="81" width="498" height="14" font="3">yet a few more years to see de facto standards emerging. For example the LHC</text>
<text top="453" left="81" width="497" height="14" font="3">experiments are now discovering the beneﬁts of the “split-mode” style I/O with the</text>
<text top="471" left="81" width="321" height="14" font="3">ROOT Trees designed in 1995 and promoted in 1997.</text>
<text top="489" left="99" width="480" height="14" font="3">This indeed poses a problem because while development cycles are so long,</text>
<text top="507" left="81" width="498" height="14" font="3">evolution in the Information Technology world happens at an amazing pace, and</text>
<text top="525" left="81" width="498" height="14" font="3">seems to be accelerating. A product started today will be ready in several years, and</text>
<text top="543" left="81" width="498" height="14" font="3">so one has to use a “crystal ball” to guess which will be the technology that, while</text>
<text top="561" left="81" width="497" height="14" font="3">offering a solid development platform today, will still be viable when the product is</text>
<text top="579" left="81" width="498" height="14" font="3">deployed. This exercise has proved very difﬁcult, as can be seen by a few examples.</text>
<text top="643" left="81" width="45" height="16" font="17"><i><b>1.12.1</b></i></text>
<text top="643" left="143" width="182" height="16" font="17"><i><b>The Crystal Ball in 1987</b></i></text>
<text top="687" left="81" width="49" height="14" font="2"><b>1.12.1.1</b></text>
<text top="687" left="144" width="156" height="14" font="2"><b>Programming Language</b></text>
<text top="723" left="81" width="498" height="14" font="3">FORTRAN 90X seemed the obvious way to go. It was unthinkable that HEP could</text>
<text top="741" left="81" width="497" height="14" font="3">move to another language than FORTRAN. We were all hoping that the FORTRAN</text>
<text top="759" left="81" width="498" height="14" font="3">committee would come with enough language extensions or new constructs that one</text>
<text top="777" left="81" width="498" height="14" font="3">could consider a simple replacement or upgrade of our data structure management</text>
<text top="795" left="81" width="130" height="14" font="3">systems like ZEBRA.</text>
<text top="850" left="99" width="461" height="14" font="3">1987: FORTRAN, OSI Networking protocols and Massively Parallel</text>
<text top="868" left="99" width="180" height="14" font="3">Processing (MPP) computing.</text>
</page>
<page number="43" position="absolute" top="0" left="0" height="999" width="659">
<text top="55" left="81" width="6" height="12" font="4">1</text>
<text top="55" left="99" width="381" height="12" font="4">Technologies, Collaborations and Languages: 20 Years of HEP Computing</text>
<text top="55" left="566" width="13" height="12" font="4">43</text>
<text top="93" left="81" width="49" height="14" font="2"><b>1.12.1.2</b></text>
<text top="93" left="144" width="76" height="14" font="2"><b>Networking</b></text>
<text top="129" left="81" width="498" height="14" font="3">OSI protocols to replace TCP/IP. TPC/IP was seen as a dead end and a non-scalable</text>
<text top="147" left="81" width="497" height="14" font="3">system. Networking gurus in the Computing Division were pushing towards the OSI</text>
<text top="165" left="81" width="60" height="14" font="3">protocols.</text>
<text top="219" left="81" width="49" height="14" font="2"><b>1.12.1.3</b></text>
<text top="219" left="144" width="68" height="14" font="2"><b>Processors</b></text>
<text top="255" left="81" width="498" height="14" font="3">Vector or MPP machines. Massively Parallel Processors were considered as the only</text>
<text top="273" left="81" width="498" height="14" font="3">possible alternative in the medium term for our conventional mainframes or clusters</text>
<text top="291" left="81" width="497" height="14" font="3">of workstations. A tightly connected network of RISC processors seemed to be a</text>
<text top="309" left="81" width="90" height="14" font="3">likely solution.</text>
<text top="363" left="81" width="49" height="14" font="2"><b>1.12.1.4</b></text>
<text top="363" left="144" width="119" height="14" font="2"><b>Package Evolution</b></text>
<text top="399" left="81" width="498" height="14" font="3">PAW, GEANT 3, BOS, ZEBRA: Adapt them to F90X. The obvious move for all</text>
<text top="417" left="81" width="471" height="14" font="3">these large packages was a gradual adaptation to the new FORTRAN standard.</text>
<text top="471" left="81" width="49" height="14" font="2"><b>1.12.1.5</b></text>
<text top="471" left="144" width="126" height="14" font="2"><b>Methodology Trend</b></text>
<text top="507" left="81" width="498" height="14" font="3">The Entity Relationship Model (ER) was considered to be the state of the art.</text>
<text top="525" left="81" width="97" height="14" font="3">The ADAMO <a href="pdfxml.html#52">[</a></text>
<text top="525" left="178" width="15" height="14" font="9"><a href="pdfxml.html#52">22</a></text>
<text top="525" left="193" width="386" height="14" font="3"><a href="pdfxml.html#52">] </a>system developed by Paolo Palazzi for the LEP experiment</text>
<text top="543" left="81" width="497" height="14" font="3">ALEPH had been adopted by a few experiments, in particular at DESY. ADAMO</text>
<text top="561" left="81" width="498" height="14" font="3">implemented a table system, using either BOS or ZEBRA underneath, and had</text>
<text top="579" left="81" width="497" height="14" font="3">many similarities with most front-end systems used with relational databases. The</text>
<text top="597" left="81" width="497" height="14" font="3">system had the advantage of providing good documentation for the tables and their</text>
<text top="615" left="81" width="55" height="14" font="3">relations.</text>
<text top="633" left="99" width="480" height="14" font="3">But it was hard to anticipate that the Web would come less than 4 years later, or</text>
<text top="651" left="81" width="497" height="14" font="3">foresee the 1993/1994 revolution for languages and projects and the rapid growth in</text>
<text top="669" left="81" width="277" height="14" font="3">CPU power starting in 1994 (Pentium family).</text>
<text top="732" left="81" width="45" height="16" font="17"><i><b>1.12.2</b></i></text>
<text top="732" left="143" width="319" height="16" font="17"><i><b>Situation in 1997 and the New Crystal Ball</b></i></text>
<text top="777" left="81" width="49" height="14" font="2"><b>1.12.2.1</b></text>
<text top="777" left="144" width="156" height="14" font="2"><b>Programming Language</b></text>
<text top="812" left="81" width="374" height="14" font="3">All the LHC projects were in the process of moving to C</text>
<text top="809" left="454" width="124" height="19" font="10">CC. Some projects</text>
<text top="830" left="81" width="497" height="14" font="3">proposed to use Java when Just In Time compilers would be able to beat the static</text>
<text top="848" left="81" width="497" height="14" font="3">compilers. Some groups (ATLAS in particular) thought that it would be possible to</text>
<text top="866" left="81" width="70" height="14" font="3">use Java, C</text>
<text top="863" left="150" width="428" height="19" font="10">CC and FORTRAN90 in the same application. Java was very clearly</text>
<text top="884" left="81" width="368" height="14" font="3">gaining ground and many would see it as the future language.</text>
</page>
<page number="44" position="absolute" top="0" left="0" height="999" width="659">
<text top="55" left="81" width="13" height="12" font="4">44</text>
<text top="55" left="538" width="40" height="12" font="4">R. Brun</text>
<text top="113" left="99" width="49" height="14" font="3">1994: C</text>
<text top="109" left="148" width="412" height="19" font="10">CC, Internet, OODB and the WEB. The Pentium CPU provides all</text>
<text top="131" left="99" width="389" height="14" font="3">the needed performance without the need of massive parallelism.</text>
<text top="203" left="81" width="49" height="14" font="2"><b>1.12.2.2</b></text>
<text top="203" left="144" width="65" height="14" font="2"><b>Databases</b></text>
<text top="239" left="81" width="498" height="14" font="3">Starting in 1994 and following the decisions to move towards object-oriented</text>
<text top="257" left="81" width="498" height="14" font="3">programming languages, a huge effort to investigate the use of object-oriented</text>
<text top="275" left="81" width="498" height="14" font="3">databases (see Chap. 9) started in all experiments. In 1997 the hype peak for this</text>
<text top="293" left="81" width="497" height="14" font="3">project had been reached. The ODBMS Objectivity system was in use by the BaBar</text>
<text top="311" left="81" width="498" height="14" font="3">experiment at SLAC and also considered by most LHC experiments. A centrally</text>
<text top="329" left="81" width="498" height="14" font="3">managed event store seemed very attractive to many, despite the fact that wide-area</text>
<text top="347" left="81" width="497" height="14" font="3">networking was still very primitive (2 MegaByte/s) and not anticipated to grow as</text>
<text top="365" left="81" width="497" height="14" font="3">fast as it happened a few years later. However, the ﬁrst signs of problems were</text>
<text top="383" left="81" width="498" height="14" font="3">appearing with BaBar: performance issues due to the fact that many programmes</text>
<text top="401" left="81" width="498" height="14" font="3">only reading data had to suffer from the locking mechanism assuming a general</text>
<text top="419" left="81" width="498" height="14" font="3">read and write situation, and reliability problems coming from programmes crashing</text>
<text top="437" left="81" width="498" height="14" font="3">during execution and leaving locks that had to be cleared manually. It is interesting</text>
<text top="455" left="81" width="498" height="14" font="3">to note that nobody at the time had in mind a distributed architecture like the ones</text>
<text top="473" left="81" width="228" height="14" font="3">available today with the Grid systems.</text>
<text top="527" left="81" width="49" height="14" font="2"><b>1.12.2.3</b></text>
<text top="527" left="144" width="116" height="14" font="2"><b>Commercial Tools</b></text>
<text top="563" left="81" width="401" height="14" font="3">These were evaluated for data analysis and visualisation. The LHC</text>
<text top="559" left="482" width="96" height="19" font="10">CC project had</text>
<text top="581" left="81" width="497" height="14" font="3">been launched in 1996, mainly as a concurrent to the new born ROOT system</text>
<text top="599" left="81" width="498" height="14" font="3">started in 1995. A letter from the director of computing Lorenzo Foa to the LHC</text>
<text top="617" left="81" width="289" height="14" font="3">experiments was a clear message against ROOT.</text>
<text top="635" left="99" width="480" height="14" font="3">The vast majority of users were very sceptical about the new ofﬁcial line.</text>
<text top="653" left="81" width="498" height="14" font="3">Most users were still programming in FORTRAN 77 and using PAW as a data</text>
<text top="671" left="81" width="498" height="14" font="3">analysis engine. The management in the experiments and the various committees</text>
<text top="689" left="81" width="497" height="14" font="3">(in particular the infamous LHC Computing Board) had not yet understood that the</text>
<text top="707" left="81" width="497" height="14" font="3">ﬁrst thing to do to move users massively to an object-oriented environment was to</text>
<text top="725" left="81" width="498" height="14" font="3">provide a data analysis and visualisation system that could also deal with objects.</text>
<text top="743" left="81" width="497" height="14" font="3">The only large scale object-oriented package, GEANT 4, was not yet able (and still</text>
<text top="761" left="81" width="310" height="14" font="3">not in 2010!) to write objects or geometries on ﬁles.</text>
<text top="779" left="99" width="480" height="14" font="3">It is hard to remember today that in 1997 a typical hardware conﬁguration</text>
<text top="797" left="81" width="498" height="14" font="3">had about 256 MegaBytes of RAM. A typical big programme used less than 32</text>
<text top="815" left="81" width="498" height="14" font="3">MegaBytes, and comprised less than 500,000 lines of code, statically linked or using</text>
<text top="833" left="81" width="498" height="14" font="3">less than 10 shared libraries. If users had been aware that 10 years later, programmes</text>
<text top="851" left="81" width="497" height="14" font="3">would reach the 2 GigaBytes range and several hundred shared libraries, it is likely</text>
<text top="869" left="81" width="471" height="14" font="3">that they would have been even more reticent to move to the new environment.</text>
</page>
<page number="45" position="absolute" top="0" left="0" height="999" width="659">
<text top="55" left="81" width="6" height="12" font="4">1</text>
<text top="55" left="99" width="381" height="12" font="4">Technologies, Collaborations and Languages: 20 Years of HEP Computing</text>
<text top="55" left="566" width="13" height="12" font="4">45</text>
<text top="93" left="99" width="480" height="14" font="3">Fortunately a few people did not believe in the ofﬁcial line based on commercial</text>
<text top="111" left="81" width="498" height="14" font="3">systems including Objectivity. Despite the fact that the ROOT project was discour-</text>
<text top="129" left="81" width="498" height="14" font="3">aged by the management, more and more people were considering it as a possible</text>
<text top="147" left="81" width="498" height="14" font="3">alternative in case all the other projects failed. The fact that Fermilab chose ROOT</text>
<text top="165" left="81" width="413" height="14" font="3">as a data storage and analysis solution in 1998 was a shock for many.</text>
<text top="229" left="81" width="45" height="16" font="17"><i><b>1.12.3</b></i></text>
<text top="229" left="143" width="128" height="16" font="17"><i><b>Situation in 2011</b></i></text>
<text top="273" left="81" width="49" height="14" font="2"><b>1.12.3.1</b></text>
<text top="273" left="144" width="66" height="14" font="2"><b>Move to C</b></text>
<text top="269" left="210" width="25" height="19" font="10">CC</text>
<text top="309" left="81" width="384" height="14" font="3">It took far more time than expected to move people to C</text>
<text top="305" left="464" width="114" height="19" font="10">CC and the new</text>
<text top="327" left="81" width="498" height="14" font="3">frameworks. The main reason, already mentioned above, is that there is no point</text>
<text top="345" left="81" width="497" height="14" font="3">in producing objects if there is no programme able to analyse these objects. The</text>
<text top="363" left="81" width="498" height="14" font="3">development of a large framework like ROOT has taken a lot of time and effort.</text>
<text top="381" left="81" width="497" height="14" font="3">A robust, efﬁcient and distributed storage system supporting an automatic class</text>
<text top="399" left="81" width="498" height="14" font="3">schema evolution facility has been a big enterprise with evolving requirements once</text>
<text top="417" left="81" width="498" height="14" font="3">users discovered the potential of all the provided solutions. The implementation of</text>
<text top="435" left="81" width="498" height="14" font="3">a set of mathematical and statistical classes was a sine qua non condition before one</text>
<text top="453" left="81" width="497" height="14" font="3">could consider phasing out the FORTRAN-based CERNLIB routines. ROOT is the</text>
<text top="471" left="81" width="497" height="14" font="3">de facto standard for data storage and interactive analysis. However a big effort still</text>
<text top="489" left="81" width="421" height="14" font="3">remains to be done to make the package more robust and easier to use.</text>
<text top="544" left="99" width="461" height="14" font="3">2011: Grid and Cloud computing; Parallel computing is back as clock</text>
<text top="562" left="99" width="461" height="14" font="3">speed is plateauing. Mega-frameworks provide new challenges in software</text>
<text top="580" left="99" width="186" height="14" font="3">development and management.</text>
<text top="653" left="81" width="49" height="14" font="2"><b>1.12.3.2</b></text>
<text top="653" left="144" width="59" height="14" font="2"><b>The Grid</b></text>
<text top="689" left="81" width="498" height="14" font="3">The Grid projects started in 2000 have been major enterprises, consuming a lot</text>
<text top="707" left="81" width="498" height="14" font="3">of manpower with many failing systems. More pragmatic solutions have emerged</text>
<text top="725" left="81" width="497" height="14" font="3">with most of the time experiment-speciﬁc solutions to run bunches of batch jobs in</text>
<text top="743" left="81" width="225" height="14" font="3">parallel. See Chap. 3 for more details.</text>
<text top="797" left="81" width="49" height="14" font="2"><b>1.12.3.3</b></text>
<text top="797" left="144" width="165" height="14" font="2"><b>The Experiment Software</b></text>
<text top="833" left="81" width="498" height="14" font="3">Experiment frameworks are becoming monsters that are more and more difﬁcult</text>
<text top="851" left="81" width="498" height="14" font="3">to install. Running these frameworks on 64 bit machines and using less than</text>
<text top="869" left="81" width="498" height="14" font="3">2 GigaBytes of RAM is a real challenge. Programmes take forever to start because</text>
</page>
<page number="46" position="absolute" top="0" left="0" height="999" width="659">
<text top="55" left="81" width="13" height="12" font="4">46</text>
<text top="55" left="538" width="40" height="12" font="4">R. Brun</text>
<text top="93" left="81" width="498" height="14" font="3">of too much code linked (shared libraries with too many dependencies) and it takes</text>
<text top="111" left="81" width="498" height="14" font="3">time to restructure large systems to take advantage of plug-in managers. A normal</text>
<text top="129" left="81" width="498" height="14" font="3">user has to learn too many things before being able to do something useful. A</text>
<text top="147" left="81" width="498" height="14" font="3">general tendency is to develop a light version of the framework such that some</text>
<text top="165" left="81" width="498" height="14" font="3">interesting classes and utilities can still be used for data analysis and easily ported</text>
<text top="183" left="81" width="95" height="14" font="3">to new systems.</text>
<text top="247" left="81" width="45" height="16" font="17"><i><b>1.12.4</b></i></text>
<text top="247" left="143" width="173" height="16" font="17"><i><b>The Future Challenges</b></i></text>
<text top="291" left="81" width="49" height="14" font="2"><b>1.12.4.1</b></text>
<text top="291" left="144" width="170" height="14" font="2"><b>The Framework Evolution</b></text>
<text top="327" left="81" width="438" height="14" font="3">The impressive changes in HEP software over the past 10 years (see Fig.</text>
<text top="327" left="523" width="19" height="14" font="9"><a href="pdfxml.html#47">1.2</a></text>
<text top="327" left="542" width="37" height="14" font="3"><a href="pdfxml.html#47">) </a>have</text>
<text top="345" left="81" width="498" height="14" font="3">required a big effort of adaptation from thousands of users. The trend towards larger</text>
<text top="363" left="81" width="498" height="14" font="3">and larger applications will continue. This will require more discipline to organise</text>
<text top="381" left="81" width="498" height="14" font="3">the application in a set of libraries that can be dynamically conﬁgurable such that</text>
<text top="399" left="81" width="498" height="14" font="3">the running code in memory is a small fraction of the total code. This will push for</text>
<text top="417" left="81" width="498" height="14" font="3">better services to organise collections of objects in memory and more formalism in</text>
<text top="435" left="81" width="497" height="14" font="3">the organisation of tasks. Data and tasks should be easily browsable to facilitate</text>
<text top="453" left="81" width="497" height="14" font="3">their understanding. Today we organise the code in shared libraries that can be</text>
<text top="471" left="81" width="498" height="14" font="3">dynamically loaded via a plug-in manager. It would be good if instead of using</text>
<text top="489" left="81" width="498" height="14" font="3">pre-compiled shared libraries, an application could reference only source ﬁles on</text>
<text top="507" left="81" width="253" height="14" font="3">the network. For instance a statement like:</text>
<text top="536" left="99" width="279" height="12" font="13">use http://root.cern.ch/root520</text>
<text top="554" left="99" width="306" height="12" font="13">TH1F hist(&#34;myhist&#34;,&#34;test&#34;,100,0,1)</text>
<text top="580" left="81" width="498" height="14" font="3">will give a source path to be looked at when an unknown class (here TH1F) is found.</text>
<text top="598" left="81" width="498" height="14" font="3">In this case the class containing the source for TH1F will be downloaded, compiled</text>
<text top="616" left="81" width="498" height="14" font="3">on the local system and its binary ﬁle cached for further executions. This simple</text>
<text top="634" left="81" width="413" height="14" font="3">feature would considerably simplify the installation of large systems.</text>
<text top="688" left="81" width="49" height="14" font="2"><b>1.12.4.2</b></text>
<text top="688" left="144" width="175" height="14" font="2"><b>The Quest for Performance</b></text>
<text top="724" left="81" width="497" height="14" font="3">It looks like in the foreseeable future the only way to increase performance is to</text>
<text top="742" left="81" width="498" height="14" font="3">use the parallelism coming with the many variants of multi-core CPUs. Two levels</text>
<text top="760" left="81" width="498" height="14" font="3">of parallelism must be considered: coarse and ﬁne grain. Coarse grain parallelism</text>
<text top="778" left="81" width="498" height="14" font="3">assumes that the problem can be decomposed into large units. For example, in HEP</text>
<text top="796" left="81" width="498" height="14" font="3">one can run the same code on many events in parallel or even on many tracks</text>
<text top="814" left="81" width="498" height="14" font="3">within each event. Fine grain assumes that data vectors are produced and short</text>
<text top="832" left="81" width="498" height="14" font="3">algorithms applied to these vectors. The problem is to produce large enough vectors</text>
<text top="850" left="81" width="498" height="14" font="3">such that the algorithms can run on independent data units without interference.</text>
<text top="868" left="81" width="497" height="14" font="3">This is in general quite difﬁcult to achieve because at some point the result of a</text>
<text top="886" left="81" width="498" height="14" font="3">computation must be inserted into another vector at the level above. This requires a</text>
</page>
<page number="47" position="absolute" top="0" left="0" height="999" width="659">
<text top="55" left="81" width="6" height="12" font="4">1</text>
<text top="55" left="99" width="381" height="12" font="4">Technologies, Collaborations and Languages: 20 Years of HEP Computing</text>
<text top="55" left="566" width="13" height="12" font="4">47</text>
<text top="602" left="81" width="497" height="12" font="12"><b>Fig. 1.2 </b>A compilation of the main tools and packages used in HEP ofﬂine software since 1970.</text>
<text top="617" left="81" width="497" height="12" font="4">This compilation includes systems used by at least four experiments. The Y scale indicates the</text>
<text top="632" left="81" width="221" height="12" font="4">relative importance of the system with time</text>
<text top="679" left="81" width="498" height="14" font="3">synchronisation mechanism. Most programmes designed so far have been designed</text>
<text top="697" left="81" width="498" height="14" font="3">for sequential processing. Changing the algorithms to be thread-safe or thread-aware</text>
<text top="715" left="81" width="498" height="14" font="3">is going to be a non-trivial task. Organising a programme in a set of processes</text>
<text top="733" left="81" width="339" height="14" font="3">running in parallel is a bit simpler (like in the PROOF <a href="pdfxml.html#52">[</a></text>
<text top="733" left="420" width="15" height="14" font="9"><a href="pdfxml.html#52">45</a></text>
<text top="733" left="435" width="143" height="14" font="3">] system) (see Chap. 7).</text>
<text top="751" left="81" width="498" height="14" font="3">The right mixture of multi-threading versus multi-processes will depend on the</text>
<text top="769" left="81" width="498" height="14" font="3">evolution of parameters like the amount of RAM, size of caches, disk and network</text>
<text top="787" left="81" width="498" height="14" font="3">speed. In addition to parallel architectures, we will continue to see more and more</text>
<text top="805" left="81" width="417" height="14" font="3">client-server type applications, e.g. data servers like xrootd or dCache <a href="pdfxml.html#52">[</a></text>
<text top="805" left="498" width="15" height="14" font="9"><a href="pdfxml.html#52">59</a></text>
<text top="805" left="512" width="66" height="14" font="3"><a href="pdfxml.html#52">] </a>interfaces</text>
<text top="823" left="81" width="403" height="14" font="3">to relational databases for data set catalogues or calibration objects.</text>
</page>
<page number="48" position="absolute" top="0" left="0" height="999" width="659">
<text top="55" left="81" width="13" height="12" font="4">48</text>
<text top="55" left="538" width="40" height="12" font="4">R. Brun</text>
<text top="93" left="81" width="49" height="14" font="2"><b>1.12.4.3</b></text>
<text top="93" left="144" width="223" height="14" font="2"><b>Interpreted Versus Compiled Code</b></text>
<text top="129" left="81" width="498" height="14" font="3">Ideally an interpreter should be used only for the thin layer organising the</text>
<text top="147" left="81" width="498" height="14" font="3">programme structure. For everything else it would be desirable to use only compiled</text>
<text top="165" left="81" width="498" height="14" font="3">code. However compilers are still far too slow to compile the few thousand lines</text>
<text top="183" left="81" width="497" height="14" font="3">of code typically used in an analysis session. A compiler may take 10 s or more to</text>
<text top="201" left="81" width="497" height="14" font="3">compile an analysis code that will take less than one second to execute, where an</text>
<text top="219" left="81" width="498" height="14" font="3">interpreter will execute in 2 s. Interactive queries should not take more than a few</text>
<text top="237" left="81" width="498" height="14" font="3">seconds. Once the analysis code has been tested on a small data sample, it is then run</text>
<text top="255" left="81" width="498" height="14" font="3">on larger and larger samples where compiled code is a must. It is clearly desirable</text>
<text top="273" left="81" width="498" height="14" font="3">to run the same code with the interpreter in case of short queries and to compile this</text>
<text top="291" left="81" width="497" height="14" font="3">code when running longer queries. Using interpreted languages like Python in the</text>
<text top="309" left="81" width="498" height="14" font="3">data analysis phase is not the solution. Python may slightly speed-up the analysis</text>
<text top="327" left="81" width="497" height="14" font="3">phase for the short queries, but it is not a solution when processing larger data sets.</text>
<text top="345" left="81" width="428" height="14" font="3">We hope that a clean solution could be brought by product like LLVM <a href="pdfxml.html#52">[</a></text>
<text top="345" left="509" width="15" height="14" font="9"><a href="pdfxml.html#52">39</a></text>
<text top="345" left="524" width="9" height="14" font="3">].</text>
<text top="399" left="81" width="49" height="14" font="2"><b>1.12.4.4</b></text>
<text top="399" left="144" width="215" height="14" font="2"><b>Graphical User Interface Systems</b></text>
<text top="435" left="81" width="497" height="14" font="3">These will have to support dynamic widgets created on the ﬂy by interactive scripts.</text>
<text top="453" left="81" width="498" height="14" font="3">These widgets will be able to browse complex data structures and react to the objects</text>
<text top="471" left="81" width="498" height="14" font="3">in these structures. The data structures could be local to the processor or active</text>
<text top="489" left="81" width="498" height="14" font="3">objects on remote machines. More and more work will be devoted to GUIs to follow</text>
<text top="507" left="81" width="498" height="14" font="3">the general trend with new OS’s and the impressive developments with graphics</text>
<text top="525" left="81" width="67" height="14" font="3">processors.</text>
<text top="579" left="81" width="49" height="14" font="2"><b>1.12.4.5</b></text>
<text top="579" left="144" width="102" height="14" font="2"><b>Class Reﬂection</b></text>
<text top="615" left="81" width="498" height="14" font="3">These systems must be part of the language and the compiler. Once this becomes</text>
<text top="633" left="81" width="497" height="14" font="3">available in the standards, one will have to adapt systems like ROOT to use the new</text>
<text top="651" left="81" width="498" height="14" font="3">facility in the interpreters, input and output systems and also the graphical interfaces</text>
<text top="669" left="81" width="498" height="14" font="3">that depend on a large extent on the possibility to query at run time the functionality</text>
<text top="687" left="81" width="59" height="14" font="3">of a class.</text>
<text top="741" left="81" width="49" height="14" font="2"><b>1.12.4.6</b></text>
<text top="741" left="144" width="153" height="14" font="2"><b>Distributed Data Access</b></text>
<text top="777" left="81" width="498" height="14" font="3">With more and more distributed processing on wide area networks with growing</text>
<text top="795" left="81" width="498" height="14" font="3">bandwidths but constant latency, sophisticated data cache systems will be developed</text>
<text top="813" left="81" width="498" height="14" font="3">to optimise not only the ﬁle transfer speed, but also, and in particular, the direct</text>
<text top="831" left="81" width="497" height="14" font="3">access to remote data sets. These techniques that start to appear in systems like</text>
<text top="849" left="81" width="324" height="14" font="3">xrootd or dCache will become increasingly important.</text>
</page>
<page number="49" position="absolute" top="0" left="0" height="999" width="659">
<text top="55" left="81" width="6" height="12" font="4">1</text>
<text top="55" left="99" width="381" height="12" font="4">Technologies, Collaborations and Languages: 20 Years of HEP Computing</text>
<text top="55" left="566" width="13" height="12" font="4">49</text>
<text top="93" left="81" width="49" height="14" font="2"><b>1.12.4.7</b></text>
<text top="93" left="144" width="197" height="14" font="2"><b>Distributed Code Development</b></text>
<text top="129" left="81" width="498" height="14" font="3">Because applications are becoming more complex, written by many people any-</text>
<text top="147" left="81" width="145" height="14" font="3">where on the Internet <a href="pdfxml.html#51">[</a></text>
<text top="147" left="226" width="7" height="14" font="9"><a href="pdfxml.html#51">1</a></text>
<text top="147" left="234" width="345" height="14" font="3"><a href="pdfxml.html#51">]</a>, stricter rules to control the code quality will have to</text>
<text top="165" left="81" width="498" height="14" font="3">be introduced. Code checkers, rule checkers and proﬁlers are already essential</text>
<text top="183" left="81" width="498" height="14" font="3">elements for the LHC experiments. The development of test suites ranging from</text>
<text top="201" left="81" width="497" height="14" font="3">class level validation programmes to more and more complex suites will take a</text>
<text top="219" left="81" width="497" height="14" font="3">substantial fraction of the scientists developing simulation, reconstruction or data</text>
<text top="237" left="81" width="498" height="14" font="3">analysis applications. This will be the price to pay to avoid (or at least minimise)</text>
<text top="255" left="81" width="498" height="14" font="3">running millions of programmes on tens of thousands of processors to discover after</text>
<text top="273" left="81" width="498" height="14" font="3">a few months that all these programmes had one or more serious bugs making the</text>
<text top="291" left="81" width="131" height="14" font="3">resulting data useless.</text>
<text top="345" left="81" width="49" height="14" font="2"><b>1.12.4.8</b></text>
<text top="345" left="144" width="125" height="14" font="2"><b>Code Transparency</b></text>
<text top="381" left="81" width="498" height="14" font="3">Users in large international collaborations will be willing to make this effort if the</text>
<text top="399" left="81" width="498" height="14" font="3">framework in use is not perceived as a huge black box, if it is easily portable to the</text>
<text top="417" left="81" width="498" height="14" font="3">user’s laptop in a small amount of time (minutes and not hours), and, last but not</text>
<text top="435" left="81" width="498" height="14" font="3">least, is not too experiment-speciﬁc. Once users are convinced that their framework</text>
<text top="453" left="81" width="498" height="14" font="3">is solid and scalable, they are the ﬁrst to make suggestions to improve it; otherwise</text>
<text top="471" left="81" width="491" height="14" font="3">they develop their own systems that they can manage to solve their own problems.</text>
<text top="489" left="99" width="480" height="14" font="3">The last decade witnessed an intense and momentous development of HEP</text>
<text top="507" left="81" width="498" height="14" font="3">code. New programming languages have been introduced and HEP code has been</text>
<text top="525" left="81" width="498" height="14" font="3">migrated to the Grid. A large fraction of the software for the next decade is already in</text>
<text top="543" left="81" width="498" height="14" font="3">place or is being written and designed now. This development has been characterised</text>
<text top="561" left="81" width="497" height="14" font="3">by a long elapsed time between the code’s design and its actual deployment in</text>
<text top="579" left="81" width="498" height="14" font="3">production. It is in some sense an important achievement in itself that the whole</text>
<text top="597" left="81" width="497" height="14" font="3">process has stayed “on track” for such a long time and has actually produced the</text>
<text top="615" left="81" width="497" height="14" font="3">intended results, while most of the actors have changed over time, moving into</text>
<text top="633" left="81" width="498" height="14" font="3">and out of the ﬁeld. The stable development of such a large and complex software</text>
<text top="651" left="81" width="498" height="14" font="3">infrastructure has only been possible thanks to the Open Source development</text>
<text top="669" left="81" width="497" height="14" font="3">strategy. This has allowed a community of hundreds of developers and users to</text>
<text top="687" left="81" width="475" height="14" font="3">collaborate on the same products, ensuring both stability and smooth evolution.</text>
<text top="705" left="99" width="480" height="14" font="3">The evolution of computer hardware is continuing at an amazing pace. However</text>
<text top="723" left="81" width="497" height="14" font="3">it is quite likely that we have reaped the low-hanging fruits of this evolution. The</text>
<text top="741" left="81" width="498" height="14" font="3">times when the next generation of processors would deliver performance improve-</text>
<text top="759" left="81" width="498" height="14" font="3">ments on the same code are probably behind us. Clock speeds seem to be plateauing</text>
<text top="777" left="81" width="498" height="14" font="3">around 3 GHz, and the opportunities for future performance improvements are</text>
<text top="795" left="81" width="498" height="14" font="3">linked to the exploitation of parallelism, at many different levels. This will certainly</text>
<text top="813" left="81" width="497" height="14" font="3">require an evolution of the software development paradigm and a redeﬁnition of</text>
<text top="831" left="81" width="498" height="14" font="3">the role of the framework in HEP software architecture. The introduction of very</text>
<text top="849" left="81" width="498" height="14" font="3">powerful Graphics Processing Units (GPUs) further complicates the picture, as they</text>
<text top="867" left="81" width="497" height="14" font="3">offer the opportunity of obtaining very attractive performance gains, at the price of</text>
<text top="885" left="81" width="319" height="14" font="3">using special or constrained programming languages.</text>
</page>
<page number="50" position="absolute" top="0" left="0" height="999" width="659">
<text top="55" left="81" width="13" height="12" font="4">50</text>
<text top="55" left="538" width="40" height="12" font="4">R. Brun</text>
<text top="93" left="99" width="479" height="14" font="3">Most probably this will introduce additional requirements on code quality. We</text>
<text top="111" left="81" width="423" height="14" font="3">are already seeing that very complex and powerful languages, such as C</text>
<text top="108" left="504" width="75" height="19" font="10">CC, require</text>
<text top="129" left="81" width="498" height="14" font="3">competence and substantial discipline from the code developers. Errors introduced</text>
<text top="147" left="81" width="498" height="14" font="3">by careless programming, or simply lack of understanding of the language syntax,</text>
<text top="165" left="81" width="498" height="14" font="3">can be very hard to spot. Variable scoping and virtual memory allocation and</text>
<text top="183" left="81" width="498" height="14" font="3">deallocation require very careful handling in large frameworks, and even “correct”</text>
<text top="201" left="81" width="498" height="14" font="3">user code can lead to unintended nasty side effects on programme memory footprint</text>
<text top="219" left="81" width="497" height="14" font="3">and performance. This calls for increased user training. FORTRAN could be</text>
<text top="237" left="81" width="498" height="14" font="3">learned in a week and, although writing good FORTRAN code required advanced</text>
<text top="255" left="81" width="498" height="14" font="3">computing skills, the amount of “damage” that a careless programmer could inﬂict</text>
<text top="273" left="81" width="498" height="14" font="3">on the framework was limited at least in the means if not in the results. To help</text>
<text top="291" left="81" width="497" height="14" font="3">in improving the quality of code and its readability during debugging sessions,</text>
<text top="309" left="81" width="498" height="14" font="3">“coding conventions” have been introduced by the different HEP experiments.</text>
<text top="327" left="81" width="497" height="14" font="3">These are indeed very useful to avoid common mistakes, however they are also</text>
<text top="345" left="81" width="498" height="14" font="3">very hard to enforce on users, who do not always understand their importance.</text>
<text top="363" left="81" width="498" height="14" font="3">Moreover, automatic tools to check code compliance with the coding conventions</text>
<text top="381" left="81" width="498" height="14" font="3">are not easy to ﬁnd on the market, and several “conventions” are very hard to check</text>
<text top="399" left="81" width="497" height="14" font="3">automatically. The general lesson to be drawn is that computing training has to be</text>
<text top="417" left="81" width="498" height="14" font="3">substantially rethought, as well as code convention and architecture at a very early</text>
<text top="435" left="81" width="121" height="14" font="3">stage of any project.</text>
<text top="499" left="81" width="32" height="16" font="8"><b>1.13</b></text>
<text top="499" left="129" width="260" height="16" font="8"><b>Conclusions and Lessons Learned</b></text>
<text top="543" left="81" width="498" height="14" font="3">Several years of software development, deployment and maintenance have taught us</text>
<text top="561" left="81" width="497" height="14" font="3">quite a number of lessons about producing software for High Energy Physics. We</text>
<text top="579" left="81" width="498" height="14" font="3">think we can summarise the major points as follows. A large software project cannot</text>
<text top="597" left="81" width="498" height="14" font="3">be created by a committee. Only a very small team sharing the same views can do</text>
<text top="615" left="81" width="498" height="14" font="3">it. It is essential to have a demonstration prototype as soon as possible to show</text>
<text top="633" left="81" width="498" height="14" font="3">the project directions. Once the prototype has been exposed to different working</text>
<text top="651" left="81" width="498" height="14" font="3">conditions, one can expand the development team step by step. The development</text>
<text top="669" left="81" width="497" height="14" font="3">team must demonstrate its ability to deliver soon and frequently new releases of</text>
<text top="687" left="81" width="497" height="14" font="3">their product. Development teams in HEP are distributed on all continents. The</text>
<text top="705" left="81" width="498" height="14" font="3">development team must put in place a support system using a problem tracking</text>
<text top="723" left="81" width="498" height="14" font="3">tool and must be ready to answer problems as rapidly as possible. The quality of</text>
<text top="741" left="81" width="498" height="14" font="3">the support is far more important than new features in the system. The development</text>
<text top="759" left="81" width="498" height="14" font="3">of a test suite for a large system is of vital importance. It may take as much time</text>
<text top="777" left="81" width="497" height="14" font="3">to develop as the target software itself. It must include not only unit tests like a</text>
<text top="795" left="81" width="498" height="14" font="3">class or a package but also real examples testing the combination of all features.</text>
<text top="813" left="81" width="498" height="14" font="3">Code coverage tools are important to check for untested code. Automatic nightly</text>
<text top="831" left="81" width="497" height="14" font="3">builds and tests are vital in today’s large systems. The development team must</text>
<text top="849" left="81" width="498" height="14" font="3">proceed in a way which generates as much feedback as possible from all categories</text>
<text top="867" left="81" width="498" height="14" font="3">of users. In particular negative feed-backs are of crucial importance. They may</text>
<text top="885" left="81" width="497" height="14" font="3">be the signs of misunderstandings, internal politics, or may be just the result of</text>
</page>
<page number="51" position="absolute" top="0" left="0" height="999" width="659">
<text top="55" left="81" width="6" height="12" font="4">1</text>
<text top="55" left="99" width="381" height="12" font="4">Technologies, Collaborations and Languages: 20 Years of HEP Computing</text>
<text top="55" left="566" width="13" height="12" font="4">51</text>
<text top="93" left="81" width="497" height="14" font="3">poor documentation. Once a project is ﬂying, it is important to not sleep on its</text>
<text top="111" left="81" width="498" height="14" font="3">success. The computing ﬁeld is moving rapidly, new techniques may appear, forcing</text>
<text top="129" left="81" width="498" height="14" font="3">developers to make new interfaces or optimise the performance. Current software</text>
<text top="147" left="81" width="498" height="14" font="3">projects in HEP last far more than 20 years. When a project expands in scope</text>
<text top="165" left="81" width="498" height="14" font="3">and manpower, it is important to preserve the internal communication and the team</text>
<text top="183" left="81" width="497" height="14" font="3">spirit. Participants must see the project as their project and be highly motivated to</text>
<text top="201" left="81" width="497" height="14" font="3">improve it. It is probably the most difﬁcult task for the project manager to sustain</text>
<text top="219" left="81" width="327" height="14" font="3">the creativity and the motivation of the team members.</text>
<text top="283" left="81" width="83" height="16" font="8"><b>References</b></text>
<text top="326" left="87" width="391" height="12" font="4">1. Abbate, J.: Inventing the Internet, New edn. MIT Press, Cambridge (2000)</text>
<text top="341" left="87" width="491" height="12" font="4">2. Andreessen, M., Bina, E.: NCSA Mosaic: A Global Hypermedia System. Internet Res.</text>
<text top="356" left="100" width="444" height="12" font="4">(Bingley, U.K.: Emerald Group Publishing Limited) <b>4</b>(1):7–17 (1994) ISSN 1066-2243</text>
<text top="371" left="87" width="491" height="12" font="4">3. Battistoni, G. et al.: The FLUKA code: Description and benchmarking. In: Proceedings of</text>
<text top="385" left="100" width="478" height="12" font="4">the Hadronic Shower Simulation Workshop 2006, Fermilab 6–8 September 2006, M.Albrow,</text>
<text top="400" left="100" width="314" height="12" font="4">R. Raja (eds.) AIP Conference Proceeding 896, 31-49, (2007)</text>
<text top="415" left="87" width="491" height="12" font="4">4. Berezhnoi, V., Brun, R., Nikitin, S., Petrovykh, Y., Sikolenko, V.: COMIS, Compilation and</text>
<text top="430" left="100" width="302" height="12" font="4">Interpretation System CERN Program Library L210 (1988)</text>
<text top="445" left="87" width="491" height="12" font="4">5. Bettels, J., Myers, D.R.: The pions graphics system. IEEE Comput. Graph. Appl. <b>6</b>(7), 30–38</text>
<text top="460" left="100" width="34" height="12" font="4">(1986)</text>
<text top="475" left="87" width="412" height="12" font="4">6. Bos, K.: The Moose project. Comput. Phys. Comm. <b>110</b>(1-3), 160–163 (1998)</text>
<text top="490" left="87" width="491" height="12" font="4">7. Brun, R., Couet, O., Cremel, N.: HPLOT User Guide – Version 5. CERN Program Library,</text>
<text top="505" left="100" width="65" height="12" font="4">Y251 (1988)</text>
<text top="520" left="87" width="491" height="12" font="4">8. Brun, R., Couet, O., Cremel, N.: HPLOT User Guide – Version 5. CERN Program Library,</text>
<text top="535" left="100" width="65" height="12" font="4">Y251 (1988)</text>
<text top="550" left="87" width="491" height="12" font="4">9. Brun, R., et al.: Data mining with PIAF. Computing in High Energy Physics ’94, 13–22.</text>
<text top="565" left="100" width="309" height="12" font="4">Lawrence Berkeley Lab. - LBL-35822, San Francisco (1994)</text>
<text top="580" left="81" width="328" height="12" font="4">10. Brun, R., et al.: ZCEDEX User’s Guide, CERN DD/EE/80-6</text>
<text top="595" left="81" width="497" height="12" font="4">11. Brun, R., et al.: GEANT3 – Detector Description and Simulation Tool. CERN Program Library</text>
<text top="610" left="100" width="115" height="12" font="4">Long Writeup W5013.</text>
<text top="610" left="219" width="346" height="12" font="6"><a href="http://wwwasdoc.web.cern.ch/wwwasdoc/geant_html3/geantall.html">http://wwwasdoc.web.cern.ch/wwwasdoc/geant html3/geantall.html</a></text>
<text top="625" left="81" width="497" height="12" font="4">12. Brun, R., et al.: HTV – Interactive Histogramming and Visualisation. Documentation ﬁle not</text>
<text top="639" left="100" width="96" height="12" font="4">available anymore.</text>
<text top="654" left="81" width="497" height="12" font="4">13. Brun, R., et al.: PAW – Physics Analysis Workstation. The Complete CERN Program Library.</text>
<text top="669" left="100" width="101" height="12" font="4">Version 1.07 (1987)</text>
<text top="684" left="81" width="497" height="12" font="4">14. Brun, R., Lienart, D.: HBOOK User Guide – Version 4. CERN Program Library, Y250 (1988)</text>
<text top="699" left="81" width="497" height="12" font="4">15. Brun, R., Zanarini, P.: KUIP – Kit for a User Interface Package. CERN Program Library, I202.</text>
<text top="714" left="100" width="34" height="12" font="4">(1988)</text>
<text top="729" left="81" width="497" height="12" font="4">16. Brun, R., Zoll, J.: ZEBRA – Data Structure Management System. CERN Program Library,</text>
<text top="744" left="100" width="65" height="12" font="4">Q100 (1989)</text>
<text top="759" left="81" width="498" height="12" font="4">17. Brun, R., Brun, M., Rademakers, A. CMZ – A source code management system. Comput.</text>
<text top="774" left="100" width="198" height="12" font="4">Phys. Comm. <b>57</b>(1-3), 235–238 (1989)</text>
<text top="789" left="81" width="497" height="12" font="4">18. Brun, R., Carena, F. et al.: ZBOOK - User Guide and Reference Manual Program Library</text>
<text top="804" left="100" width="105" height="12" font="4">Q210. CERN (1984)</text>
<text top="819" left="81" width="498" height="12" font="4">19. B¨ock, R., Brun, R., Couet, O., Nierhaus, R., Cremel, N., Vandoni, C., Zanarini,P.: HIGZ – High</text>
<text top="834" left="100" width="400" height="12" font="4">level Interface to Graphics and ZEBRA. CERN Program Library, Q120 (1988)</text>
<text top="849" left="81" width="497" height="12" font="4">20. Fass`o, A., et al.: FLUKA: a multi-particle transport code CERN-2005-10 (2005), INFN/</text>
<text top="864" left="100" width="124" height="12" font="4">TC 05/11, SLAC-R-773</text>
<text top="879" left="81" width="437" height="12" font="4">21. Fesefeldt, H.: GHEISHA RWTH Aachen Report PITHA 85/02. L3 Collab. (1987)</text>
</page>
<page number="52" position="absolute" top="0" left="0" height="999" width="659">
<text top="55" left="81" width="13" height="12" font="4">52</text>
<text top="55" left="538" width="40" height="12" font="4">R. Brun</text>
<text top="95" left="81" width="497" height="12" font="4">22. Fisher, S.M., Palazzi, P.: Using a data model from software design to Data Analysis: What have</text>
<text top="110" left="100" width="233" height="12" font="4">we learned? Comput. Phys. Comm. <b>57 </b>(1989)</text>
<text top="125" left="81" width="497" height="12" font="4">23. Foley, J., van Dam, A.: Fundamentals of interactive computer graphics. Addison Wesley</text>
<text top="140" left="100" width="188" height="12" font="4">Longman Publishing Co, MA (1982)</text>
<text top="155" left="81" width="497" height="12" font="4">24. Hopgood, F.R.A.: Introduction to the graphical kernel system (GKS). Academic Press, London</text>
<text top="170" left="100" width="148" height="12" font="4">(1983). ISBN 0-12-355570-1</text>
<text top="185" left="81" width="16" height="12" font="4">25.</text>
<text top="185" left="100" width="153" height="12" font="6"><a href="http://aleph.web.cern.ch/aleph">http://aleph.web.cern.ch/aleph</a></text>
<text top="200" left="81" width="16" height="12" font="4">26.</text>
<text top="200" left="100" width="118" height="12" font="6"><a href="http://aliceinfo.cern.ch/">http://aliceinfo.cern.ch/</a></text>
<text top="214" left="81" width="16" height="12" font="4">27.</text>
<text top="214" left="100" width="457" height="12" font="6"><a href="http://atlas-computing.web.cern.ch/atlas-computing/packages/athenaCore/athenaCore.php">http://atlas-computing.web.cern.ch/atlas-computing/packages/athenaCore/athenaCore.php</a></text>
<text top="229" left="81" width="16" height="12" font="4">28.</text>
<text top="229" left="100" width="69" height="12" font="6"><a href="http://atlas.ch">http://atlas.ch</a></text>
<text top="244" left="81" width="16" height="12" font="4">29.</text>
<text top="244" left="100" width="142" height="12" font="6"><a href="http://cms.web.cern.ch/cms/">http://cms.web.cern.ch/cms/</a></text>
<text top="259" left="81" width="16" height="12" font="4">30.</text>
<text top="259" left="100" width="132" height="12" font="6"><a href="http://delphiwww.cern.ch/">http://delphiwww.cern.ch/</a></text>
<text top="274" left="81" width="16" height="12" font="4">31.</text>
<text top="274" left="100" width="228" height="12" font="6"><a href="http://geant4.web.cern.ch/geant4/index.shtml">http://geant4.web.cern.ch/geant4/index.shtml</a></text>
<text top="289" left="81" width="16" height="12" font="4">32.</text>
<text top="289" left="100" width="171" height="12" font="6"><a href="http://http://monalisa.caltech.edu/">http://http://monalisa.caltech.edu/</a></text>
<text top="304" left="81" width="16" height="12" font="4">33.</text>
<text top="304" left="100" width="121" height="12" font="6"><a href="http://l3.web.cern.ch/l3/">http://l3.web.cern.ch/l3/</a></text>
<text top="319" left="81" width="16" height="12" font="4">34.</text>
<text top="319" left="100" width="132" height="12" font="6"><a href="http://lcg.web.cern.ch/lcg/">http://lcg.web.cern.ch/lcg/</a></text>
<text top="334" left="81" width="16" height="12" font="4">35.</text>
<text top="334" left="100" width="196" height="12" font="6"><a href="http://lcgapp.cern.ch/project/blueprint/">http://lcgapp.cern.ch/project/blueprint/</a></text>
<text top="349" left="81" width="16" height="12" font="4">36.</text>
<text top="349" left="100" width="183" height="12" font="6"><a href="http://lcgapp.cern.ch/project/persist/">http://lcgapp.cern.ch/project/persist/</a></text>
<text top="364" left="81" width="16" height="12" font="4">37.</text>
<text top="364" left="100" width="465" height="12" font="6"><a href="http://lhcb-comp.web.cern.ch/lhcb-comp/Frameworks/Gaudi/ http://ieeexplore.ieee.org/iel5/23/34478/01645038.pdf">http://lhcb-comp.web.cern.ch/lhcb-comp/Frameworks/Gaudi/http://ieeexplore.ieee.org/iel5/</a></text>
<text top="379" left="100" width="122" height="12" font="6"><a href="http://lhcb-comp.web.cern.ch/lhcb-comp/Frameworks/Gaudi/ http://ieeexplore.ieee.org/iel5/23/34478/01645038.pdf">23/34478/01645038.pdf</a></text>
<text top="394" left="81" width="16" height="12" font="4">38.</text>
<text top="394" left="100" width="144" height="12" font="6"><a href="http://lhcb.web.cern.ch/lhcb/">http://lhcb.web.cern.ch/lhcb/</a></text>
<text top="409" left="81" width="16" height="12" font="4">39.</text>
<text top="409" left="100" width="74" height="12" font="6"><a href="http://llvm.org">http://llvm.org</a></text>
<text top="424" left="81" width="16" height="12" font="4">40.</text>
<text top="424" left="100" width="191" height="12" font="6"><a href="http://na49info.web.cern.ch/na49info/">http://na49info.web.cern.ch/na49info/</a></text>
<text top="439" left="81" width="16" height="12" font="4">41.</text>
<text top="439" left="100" width="148" height="12" font="6"><a href="http://opal.web.cern.ch/Opal/">http://opal.web.cern.ch/Opal/</a></text>
<text top="454" left="81" width="16" height="12" font="4">42.</text>
<text top="454" left="100" width="106" height="12" font="6"><a href="http://petra3.desy.de/">http://petra3.desy.de/</a></text>
<text top="469" left="81" width="16" height="12" font="4">43.</text>
<text top="469" left="100" width="190" height="12" font="6"><a href="http://root.cern.ch/drupal/content/cint">http://root.cern.ch/drupal/content/cint</a></text>
<text top="484" left="81" width="16" height="12" font="4">44.</text>
<text top="484" left="100" width="204" height="12" font="6"><a href="http://root.cern.ch/drupal/content/g4root">http://root.cern.ch/drupal/content/g4root</a></text>
<text top="499" left="81" width="16" height="12" font="4">45.</text>
<text top="499" left="100" width="198" height="12" font="6"><a href="http://root.cern.ch/drupal/content/proof">http://root.cern.ch/drupal/content/proof</a></text>
<text top="513" left="81" width="16" height="12" font="4">46.</text>
<text top="513" left="100" width="170" height="12" font="6"><a href="http://seal.web.cern.ch/project/pi/">http://seal.web.cern.ch/project/pi/</a></text>
<text top="528" left="81" width="16" height="12" font="4">47.</text>
<text top="528" left="100" width="141" height="12" font="6"><a href="http://seal.web.cern.ch/seal/">http://seal.web.cern.ch/seal/</a></text>
<text top="543" left="81" width="16" height="12" font="4">48.</text>
<text top="543" left="100" width="146" height="12" font="6"><a href="http://subversion.apache.org/">http://subversion.apache.org/</a></text>
<text top="558" left="81" width="16" height="12" font="4">49.</text>
<text top="558" left="100" width="158" height="12" font="6"><a href="http://trolltech.com/products/qt">http://trolltech.com/products/qt</a></text>
<text top="573" left="81" width="16" height="12" font="4">50.</text>
<text top="573" left="100" width="127" height="12" font="6"><a href="http://www-cdf.fnal.gov/">http://www-cdf.fnal.gov/</a></text>
<text top="588" left="81" width="16" height="12" font="4">51.</text>
<text top="588" left="100" width="120" height="12" font="6"><a href="http://www-d0.fnal.gov">http://www-d0.fnal.gov</a></text>
<text top="603" left="81" width="16" height="12" font="4">52.</text>
<text top="603" left="100" width="128" height="12" font="6"><a href="http://www-hades.gsi.de/">http://www-hades.gsi.de/</a></text>
<text top="618" left="81" width="16" height="12" font="4">53.</text>
<text top="618" left="100" width="137" height="12" font="6"><a href="http://www-numi.fnal.gov/">http://www-numi.fnal.gov/</a></text>
<text top="633" left="81" width="16" height="12" font="4">54.</text>
<text top="633" left="100" width="130" height="12" font="6"><a href="http://www-panda.gsi.de/">http://www-panda.gsi.de/</a></text>
<text top="648" left="81" width="16" height="12" font="4">55.</text>
<text top="648" left="100" width="218" height="12" font="6"><a href="http://www-public.slac.stanford.edu/babar/">http://www-public.slac.stanford.edu/babar/</a></text>
<text top="663" left="81" width="16" height="12" font="4">56.</text>
<text top="663" left="100" width="99" height="12" font="6"><a href="http://www.bnl.gov">http://www.bnl.gov</a></text>
<text top="678" left="81" width="16" height="12" font="4">57.</text>
<text top="678" left="100" width="122" height="12" font="6"><a href="http://www.bnl.gov/rhic">http://www.bnl.gov/rhic</a></text>
<text top="693" left="81" width="16" height="12" font="4">58.</text>
<text top="693" left="100" width="117" height="12" font="6"><a href="http://www.cmtsite.org">http://www.cmtsite.org</a></text>
<text top="708" left="81" width="16" height="12" font="4">59.</text>
<text top="708" left="100" width="119" height="12" font="6"><a href="http://www.dcache.org/">http://www.dcache.org/</a></text>
<text top="723" left="81" width="16" height="12" font="4">60.</text>
<text top="723" left="100" width="155" height="12" font="6"><a href="http://www.egs.org/News.html">http://www.egs.org/News.html</a></text>
<text top="738" left="81" width="16" height="12" font="4">61.</text>
<text top="738" left="100" width="106" height="12" font="6"><a href="http://www.fnal.gov/">http://www.fnal.gov/</a></text>
<text top="753" left="81" width="16" height="12" font="4">62.</text>
<text top="753" left="100" width="332" height="12" font="6"><a href="http://www.gsi.de/forschung/fair_experiments/CBM/index_e.html">http://www.gsi.de/forschung/fair experiments/CBM/index e.html</a></text>
<text top="767" left="81" width="16" height="12" font="4">63.</text>
<text top="767" left="100" width="178" height="12" font="6"><a href="http://www.gsi.de/portrait/fair.html">http://www.gsi.de/portrait/fair.html</a></text>
<text top="782" left="81" width="16" height="12" font="4">64.</text>
<text top="782" left="100" width="102" height="12" font="6"><a href="http://www.kde.org/">http://www.kde.org/</a></text>
<text top="797" left="81" width="16" height="12" font="4">65.</text>
<text top="797" left="100" width="119" height="12" font="6"><a href="http://www.lngs.infn.it/">http://www.lngs.infn.it/</a></text>
<text top="812" left="81" width="16" height="12" font="4">66.</text>
<text top="812" left="100" width="173" height="12" font="6"><a href="http://www.mncnp.org/News.html">http://www.mncnp.org/News.html</a></text>
<text top="827" left="81" width="16" height="12" font="4">67.</text>
<text top="827" left="100" width="139" height="12" font="6"><a href="http://www.nongnu.org/cvs">http://www.nongnu.org/cvs</a></text>
<text top="842" left="81" width="16" height="12" font="4">68.</text>
<text top="842" left="100" width="142" height="12" font="6"><a href="http://www.objectivity.com/">http://www.objectivity.com/</a></text>
<text top="857" left="81" width="16" height="12" font="4">69.</text>
<text top="857" left="100" width="169" height="12" font="6"><a href="http://www.opengroup.org/motif/">http://www.opengroup.org/motif/</a></text>
<text top="872" left="81" width="16" height="12" font="4">70.</text>
<text top="872" left="100" width="121" height="12" font="6"><a href="http://www.redhat.com/">http://www.redhat.com/</a></text>
<text top="887" left="81" width="16" height="12" font="4">71.</text>
<text top="887" left="100" width="127" height="12" font="6"><a href="http://www.siggraph.org/">http://www.siggraph.org/</a></text>
</page>
<page number="53" position="absolute" top="0" left="0" height="999" width="659">
	<fontspec id="18" size="10" family="Times" color="#131413"/>
	<fontspec id="19" size="6" family="Times" color="#131413"/>
<text top="55" left="81" width="6" height="12" font="4">1</text>
<text top="55" left="99" width="381" height="12" font="4">Technologies, Collaborations and Languages: 20 Years of HEP Computing</text>
<text top="55" left="566" width="13" height="12" font="4">53</text>
<text top="95" left="81" width="16" height="12" font="4">72.</text>
<text top="95" left="100" width="294" height="12" font="6"><a href="http://wwwasd.web.cern.ch/wwwasd/lhc++/indexold.html">http://wwwasd.web.cern.ch/wwwasd/lhc++/indexold.html</a></text>
<text top="110" left="81" width="16" height="12" font="4">73.</text>
<text top="110" left="100" width="156" height="12" font="6"><a href="http://xrootd.slac.stanford.edu/">http://xrootd.slac.stanford.edu/</a></text>
<text top="125" left="81" width="16" height="12" font="4">74.</text>
<text top="125" left="100" width="87" height="12" font="6"><a href="http:/root.cern.ch">http:/root.cern.ch</a></text>
<text top="140" left="81" width="16" height="12" font="4">75.</text>
<text top="137" left="100" width="13" height="17" font="18">10</text>
<text top="136" left="113" width="8" height="12" font="19">th</text>
<text top="140" left="126" width="453" height="12" font="4">International Conference On Computing In High-Energy Physics (CHEP 92) 21–25 Sept</text>
<text top="155" left="100" width="111" height="12" font="4">1992, Annecy, France</text>
<text top="170" left="81" width="464" height="12" font="4">76. Kali’s, M., Whitlock, P.: Monte Carlo Methods 2nd edn. Wiley VCH, Weinheim (2008)</text>
<text top="185" left="81" width="445" height="12" font="4">77. Metcalf, M., Reid, J.: Fortran 90 Explained Oxford University Press, Oxford (1990)</text>
<text top="200" left="81" width="497" height="12" font="4">78. Michener, J., van Dam, A.: Functional overview of the core system with glossary. ACM</text>
<text top="214" left="100" width="186" height="12" font="4">Comput. Surv. (CSUR) <b>10</b>(4) (1978)</text>
<text top="229" left="81" width="484" height="12" font="4">79. Miller, R.: GD3 Program Library long writeup J510. CERN Data Handling Division (1976)</text>
<text top="244" left="81" width="497" height="12" font="4">80. Moore, Gordon E.: Cramming more components onto integrated circuits Electronics Magazine,</text>
<text top="259" left="100" width="56" height="12" font="4">p. 4 (1965)</text>
<text top="274" left="81" width="100" height="12" font="4">81. See for instance</text>
<text top="274" left="185" width="158" height="12" font="6"><a href="http://www.nag.co.uk/sc22wg5">http://www.nag.co.uk/sc22wg5</a></text>
<text top="274" left="346" width="88" height="12" font="4">and links therein.</text>
<text top="289" left="81" width="94" height="12" font="4">82. See PHIGS on</text>
<text top="289" left="178" width="113" height="12" font="6"><a href="http://www.iso.org/iso">http://www.iso.org/iso</a></text>
<text top="304" left="81" width="497" height="12" font="4">83. Shiers, J.: FATMEN - Distributed File and Tape Management. CERN Program Library Q123.</text>
<text top="319" left="100" width="71" height="12" font="4">CERN (1992)</text>
<text top="334" left="81" width="497" height="12" font="4">84. Shiers, J.: HEPDB – Database Management Package. CERN Program Library entry Q180</text>
<text top="349" left="100" width="34" height="12" font="4">(1993)</text>
<text top="364" left="81" width="497" height="12" font="4">85. Wellisch, J.-P., Williams, C., Ashby, S.: SCRAM: Software conﬁguration and management for</text>
<text top="379" left="100" width="478" height="12" font="4">the LHC Computing Grid project. Computing in High Energy and Nuclear Physics, La Jolla,</text>
<text top="394" left="100" width="88" height="12" font="4">California (2003)</text>
<text top="409" left="81" width="482" height="12" font="4">86. Zoll, J., B¨ock, R. et al.: HYDRA Topical Manual, book MQ, basic HYDRA. CERN (1981)</text>
</page>
</pdf2xml>
